#include "editor.h"

using namespace roo_display;

// Image file ic_outlined_36_editor_add_chart 36x36, 4-bit Alpha,  RLE, 272 bytes.
static const uint8_t ic_outlined_36_editor_add_chart_data[] PROGMEM = {
  0x20, 0x48, 0x09, 0x27, 0x48, 0x23, 0x77, 0x34, 0x09, 0xFF, 0x94, 0x07, 0xA0, 0x73, 0x04, 0xFF,
  0xA4, 0x07, 0xA0, 0x73, 0x07, 0xA0, 0xB8, 0x09, 0x17, 0x18, 0x23, 0x77, 0xBA, 0x83, 0xB7, 0x73,
  0x7A, 0x07, 0x77, 0x07, 0xF9, 0x00, 0x7A, 0x07, 0x77, 0x07, 0xF9, 0x00, 0x7A, 0x07, 0x71, 0x82,
  0x37, 0x73, 0x28, 0x23, 0x77, 0xBA, 0x83, 0xB7, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x75, 0x07,
  0xA0, 0x73, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x50, 0x7A, 0x07, 0x30, 0x7A, 0x07, 0x71, 0x07,
  0xA0, 0x75, 0x82, 0x37, 0x73, 0x30, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x50, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07,
  0xA0, 0x72, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x0B, 0x80, 0xA0, 0x70,
  0xBA, 0x07, 0x04, 0xFF, 0xFD, 0x81, 0x40, 0x9F, 0xFF, 0xB0, 0x93, 0x04, 0x80, 0xA2, 0x70, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_add_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_add_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_add_comment 36x36, 4-bit Alpha,  RLE, 145 bytes.
static const uint8_t ic_outlined_36_editor_add_comment_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xFF, 0xB8, 0x2D, 0x80, 0x8F, 0xFF, 0xF0, 0x80, 0xDF, 0xFF, 0xF0, 0xDB, 0x77,
  0x73, 0xE7, 0x38, 0x23, 0x77, 0x37, 0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77,
  0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E,
  0x40, 0x38, 0x01, 0x70, 0xBA, 0x0B, 0x80, 0x17, 0x03, 0x4E, 0x40, 0x7F, 0xF0, 0x74, 0xE4, 0x07,
  0xFF, 0x07, 0x4E, 0x40, 0x38, 0x01, 0x70, 0xBA, 0x0B, 0x80, 0x17, 0x03, 0x4E, 0x73, 0x07, 0xA0,
  0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x07, 0xA0, 0x77,
  0x3E, 0x73, 0x07, 0xA0, 0x77, 0x3E, 0x73, 0x82, 0x37, 0x73, 0x73, 0xE7, 0x77, 0x3B, 0x0D, 0xFF,
  0xFB, 0x0B, 0x1B, 0x08, 0xFF, 0xFC, 0x0B, 0xB1, 0x08, 0x0D, 0xFF, 0xFE, 0x77, 0x73, 0x07, 0xD7,
  0x77, 0x40, 0x7C, 0x77, 0x75, 0x07, 0xB7, 0x77, 0x60, 0x7A, 0x77, 0x77, 0x07, 0x97, 0x77, 0x71,
  0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_add_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_add_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_horizontal_center 36x36, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_outlined_36_editor_align_horizontal_center_data[] PROGMEM = {
  0x75, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A,
  0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x50,
  0x38, 0x07, 0x70, 0xBA, 0x0B, 0x80, 0x77, 0x03, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07,
  0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x77, 0x50, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77,
  0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0,
  0x77, 0x73, 0xFF, 0xC7, 0x3F, 0xFC, 0x73, 0xFF, 0xC7, 0x3F, 0xFC, 0x73, 0x80, 0x37, 0x0B, 0xA0,
  0xB8, 0x03, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77,
  0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07,
  0xA0, 0x77, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_horizontal_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 31, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_horizontal_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_horizontal_left 36x36, 4-bit Alpha,  RLE, 82 bytes.
static const uint8_t ic_outlined_36_editor_align_horizontal_left_data[] PROGMEM = {
  0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7,
  0x77, 0x6B, 0x38, 0x0A, 0x47, 0xB3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE7,
  0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB3, 0xFF,
  0x97, 0x2B, 0x3F, 0xF9, 0x72, 0xB3, 0xFF, 0x97, 0x2B, 0x3F, 0xF9, 0x72, 0xB3, 0x80, 0x93, 0x77,
  0x2B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B,
  0x77, 0x76,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_horizontal_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_horizontal_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_horizontal_right 36x36, 4-bit Alpha,  RLE, 82 bytes.
static const uint8_t ic_outlined_36_editor_align_horizontal_right_data[] PROGMEM = {
  0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77,
  0x76, 0xB8, 0x0A, 0x47, 0x3F, 0xFF, 0xE3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3, 0xFF, 0xFE, 0x3B, 0x77,
  0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x72, 0xFF,
  0x93, 0xB7, 0x2F, 0xF9, 0x3B, 0x72, 0xFF, 0x93, 0xB7, 0x2F, 0xF9, 0x3B, 0x72, 0x80, 0x93, 0x73,
  0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0xB7,
  0x77, 0x6B,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_horizontal_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_horizontal_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_vertical_bottom 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_align_vertical_bottom_data[] PROGMEM = {
  0x70, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C,
  0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C, 0x77, 0x74,
  0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C,
  0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70,
  0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0,
  0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07,
  0xC6, 0xC0, 0x78, 0x09, 0xB5, 0x08, 0x09, 0xA6, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_vertical_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_vertical_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_vertical_center 36x36, 4-bit Alpha,  RLE, 136 bytes.
static const uint8_t ic_outlined_36_editor_align_vertical_center_data[] PROGMEM = {
  0x71, 0x03, 0x80, 0x07, 0x77, 0x75, 0x07, 0xC7, 0x77, 0x50, 0x7C, 0x77, 0x75, 0x07, 0xC7, 0x77,
  0x50, 0x7C, 0x77, 0x75, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6,
  0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0,
  0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x01, 0x80, 0x37, 0x0B, 0xC8, 0x02, 0x7C, 0x0B, 0x80, 0x37,
  0x03, 0xFF, 0xFF, 0xA0, 0x3F, 0xFF, 0xFA, 0x01, 0x80, 0x37, 0x0B, 0xC8, 0x02, 0x7C, 0x0B, 0x80,
  0x37, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77,
  0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC6, 0xC0, 0x77, 0x71,
  0x07, 0xC6, 0xC0, 0x77, 0x71, 0x07, 0xC7, 0x77, 0x50, 0x7C, 0x77, 0x75, 0x07, 0xC7, 0x77, 0x50,
  0x7C, 0x77, 0x75, 0x03, 0x80, 0x07, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_vertical_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_vertical_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_align_vertical_top 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_align_vertical_top_data[] PROGMEM = {
  0x80, 0x9A, 0x6F, 0x80, 0x9B, 0x50, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07,
  0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07,
  0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C,
  0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77,
  0x70, 0x7C, 0x6C, 0x07, 0x77, 0x07, 0xC6, 0xC0, 0x77, 0x70, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77,
  0x40, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C, 0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C,
  0x77, 0x74, 0x07, 0xC7, 0x77, 0x40, 0x7C, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_align_vertical_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_align_vertical_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_area_chart 36x36, 4-bit Alpha,  RLE, 193 bytes.
static const uint8_t ic_outlined_36_editor_area_chart_data[] PROGMEM = {
  0x76, 0x01, 0x02, 0x77, 0x75, 0x81, 0xBE, 0x47, 0x77, 0x30, 0x6B, 0x07, 0x77, 0x71, 0x02, 0xD0,
  0xA7, 0x77, 0x0C, 0xE0, 0xD0, 0x27, 0x74, 0x08, 0xA8, 0x1E, 0x28, 0xB0, 0xE0, 0x47, 0x02, 0x71,
  0x04, 0xB0, 0x62, 0x05, 0x0E, 0xB0, 0x98, 0x01, 0x78, 0x23, 0x7B, 0x15, 0x01, 0x0E, 0xA0, 0xA4,
  0x02, 0x0D, 0xF9, 0x83, 0x77, 0xFE, 0x44, 0x0B, 0xA0, 0xD0, 0x15, 0x01, 0x0B, 0xF0, 0x07, 0xB0,
  0x72, 0x06, 0xB0, 0x47, 0x18, 0x36, 0x77, 0x7B, 0xA0, 0x07, 0xC0, 0xB0, 0x4B, 0x08, 0x76, 0x07,
  0xA0, 0x07, 0xF9, 0x0C, 0x77, 0x07, 0xA0, 0x07, 0xA0, 0xDC, 0x0E, 0x02, 0x77, 0x07, 0xA0, 0x07,
  0xA8, 0x17, 0x4E, 0xA0, 0x64, 0x03, 0x05, 0x72, 0x07, 0xA0, 0x07, 0xA8, 0x37, 0x01, 0xBA, 0x58,
  0x1D, 0xF9, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x9B, 0x0C, 0x01, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x70, 0x5D, 0x0E, 0x04, 0x50, 0x7A, 0x00, 0x7A, 0x07, 0x60, 0x20, 0xEF, 0x07, 0x40, 0x7A,
  0x00, 0x7A, 0x0E, 0x04, 0x50, 0xCF, 0xA0, 0xA3, 0x07, 0xA0, 0x07, 0xC0, 0x73, 0x08, 0xFC, 0x82,
  0xD2, 0x07, 0xA0, 0x07, 0xD8, 0x1A, 0x04, 0xFE, 0x81, 0xE5, 0x7A, 0x00, 0x7E, 0x0D, 0x0E, 0xFF,
  0x90, 0xDA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD,
  0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_area_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_area_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_attach_file 36x36, 4-bit Alpha,  RLE, 260 bytes.
static const uint8_t ic_outlined_36_editor_attach_file_data[] PROGMEM = {
  0x48, 0x32, 0x57, 0x52, 0x73, 0x01, 0x0A, 0xD0, 0xA0, 0x17, 0x01, 0x0D, 0xA8, 0x1E, 0xCE, 0xA0,
  0xD0, 0x16, 0x82, 0xAF, 0xE6, 0x38, 0x26, 0xEF, 0xA5, 0x02, 0xA0, 0x65, 0x06, 0xA0, 0x24, 0x81,
  0x6F, 0xE7, 0x81, 0xEF, 0x64, 0x81, 0x7F, 0xB7, 0x81, 0xBF, 0x74, 0x81, 0x7F, 0xB7, 0x81, 0xBF,
  0x74, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83,
  0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0,
  0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F,
  0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A,
  0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF,
  0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32,
  0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2,
  0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81, 0x7F, 0xB2, 0xA0, 0x32, 0x83, 0xBF, 0x70, 0x3A, 0x81,
  0x7F, 0xB2, 0x81, 0xEF, 0x42, 0x83, 0xCF, 0x60, 0x3A, 0x81, 0x7F, 0xB2, 0x83, 0xBF, 0xD4, 0x8A,
  0x81, 0x30, 0x3A, 0x81, 0x7F, 0xB2, 0x03, 0xD0, 0xA2, 0x03, 0xA8, 0x17, 0xFC, 0x38, 0x33, 0xBE,
  0xD7, 0x30, 0x4A, 0x81, 0x5F, 0xD7, 0x48, 0x26, 0xFD, 0x2A, 0x03, 0x73, 0x85, 0xBF, 0xA0, 0xCF,
  0xB7, 0x20, 0x3A, 0x81, 0x40, 0x4A, 0x08, 0x78, 0x22, 0xDF, 0xC3, 0x08, 0xA0, 0xB0, 0x34, 0x83,
  0x7E, 0xFE, 0x24, 0x08, 0xB8, 0x1E, 0xBC, 0xB0, 0xD0, 0x36, 0x04, 0x0C, 0xD8, 0x1E, 0x81, 0x72,
  0x83, 0x25, 0x76, 0x46,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_attach_file() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 1, 26, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_attach_file_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_attach_money 36x36, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_outlined_36_editor_attach_money_data[] PROGMEM = {
  0x68, 0x00, 0x70, 0x37, 0x4C, 0x07, 0x74, 0xC0, 0x77, 0x30, 0x1C, 0x08, 0x71, 0x03, 0x0B, 0xE0,
  0xD0, 0x55, 0x08, 0xFB, 0x09, 0x30, 0x6B, 0x84, 0xE9, 0x65, 0x8D, 0xB0, 0x52, 0x0E, 0xA0, 0xD0,
  0x15, 0x0B, 0xA8, 0x1D, 0x02, 0xB0, 0x56, 0x03, 0xB0, 0x10, 0x3B, 0x04, 0x70, 0xF7, 0x02, 0x01,
  0xB0, 0xB7, 0x50, 0xAB, 0x0D, 0x05, 0x73, 0x01, 0x0D, 0xD8, 0x1B, 0x61, 0x70, 0x10, 0xAF, 0x0B,
  0x03, 0x78, 0x13, 0xAE, 0xE0, 0x87, 0x28, 0x14, 0x8D, 0xC0, 0x97, 0x40, 0x50, 0xEB, 0x03, 0x74,
  0x03, 0xB8, 0x38, 0x37, 0x76, 0x71, 0x0C, 0xA0, 0xA0, 0x5B, 0x01, 0x70, 0xCA, 0x0A, 0x01, 0xB0,
  0xB6, 0x05, 0xB8, 0x17, 0x07, 0xB8, 0x4D, 0x85, 0x56, 0xBB, 0x0E, 0x01, 0x20, 0x9F, 0xB0, 0xE0,
  0x44, 0x04, 0x0B, 0xE8, 0x1E, 0x92, 0x70, 0x1C, 0x09, 0x74, 0xC0, 0x77, 0x4C, 0x07, 0x74, 0x80,
  0x07, 0x03, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_attach_money() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 4, 24, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_attach_money_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_auto_graph 36x36, 4-bit Alpha,  RLE, 237 bytes.
static const uint8_t ic_outlined_36_editor_auto_graph_data[] PROGMEM = {
  0x74, 0x06, 0x77, 0x77, 0x50, 0xD0, 0x67, 0x77, 0x73, 0x81, 0x5F, 0xD7, 0x77, 0x72, 0x01, 0x0D,
  0xA0, 0x77, 0x77, 0x60, 0x30, 0xAD, 0x0D, 0x06, 0x77, 0x73, 0x01, 0x0A, 0xF0, 0xD0, 0x67, 0x77,
  0x40, 0x20, 0x9B, 0x0D, 0x05, 0x60, 0x77, 0x77, 0x10, 0x9A, 0x01, 0x68, 0x12, 0xF2, 0x77, 0x78,
  0x12, 0xFA, 0x78, 0x19, 0xF9, 0x71, 0x06, 0x60, 0x03, 0x50, 0xA0, 0x35, 0x02, 0x09, 0xB0, 0x90,
  0x25, 0x81, 0xAF, 0x95, 0x00, 0xA5, 0x01, 0x50, 0x7F, 0x07, 0x30, 0x9B, 0x04, 0x30, 0x2A, 0x02,
  0x74, 0x02, 0x09, 0xB0, 0x90, 0x23, 0x07, 0xB0, 0x83, 0x06, 0x0D, 0xA0, 0xD0, 0x67, 0x58, 0x19,
  0xF9, 0x40, 0x5B, 0x09, 0x20, 0x10, 0xDE, 0x0D, 0x01, 0x73, 0x81, 0x2F, 0x23, 0x04, 0xB0, 0xB5,
  0x06, 0x0D, 0xA0, 0xD0, 0x66, 0x07, 0x02, 0x50, 0x73, 0x03, 0x0E, 0xA0, 0xC7, 0x02, 0xA0, 0x26,
  0x82, 0x7F, 0xD2, 0x70, 0x20, 0xEA, 0x0D, 0x01, 0x71, 0x00, 0xA6, 0x07, 0xB0, 0xD0, 0x25, 0x01,
  0x0D, 0xA0, 0xE0, 0x27, 0x20, 0x03, 0x50, 0x7D, 0x0D, 0x02, 0x40, 0xCA, 0x0E, 0x03, 0x77, 0x20,
  0x7B, 0x0E, 0xB0, 0xD0, 0x22, 0x0A, 0xB0, 0x47, 0x72, 0x07, 0xB8, 0x1D, 0x17, 0xB8, 0x1D, 0x29,
  0xB0, 0x67, 0x72, 0x07, 0xB0, 0xD0, 0x12, 0x07, 0xB0, 0xEB, 0x07, 0x77, 0x20, 0x7B, 0x0D, 0x01,
  0x40, 0x7D, 0x09, 0x77, 0x20, 0x7B, 0x0D, 0x01, 0x60, 0x7B, 0x0B, 0x77, 0x20, 0x7B, 0x0D, 0x01,
  0x71, 0x81, 0x7F, 0xC7, 0x72, 0x07, 0xB0, 0xD0, 0x17, 0x30, 0x60, 0x17, 0x71, 0x03, 0xB0, 0xD0,
  0x17, 0x77, 0x71, 0x82, 0x7F, 0xD1, 0x77, 0x77, 0x30, 0x60, 0x17, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_auto_graph() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 34, 30), Box(0, 0, 35, 35),
      ic_outlined_36_editor_auto_graph_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_bar_chart 36x36, 4-bit Alpha,  RLE, 60 bytes.
static const uint8_t ic_outlined_36_editor_bar_chart_data[] PROGMEM = {
  0x72, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x28, 0x02,
  0x73, 0xE7, 0x2E, 0x3E, 0x72, 0xE3, 0xE7, 0x2E, 0x3E, 0x72, 0xE3, 0xE7, 0x2E, 0x3E, 0x72, 0xE3,
  0xE3, 0x80, 0x27, 0xE3, 0xE3, 0xFD, 0x3E, 0x3F, 0xD3, 0xE3, 0xFD, 0x3E, 0x3F, 0xD3, 0xE3, 0xFD,
  0x3E, 0x3F, 0xD3, 0xE3, 0xFD, 0x3E, 0x3F, 0xD3, 0xE3, 0xFD, 0x3E, 0x3E,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_bar_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 29, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_bar_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_all 36x36, 4-bit Alpha,  RLE, 219 bytes.
static const uint8_t ic_outlined_36_editor_border_all_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B, 0x80, 0x47,
  0x0B, 0xA0, 0xB8, 0x04, 0x70, 0xBA, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00,
  0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10,
  0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A,
  0x0B, 0x80, 0x47, 0x0B, 0xA0, 0xB8, 0x04, 0x70, 0xBA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD,
  0x00, 0x7A, 0x0B, 0x80, 0x47, 0x0B, 0xA0, 0xB8, 0x04, 0x70, 0xBA, 0x00, 0x7A, 0x07, 0x71, 0x07,
  0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00,
  0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10,
  0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x0B, 0x80, 0x47, 0x0B, 0xA0, 0xB8, 0x04, 0x70, 0xBA, 0x00, 0x7F,
  0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_all() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_all_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_bottom 36x36, 4-bit Alpha,  RLE, 229 bytes.
static const uint8_t ic_outlined_36_editor_border_bottom_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40,
  0x82, 0x37, 0x73, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37,
  0x18, 0x23, 0x77, 0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77,
  0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77,
  0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x71, 0x82, 0x37,
  0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x18, 0x23,
  0x77, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07,
  0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_clear 36x36, 4-bit Alpha,  RLE, 274 bytes.
static const uint8_t ic_outlined_36_editor_border_clear_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40,
  0x82, 0x37, 0x73, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37,
  0x18, 0x23, 0x77, 0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77,
  0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77,
  0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x71, 0x82, 0x37,
  0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x18, 0x23,
  0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23,
  0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23,
  0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_clear() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_clear_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_color 36x36, 4-bit Alpha,  RLE, 188 bytes.
static const uint8_t ic_outlined_36_editor_border_color_data[] PROGMEM = {
  0x77, 0x68, 0x23, 0xDD, 0x37, 0x77, 0x40, 0x30, 0xEA, 0x0E, 0x03, 0x77, 0x72, 0x03, 0x0E, 0xC0,
  0xE0, 0x37, 0x77, 0x10, 0x7E, 0x0E, 0x03, 0x77, 0x71, 0x07, 0xE0, 0xD7, 0x74, 0x81, 0x3E, 0x52,
  0x07, 0xD0, 0xD7, 0x73, 0x03, 0x0E, 0xA0, 0x52, 0x07, 0xB0, 0xE0, 0x37, 0x72, 0x03, 0x0E, 0xC0,
  0x52, 0x82, 0x7F, 0xE3, 0x77, 0x20, 0x30, 0xEE, 0x05, 0x20, 0x60, 0x37, 0x72, 0x03, 0x0E, 0xA8,
  0x1E, 0x4D, 0xB0, 0x57, 0x74, 0x03, 0x0E, 0xA8, 0x2E, 0x30, 0x4B, 0x0E, 0x77, 0x30, 0x30, 0xEA,
  0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x20, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03,
  0x77, 0x20, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x20, 0x30, 0xEA, 0x83, 0xE3,
  0x03, 0xEA, 0x0E, 0x03, 0x77, 0x20, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x20,
  0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x20, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA,
  0x0E, 0x03, 0x77, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x4B, 0x82, 0x30, 0x3E,
  0xA0, 0xE0, 0x37, 0x75, 0xB1, 0x03, 0x0E, 0xA0, 0xE0, 0x37, 0x76, 0xF0, 0xE0, 0x37, 0x77, 0xE0,
  0xE0, 0x37, 0x77, 0x1D, 0x0E, 0x03, 0x80, 0x9D, 0x20, 0x80, 0xAE, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_color() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 35), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_color_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_horizontal 36x36, 4-bit Alpha,  RLE, 229 bytes.
static const uint8_t ic_outlined_36_editor_border_horizontal_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40,
  0x82, 0x37, 0x73, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37,
  0x18, 0x23, 0x77, 0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F,
  0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73,
  0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A,
  0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77,
  0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37,
  0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37,
  0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_horizontal() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_horizontal_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_inner 36x36, 4-bit Alpha,  RLE, 260 bytes.
static const uint8_t ic_outlined_36_editor_border_inner_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x75, 0x07, 0xA0,
  0x77, 0x77, 0x30, 0x7A, 0x07, 0x75, 0x82, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x33, 0x77,
  0x37, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71,
  0x07, 0xA8, 0x37, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x50, 0x7A, 0x07,
  0x77, 0x73, 0x07, 0xA0, 0x77, 0x50, 0x38, 0x07, 0x70, 0xBA, 0x0B, 0x80, 0x77, 0x03, 0x07, 0xFF,
  0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x38, 0x07, 0x70, 0xBA, 0x0B, 0x80, 0x77, 0x03, 0x75, 0x07,
  0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x75, 0x82, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x33,
  0x77, 0x37, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07,
  0x71, 0x07, 0xA8, 0x37, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x50, 0x7A,
  0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x58, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x07,
  0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73,
  0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_inner() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_inner_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_left 36x36, 4-bit Alpha,  RLE, 294 bytes.
static const uint8_t ic_outlined_36_editor_border_left_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x28,
  0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x77,
  0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73,
  0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10,
  0x7A, 0x00, 0x7A, 0x07, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x77, 0x73,
  0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23,
  0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x00, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x71, 0x82, 0x37, 0x73,
  0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73,
  0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82,
  0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82,
  0x37, 0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_outer 36x36, 4-bit Alpha,  RLE, 219 bytes.
static const uint8_t ic_outlined_36_editor_border_outer_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B, 0x80, 0xA0,
  0x70, 0xBA, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x71, 0x82, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77,
  0x37, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00,
  0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37,
  0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x82, 0x37, 0x73, 0x71, 0x07, 0xA0,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60,
  0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x0B, 0x80, 0xA0, 0x70, 0xBA, 0x00, 0x7F,
  0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_outer() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_outer_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_right 36x36, 4-bit Alpha,  RLE, 294 bytes.
static const uint8_t ic_outlined_36_editor_border_right_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x07, 0x77, 0x73, 0x07,
  0xA0, 0x77, 0x77, 0x30, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x00,
  0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10,
  0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0,
  0x77, 0x77, 0x30, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82,
  0x37, 0x73, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A,
  0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77,
  0x37, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x07,
  0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28,
  0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82,
  0x37, 0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_style 36x36, 4-bit Alpha,  RLE, 190 bytes.
static const uint8_t ic_outlined_36_editor_border_style_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B, 0x80, 0xA3,
  0x70, 0x30, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x68, 0x33,
  0x77, 0x37, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77,
  0x76, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77,
  0x68, 0x33, 0x77, 0x37, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07,
  0xA0, 0x77, 0x76, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A,
  0x07, 0x77, 0x68, 0x33, 0x77, 0x37, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x76, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x77,
  0x30, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_style() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_style_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_top 36x36, 4-bit Alpha,  RLE, 229 bytes.
static const uint8_t ic_outlined_36_editor_border_top_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83,
  0x73, 0x77, 0x37, 0x18, 0x23, 0x77, 0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73,
  0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73,
  0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73,
  0x71, 0x82, 0x37, 0x73, 0x71, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A,
  0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x83, 0x73, 0x77, 0x37, 0x18, 0x23, 0x77,
  0x37, 0x18, 0x23, 0x77, 0x38, 0x0E, 0x40, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37,
  0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37,
  0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_border_vertical 36x36, 4-bit Alpha,  RLE, 296 bytes.
static const uint8_t ic_outlined_36_editor_border_vertical_data[] PROGMEM = {
  0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37,
  0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32,
  0x82, 0x37, 0x73, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x75, 0x07, 0xA0,
  0x77, 0x77, 0x30, 0x7A, 0x07, 0x75, 0x82, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x33, 0x77,
  0x37, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71,
  0x07, 0xA8, 0x37, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x50, 0x7A, 0x07,
  0x77, 0x73, 0x07, 0xA0, 0x77, 0x58, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x07, 0x28,
  0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20,
  0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82,
  0x37, 0x73, 0x75, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x75, 0x82, 0x37, 0x73, 0x71, 0x07,
  0xA0, 0x77, 0x18, 0x33, 0x77, 0x37, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA8, 0x37, 0x37, 0x73, 0x71, 0x07, 0xA0, 0x77, 0x18, 0x23,
  0x77, 0x37, 0x50, 0x7A, 0x07, 0x77, 0x73, 0x07, 0xA0, 0x77, 0x58, 0x23, 0x77, 0x32, 0x82, 0x37,
  0x73, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x83, 0x37, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x83, 0x73, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77,
  0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_border_vertical() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_border_vertical_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_bubble_chart 36x36, 4-bit Alpha,  RLE, 236 bytes.
static const uint8_t ic_outlined_36_editor_bubble_chart_data[] PROGMEM = {
  0x77, 0x48, 0x32, 0x57, 0x64, 0x77, 0x71, 0x04, 0x0C, 0xD8, 0x1E, 0x81, 0x77, 0x40, 0x8F, 0xA0,
  0xD0, 0x27, 0x72, 0x08, 0xB8, 0x3E, 0xA7, 0x8C, 0xB0, 0xE0, 0x27, 0x70, 0x4B, 0x0A, 0x01, 0x40,
  0x40, 0xEA, 0x0C, 0x77, 0x0C, 0xA0, 0xA7, 0x03, 0x0E, 0xA0, 0x47, 0x50, 0x2A, 0x0E, 0x01, 0x71,
  0x08, 0xA0, 0xA7, 0x50, 0x5A, 0x0A, 0x72, 0x02, 0xA0, 0xD7, 0x50, 0x7A, 0x08, 0x73, 0xB7, 0x50,
  0x6A, 0x09, 0x72, 0x01, 0xA0, 0xE7, 0x50, 0x4A, 0x0C, 0x72, 0x05, 0xA0, 0xC3, 0x85, 0x29, 0xDF,
  0xD9, 0x23, 0x0E, 0xA0, 0x47, 0x10, 0xCA, 0x07, 0x20, 0x6F, 0x06, 0x20, 0x8A, 0x0E, 0x03, 0x60,
  0x9A, 0x82, 0xE1, 0x05, 0xFA, 0x82, 0x50, 0x1D, 0xB8, 0x48, 0x20, 0x15, 0xCB, 0x07, 0x20, 0xDA,
  0x83, 0xC3, 0x03, 0xCA, 0x0D, 0x20, 0x20, 0xEF, 0xB0, 0x92, 0x04, 0xA0, 0xD0, 0x13, 0x01, 0x0D,
  0xA0, 0x42, 0x02, 0x0C, 0xF0, 0xE0, 0x73, 0x06, 0xA0, 0x95, 0x09, 0xA0, 0x64, 0x86, 0x49, 0xDF,
  0xEC, 0x71, 0x40, 0x6A, 0x09, 0x50, 0x9A, 0x06, 0x77, 0x20, 0x4A, 0x0D, 0x01, 0x30, 0x10, 0xDA,
  0x04, 0x48, 0x14, 0x74, 0x73, 0x0D, 0xA8, 0x3C, 0x30, 0x3C, 0xA0, 0xD3, 0x04, 0x0D, 0xB0, 0xE0,
  0x47, 0x10, 0x5F, 0xA0, 0x52, 0x02, 0x0E, 0xE0, 0x27, 0x10, 0x6F, 0x06, 0x30, 0xAA, 0x81, 0xD8,
  0xDA, 0x0A, 0x72, 0x85, 0x29, 0xDF, 0xD9, 0x24, 0x0D, 0xA8, 0x12, 0x01, 0xA0, 0xE7, 0x76, 0x0D,
  0xA8, 0x12, 0x01, 0xA0, 0xE7, 0x76, 0x0A, 0xA8, 0x1D, 0x8D, 0xA0, 0xA7, 0x76, 0x02, 0x0E, 0xE0,
  0x27, 0x77, 0x04, 0x0D, 0xB0, 0xE0, 0x47, 0x77, 0x38, 0x14, 0x74, 0x72,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_bubble_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_bubble_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_candlestick_chart 36x36, 4-bit Alpha,  RLE, 198 bytes.
static const uint8_t ic_outlined_36_editor_candlestick_chart_data[] PROGMEM = {
  0x30, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x60, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x73, 0x07, 0xF9, 0x07, 0x50, 0x7A, 0x07, 0x30, 0x7F, 0x90, 0x75, 0x07, 0xA0,
  0x73, 0x07, 0xF9, 0x07, 0x50, 0x7A, 0x07, 0x30, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7F, 0x90,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xF9, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7F,
  0x90, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA8, 0x2B, 0x77, 0xBA, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7F,
  0x90, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xF9, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x28,
  0x23, 0x77, 0xBA, 0x83, 0xB7, 0x73, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x50, 0x7A, 0x07, 0x30, 0x7F,
  0x90, 0x75, 0x07, 0xA0, 0x73, 0x07, 0xF9, 0x07, 0x50, 0x7A, 0x07, 0x30, 0x7F, 0x90, 0x75, 0x07,
  0xA0, 0x76, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x76, 0x07,
  0xA0, 0x77, 0x10, 0x7A, 0x07, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_candlestick_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 6, 28, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_candlestick_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_checklist 36x36, 4-bit Alpha,  RLE, 137 bytes.
static const uint8_t ic_outlined_36_editor_checklist_data[] PROGMEM = {
  0x73, 0x81, 0x1C, 0x47, 0x77, 0x50, 0x10, 0xDA, 0x04, 0x77, 0x73, 0x01, 0x0D, 0xB0, 0x47, 0x73,
  0x05, 0x08, 0x40, 0x10, 0xDB, 0x04, 0x77, 0x30, 0x5A, 0x08, 0x20, 0x10, 0xDB, 0x04, 0x40, 0x38,
  0x09, 0x17, 0x0A, 0xB8, 0x18, 0x1D, 0xB0, 0x45, 0x07, 0xFE, 0x10, 0xAB, 0x0E, 0xB0, 0x46, 0x07,
  0xFE, 0x20, 0xAD, 0x04, 0x70, 0x38, 0x09, 0x17, 0x30, 0xAB, 0x04, 0x77, 0x75, 0x81, 0xAF, 0x57,
  0x77, 0x70, 0x38, 0x0F, 0x40, 0x81, 0x1C, 0x47, 0x77, 0x50, 0x10, 0xDA, 0x04, 0x77, 0x73, 0x01,
  0x0D, 0xB0, 0x47, 0x73, 0x05, 0x08, 0x40, 0x10, 0xDB, 0x04, 0x77, 0x30, 0x5A, 0x08, 0x20, 0x10,
  0xDB, 0x04, 0x40, 0x38, 0x09, 0x17, 0x0A, 0xB8, 0x18, 0x1D, 0xB0, 0x45, 0x07, 0xFE, 0x10, 0xAB,
  0x0E, 0xB0, 0x46, 0x07, 0xFE, 0x20, 0xAD, 0x04, 0x70, 0x38, 0x09, 0x17, 0x30, 0xAB, 0x04, 0x77,
  0x75, 0x81, 0xAF, 0x57, 0x77, 0x70, 0x37, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_checklist() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_checklist_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_checklist_rtl 36x36, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_outlined_36_editor_checklist_rtl_data[] PROGMEM = {
  0x77, 0x76, 0x0B, 0x07, 0x77, 0x76, 0x0B, 0xA0, 0x77, 0x77, 0x40, 0xBB, 0x07, 0x77, 0x30, 0x20,
  0x95, 0x0B, 0xB0, 0x71, 0x80, 0x91, 0x70, 0x32, 0x82, 0x2E, 0xFB, 0x30, 0xBB, 0x07, 0x2F, 0xE0,
  0x72, 0x07, 0xB8, 0x1B, 0x0B, 0xB0, 0x73, 0xFE, 0x07, 0x30, 0x7B, 0x0E, 0xB0, 0x74, 0x80, 0x91,
  0x70, 0x34, 0x07, 0xD0, 0x77, 0x77, 0x30, 0x7B, 0x07, 0x77, 0x75, 0x81, 0x7F, 0x77, 0x77, 0x70,
  0x38, 0x0F, 0x50, 0x0B, 0x07, 0x77, 0x76, 0x0B, 0xA0, 0x77, 0x77, 0x40, 0xBB, 0x07, 0x77, 0x30,
  0x20, 0x95, 0x0B, 0xB0, 0x71, 0x80, 0x91, 0x70, 0x32, 0x82, 0x2E, 0xFB, 0x30, 0xBB, 0x07, 0x2F,
  0xE0, 0x72, 0x07, 0xB8, 0x1B, 0x0B, 0xB0, 0x73, 0xFE, 0x07, 0x30, 0x7B, 0x0E, 0xB0, 0x74, 0x80,
  0x91, 0x70, 0x34, 0x07, 0xD0, 0x77, 0x77, 0x30, 0x7B, 0x07, 0x77, 0x75, 0x81, 0x7F, 0x77, 0x77,
  0x70, 0x37, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_checklist_rtl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_checklist_rtl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_data_array 36x36, 4-bit Alpha,  RLE, 61 bytes.
static const uint8_t ic_outlined_36_editor_data_array_data[] PROGMEM = {
  0xF0, 0x77, 0x10, 0x7F, 0xF0, 0x77, 0x10, 0x7F, 0xF0, 0x77, 0x10, 0x7F, 0xB7, 0x74, 0xE7, 0x74,
  0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74,
  0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74,
  0xFB, 0x07, 0x71, 0x07, 0xFF, 0x07, 0x71, 0x07, 0xFF, 0x07, 0x71, 0x07, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_data_array() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 29, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_data_array_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_data_object 36x36, 4-bit Alpha,  RLE, 111 bytes.
static const uint8_t ic_outlined_36_editor_data_object_data[] PROGMEM = {
  0x50, 0x70, 0xCD, 0x6D, 0x0C, 0x07, 0x72, 0x0B, 0xF6, 0xF0, 0xB7, 0x07, 0xF9, 0x6F, 0x90, 0x76,
  0x0C, 0xA0, 0x77, 0x72, 0x07, 0xA0, 0xC6, 0xB7, 0x74, 0xB6, 0xB7, 0x74, 0xB6, 0xB7, 0x74, 0xB6,
  0xB7, 0x74, 0xB5, 0x07, 0xA0, 0xD7, 0x74, 0x0D, 0xA0, 0x72, 0xD0, 0x77, 0x74, 0x07, 0xFA, 0x0B,
  0x77, 0x60, 0xBF, 0x07, 0x77, 0x71, 0x07, 0xE0, 0x77, 0x77, 0x10, 0x7F, 0x0B, 0x77, 0x60, 0xBF,
  0xA0, 0x77, 0x74, 0x07, 0xD2, 0x07, 0xA0, 0xD7, 0x74, 0x0D, 0xA0, 0x75, 0xB7, 0x74, 0xB6, 0xB7,
  0x74, 0xB6, 0xB7, 0x74, 0xB6, 0xB7, 0x74, 0xB6, 0x0C, 0xA0, 0x77, 0x72, 0x07, 0xA0, 0xC6, 0x07,
  0xF9, 0x6F, 0x90, 0x77, 0x0B, 0xF6, 0xF0, 0xB7, 0x20, 0x70, 0xCD, 0x6D, 0x0C, 0x07, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_data_object() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_data_object_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_drag_handle 36x36, 4-bit Alpha,  RLE, 18 bytes.
static const uint8_t ic_outlined_36_editor_drag_handle_data[] PROGMEM = {
  0x80, 0xA4, 0x78, 0x0D, 0x4F, 0x80, 0xA4, 0x78, 0x0D, 0x40, 0x80, 0xA4, 0x78, 0x0D, 0x4F, 0x80,
  0xA4, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_drag_handle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 13, 29, 22), Box(0, 0, 35, 35),
      ic_outlined_36_editor_drag_handle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_draw 36x36, 4-bit Alpha,  RLE, 255 bytes.
static const uint8_t ic_outlined_36_editor_draw_data[] PROGMEM = {
  0x48, 0x33, 0x67, 0x63, 0x77, 0x60, 0x50, 0xDD, 0x0D, 0x05, 0x77, 0x30, 0x7F, 0xA0, 0x77, 0x20,
  0x30, 0x15, 0x0D, 0xA8, 0x3E, 0x97, 0x9E, 0xB0, 0x26, 0x05, 0x0E, 0xA0, 0x84, 0x81, 0x6E, 0x95,
  0x0B, 0xA0, 0x65, 0x05, 0xD0, 0x97, 0x40, 0xCA, 0x06, 0x50, 0xBE, 0x09, 0x71, 0x05, 0x0D, 0xB0,
  0x26, 0x0B, 0xE0, 0x55, 0x05, 0x0C, 0xC0, 0x73, 0x05, 0x01, 0x30, 0xBD, 0x0A, 0x30, 0x60, 0xDC,
  0x0E, 0x05, 0x38, 0x25, 0xFD, 0x13, 0x0B, 0xC8, 0x29, 0x01, 0xBC, 0x81, 0xE8, 0x13, 0x05, 0xB0,
  0xD0, 0x13, 0x0B, 0xB8, 0x13, 0x0C, 0xB0, 0xD0, 0x65, 0x05, 0xD0, 0xD0, 0x13, 0x83, 0xBF, 0x50,
  0x5B, 0x07, 0x60, 0x5B, 0x0D, 0xB0, 0xD0, 0x13, 0x04, 0x20, 0x7A, 0x09, 0x60, 0x5B, 0x81, 0xC1,
  0x5B, 0x0D, 0x01, 0x50, 0x5B, 0x08, 0x40, 0x5B, 0x0C, 0x01, 0x20, 0x5B, 0x0C, 0x60, 0xCA, 0x06,
  0x30, 0x5B, 0x0C, 0x01, 0x20, 0x10, 0xCB, 0x05, 0x68, 0x11, 0xB6, 0x30, 0x5B, 0x0C, 0x01, 0x20,
  0x10, 0xCB, 0x05, 0x75, 0x05, 0xB0, 0xC0, 0x12, 0x01, 0x0C, 0xB0, 0x57, 0x50, 0x5B, 0x0C, 0x01,
  0x20, 0x10, 0xCB, 0x05, 0x75, 0x05, 0xB0, 0xC0, 0x12, 0x01, 0x0C, 0xB0, 0x53, 0x06, 0x05, 0x70,
  0x5B, 0x0C, 0x01, 0x20, 0x10, 0xCB, 0x05, 0x30, 0x6A, 0x06, 0x50, 0x5B, 0x0C, 0x01, 0x20, 0x10,
  0xCB, 0x05, 0x30, 0x10, 0xDB, 0x01, 0x4B, 0x0C, 0x01, 0x20, 0x10, 0xCB, 0x05, 0x60, 0xCA, 0x06,
  0x4B, 0x01, 0x20, 0x10, 0xCB, 0x05, 0x70, 0x9A, 0x07, 0x4B, 0x20, 0x10, 0xCB, 0x05, 0x70, 0x7B,
  0x04, 0x4B, 0x81, 0x77, 0xCB, 0x05, 0x48, 0x25, 0x8A, 0xEB, 0x0B, 0x5F, 0x90, 0x54, 0x05, 0xE0,
  0xC0, 0x15, 0xF0, 0x55, 0x05, 0xC0, 0xD0, 0x67, 0x80, 0x27, 0x04, 0x78, 0x25, 0x75, 0x27,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_draw() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 30, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_draw_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_edit_note 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_edit_note_data[] PROGMEM = {
  0x07, 0xFF, 0xA7, 0x40, 0x7F, 0xFA, 0x74, 0x07, 0xFF, 0xA8, 0x09, 0xB3, 0x00, 0x7F, 0xFA, 0x74,
  0x07, 0xFF, 0xA7, 0x40, 0x7F, 0xFA, 0x71, 0x01, 0x77, 0x74, 0x82, 0x3E, 0xF6, 0x77, 0x73, 0x0A,
  0xB0, 0x57, 0x77, 0x82, 0x32, 0x0B, 0xA0, 0x90, 0x7F, 0xB7, 0x28, 0x73, 0xEE, 0x20, 0xBE, 0x37,
  0xFB, 0x71, 0x03, 0x0E, 0xA8, 0x4E, 0x20, 0x30, 0x7F, 0xB7, 0x03, 0x0E, 0xC0, 0xD7, 0x76, 0x03,
  0x0E, 0xC0, 0xE0, 0x37, 0x75, 0x03, 0x0E, 0xC0, 0xE0, 0x37, 0x75, 0x03, 0x0E, 0xC0, 0xE0, 0x37,
  0x75, 0x03, 0x0E, 0xC0, 0xE0, 0x37, 0x76, 0x0E, 0xC0, 0xE0, 0x37, 0x77, 0xC0, 0xE0, 0x37, 0x77,
  0x1B, 0x0E, 0x03, 0x77, 0x72, 0x0F, 0x70, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_edit_note() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 9, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_edit_note_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_align_center 36x36, 4-bit Alpha,  RLE, 96 bytes.
static const uint8_t ic_outlined_36_editor_format_align_center_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x0F, 0x20, 0x03, 0x80, 0x92, 0x70, 0x37, 0x50, 0x7F, 0xF0, 0x77, 0x50, 0x7F, 0xF0, 0x77,
  0x50, 0x38, 0x09, 0x27, 0x03, 0x80, 0xF2, 0x00, 0x38, 0x0A, 0x67, 0x03, 0x07, 0xFF, 0xFD, 0x00,
  0x7F, 0xFF, 0xD0, 0x70, 0x38, 0x0A, 0x67, 0x03, 0x80, 0xF2, 0x00, 0x38, 0x09, 0x27, 0x03, 0x75,
  0x07, 0xFF, 0x07, 0x75, 0x07, 0xFF, 0x07, 0x75, 0x03, 0x80, 0x92, 0x70, 0x38, 0x0F, 0x20, 0x03,
  0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_align_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_align_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_align_justify 36x36, 4-bit Alpha,  RLE, 93 bytes.
static const uint8_t ic_outlined_36_editor_format_align_justify_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03,
  0x80, 0xA6, 0x70, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF,
  0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF,
  0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70,
  0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_align_justify() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_align_justify_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_align_left 36x36, 4-bit Alpha,  RLE, 98 bytes.
static const uint8_t ic_outlined_36_editor_format_align_left_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x0E, 0x40, 0x03, 0x80, 0x95, 0x70, 0x37, 0x20, 0x7F, 0xFB, 0x07, 0x72, 0x07, 0xFF, 0xB0,
  0x77, 0x20, 0x38, 0x09, 0x57, 0x03, 0x80, 0xF5, 0x00, 0x38, 0x0A, 0x67, 0x03, 0x07, 0xFF, 0xFD,
  0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x38, 0x0A, 0x67, 0x03, 0x80, 0xE4, 0x00, 0x38, 0x09, 0x57, 0x03,
  0x72, 0x07, 0xFF, 0xB0, 0x77, 0x20, 0x7F, 0xFB, 0x07, 0x72, 0x03, 0x80, 0x95, 0x70, 0x38, 0x0F,
  0x50, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6,
  0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_align_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_align_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_align_right 36x36, 4-bit Alpha,  RLE, 98 bytes.
static const uint8_t ic_outlined_36_editor_format_align_right_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x0F, 0x50, 0x03, 0x80, 0x95, 0x70, 0x37, 0x20, 0x7F, 0xFB, 0x07, 0x72, 0x07, 0xFF, 0xB0,
  0x77, 0x20, 0x38, 0x09, 0x57, 0x03, 0x80, 0xE4, 0x00, 0x38, 0x0A, 0x67, 0x03, 0x07, 0xFF, 0xFD,
  0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x38, 0x0A, 0x67, 0x03, 0x80, 0xF5, 0x00, 0x38, 0x09, 0x57, 0x03,
  0x72, 0x07, 0xFF, 0xB0, 0x77, 0x20, 0x7F, 0xFB, 0x07, 0x72, 0x03, 0x80, 0x95, 0x70, 0x38, 0x0E,
  0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6,
  0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_align_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_align_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_bold 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_format_bold_data[] PROGMEM = {
  0x07, 0xFA, 0x81, 0xEB, 0x64, 0x07, 0xFD, 0x0B, 0x01, 0x20, 0x7F, 0xE0, 0xB2, 0x07, 0xC8, 0x01,
  0xB0, 0xEC, 0x81, 0x50, 0x7C, 0x50, 0x10, 0xCB, 0x81, 0xA0, 0x7C, 0x60, 0x5B, 0x81, 0xC0, 0x7C,
  0x60, 0x5B, 0x81, 0xC0, 0x7C, 0x50, 0x10, 0xCB, 0x81, 0x80, 0x7C, 0x80, 0x1B, 0x0E, 0xB8, 0x2E,
  0x10, 0x7F, 0xD0, 0xE0, 0x32, 0x07, 0xFD, 0x0C, 0x02, 0x20, 0x7F, 0xE8, 0x2E, 0x20, 0x7C, 0x80,
  0x1B, 0x0C, 0xC8, 0x1D, 0x07, 0xC6, 0x03, 0x0E, 0xB0, 0x40, 0x7C, 0x70, 0x9B, 0x00, 0x7C, 0x70,
  0x9B, 0x09, 0x07, 0xC6, 0x03, 0x0E, 0xB0, 0x07, 0xC8, 0x01, 0xB0, 0xCD, 0x02, 0x07, 0xFF, 0x81,
  0xA0, 0x7F, 0xE0, 0xB2, 0x07, 0xFB, 0x81, 0xEC, 0x63,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_bold() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 6, 26, 26), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_bold_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_clear 36x36, 4-bit Alpha,  RLE, 158 bytes.
static const uint8_t ic_outlined_36_editor_format_clear_data[] PROGMEM = {
  0x10, 0x20, 0x53, 0x01, 0x80, 0xA0, 0x78, 0x22, 0xEF, 0x53, 0x06, 0xFF, 0xD0, 0xBB, 0x05, 0x30,
  0x6F, 0xFC, 0x01, 0x0C, 0xB0, 0x53, 0x06, 0xFF, 0xB1, 0x01, 0x0C, 0xB0, 0x53, 0x06, 0xFF, 0xA2,
  0x01, 0x0C, 0xB0, 0x55, 0x05, 0xC0, 0x17, 0x40, 0x10, 0xCB, 0x05, 0x40, 0xCB, 0x0A, 0x76, 0x01,
  0x0C, 0xB0, 0x53, 0x06, 0xB0, 0x37, 0x70, 0x10, 0xCB, 0x05, 0x38, 0x16, 0xFC, 0x77, 0x20, 0x10,
  0xCB, 0x05, 0x30, 0x60, 0x57, 0x73, 0x01, 0x0C, 0xB0, 0x57, 0x77, 0x10, 0x10, 0xCB, 0x05, 0x77,
  0x71, 0x01, 0x0C, 0xB0, 0x57, 0x77, 0x10, 0xCC, 0x05, 0x77, 0x60, 0x3E, 0x05, 0x77, 0x50, 0xAF,
  0x05, 0x77, 0x30, 0x1C, 0x07, 0x0C, 0xB0, 0x57, 0x72, 0x08, 0xB8, 0x2E, 0x01, 0xCB, 0x05, 0x77,
  0x10, 0xEB, 0x08, 0x20, 0x10, 0xCB, 0x05, 0x76, 0x06, 0xC0, 0x13, 0x01, 0x0C, 0xB0, 0x57, 0x50,
  0xCB, 0x0A, 0x50, 0x10, 0xCB, 0x05, 0x73, 0x84, 0x17, 0x77, 0x72, 0x60, 0x10, 0xCB, 0x05, 0x77,
  0x71, 0x01, 0x0C, 0xA0, 0xD7, 0x77, 0x28, 0x21, 0xCE, 0x27, 0x77, 0x30, 0x10, 0x24,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_clear() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_clear_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_color_fill 36x36, 4-bit Alpha,  RLE, 190 bytes.
static const uint8_t ic_outlined_36_editor_format_color_fill_data[] PROGMEM = {
  0x78, 0x12, 0xB1, 0x77, 0x75, 0x83, 0x2E, 0xFD, 0x17, 0x77, 0x40, 0x4B, 0x0D, 0x01, 0x77, 0x74,
  0x04, 0xB0, 0xD0, 0x17, 0x77, 0x40, 0x4B, 0x0D, 0x01, 0x77, 0x74, 0x06, 0xB0, 0xD0, 0x17, 0x77,
  0x20, 0x10, 0xDC, 0x0D, 0x01, 0x77, 0x70, 0x10, 0xDE, 0x0D, 0x01, 0x77, 0x50, 0x10, 0xDB, 0x00,
  0x5B, 0x0D, 0x01, 0x77, 0x30, 0x10, 0xDB, 0x05, 0x20, 0x5B, 0x0D, 0x01, 0x77, 0x10, 0x10, 0xDB,
  0x05, 0x40, 0x5B, 0x0D, 0x01, 0x76, 0x01, 0x0D, 0xB0, 0x56, 0x05, 0xB0, 0xD0, 0x17, 0x40, 0x10,
  0xDB, 0x05, 0x71, 0x05, 0xB0, 0xD0, 0x17, 0x30, 0xCB, 0x05, 0x73, 0x05, 0xB0, 0xC7, 0x20, 0x6B,
  0x05, 0x75, 0x05, 0xB0, 0x67, 0x10, 0x6F, 0xFE, 0x06, 0x72, 0x0C, 0xFF, 0xC0, 0xC7, 0x30, 0x10,
  0xDF, 0xFA, 0x0D, 0x01, 0x30, 0x77, 0x01, 0x0D, 0xFF, 0x0D, 0x01, 0x38, 0x18, 0xF8, 0x70, 0x10,
  0xDF, 0xD0, 0xD0, 0x13, 0x03, 0xB0, 0x37, 0x01, 0x0D, 0xFB, 0x0D, 0x01, 0x40, 0xCB, 0x0C, 0x71,
  0x01, 0x0D, 0xF9, 0x0D, 0x01, 0x40, 0x4D, 0x03, 0x71, 0x01, 0x0D, 0xE0, 0xD0, 0x15, 0x07, 0xD0,
  0x67, 0x20, 0x10, 0xDC, 0x0D, 0x01, 0x60, 0x4D, 0x04, 0x73, 0x01, 0x0C, 0xA0, 0xC0, 0x17, 0x10,
  0x9B, 0x09, 0x76, 0x00, 0x67, 0x48, 0x14, 0x74, 0x80, 0x9E, 0x70, 0x80, 0xAE, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_color_fill() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 0, 32, 35), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_color_fill_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_color_reset 36x36, 4-bit Alpha,  RLE, 208 bytes.
static const uint8_t ic_outlined_36_editor_format_color_reset_data[] PROGMEM = {
  0x74, 0x00, 0x97, 0x77, 0x06, 0xA0, 0x67, 0x50, 0x16, 0x03, 0xC0, 0x37, 0x38, 0x1A, 0xC1, 0x40,
  0x10, 0xDC, 0x0D, 0x01, 0x71, 0x0A, 0xA0, 0xC0, 0x13, 0x08, 0xA0, 0x0E, 0xA0, 0xA7, 0x10, 0x5B,
  0x0C, 0x01, 0x38, 0x2C, 0xF4, 0x4B, 0x05, 0x71, 0x05, 0xB0, 0xC0, 0x13, 0x06, 0x20, 0x8A, 0x0E,
  0x01, 0x71, 0x05, 0xB0, 0xC0, 0x16, 0x0D, 0xA0, 0xA7, 0x20, 0x5B, 0x0C, 0x01, 0x50, 0x3B, 0x04,
  0x72, 0x05, 0xB0, 0xC0, 0x15, 0x09, 0xA0, 0xC7, 0x20, 0x5C, 0x0C, 0x01, 0x40, 0x10, 0xEA, 0x05,
  0x71, 0x0C, 0xD0, 0xC0, 0x14, 0x07, 0xA0, 0xC7, 0x03, 0xA0, 0xE0, 0x6B, 0x0C, 0x01, 0x30, 0x10,
  0xEA, 0x03, 0x60, 0x8A, 0x81, 0x90, 0x5B, 0x0C, 0x01, 0x30, 0x9A, 0x08, 0x60, 0xCA, 0x04, 0x20,
  0x5B, 0x0C, 0x01, 0x38, 0x1C, 0xFB, 0x60, 0xEA, 0x40, 0x5B, 0x0C, 0x01, 0x30, 0xC0, 0xE6, 0x0E,
  0xA5, 0x05, 0xB0, 0xC0, 0x13, 0x0B, 0x60, 0xDA, 0x03, 0x50, 0x5B, 0x0C, 0x01, 0x72, 0x09, 0xA0,
  0x86, 0x05, 0xB0, 0xC0, 0x17, 0x10, 0x4B, 0x02, 0x60, 0x5B, 0x0C, 0x01, 0x71, 0x0B, 0xA0, 0xD0,
  0x26, 0x07, 0xB0, 0xC0, 0x17, 0x02, 0x0E, 0xB0, 0x80, 0x32, 0x03, 0x09, 0xD0, 0xC0, 0x17, 0x03,
  0x0E, 0xFB, 0x0E, 0xB0, 0xC0, 0x17, 0x02, 0x0B, 0xF9, 0x81, 0xB1, 0x5B, 0x0C, 0x01, 0x71, 0x86,
  0x49, 0xDE, 0xED, 0x93, 0x30, 0x5B, 0x0B, 0x77, 0x68, 0x25, 0xFE, 0x27, 0x77, 0x05, 0x02, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_color_reset() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 5, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_color_reset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_color_text 36x36, 4-bit Alpha,  RLE, 142 bytes.
static const uint8_t ic_outlined_36_editor_format_color_text_data[] PROGMEM = {
  0x76, 0x80, 0x07, 0x77, 0x74, 0x03, 0xC0, 0x37, 0x77, 0x30, 0x9C, 0x09, 0x77, 0x73, 0x0E, 0xC0,
  0xE7, 0x77, 0x20, 0x5A, 0x00, 0xDA, 0x05, 0x77, 0x71, 0x0B, 0xA0, 0x08, 0xA0, 0xB7, 0x77, 0x02,
  0xB0, 0x02, 0xB0, 0x27, 0x76, 0x07, 0xA0, 0xC2, 0x0C, 0xA0, 0x77, 0x76, 0x0D, 0xA0, 0x72, 0x07,
  0xA0, 0xD7, 0x75, 0x03, 0xB0, 0x12, 0x01, 0xB0, 0x37, 0x74, 0x09, 0xA0, 0xB4, 0x0B, 0xA0, 0x97,
  0x74, 0x0E, 0xA0, 0x64, 0x06, 0xA0, 0xE7, 0x73, 0x05, 0xB0, 0x14, 0x01, 0xB0, 0x57, 0x72, 0x0B,
  0xB8, 0x02, 0xDB, 0x0B, 0x77, 0x10, 0x2F, 0xF0, 0x27, 0x70, 0x7F, 0xF0, 0x77, 0x70, 0xDA, 0x0A,
  0x80, 0x41, 0x0A, 0xA0, 0xD7, 0x60, 0x4B, 0x04, 0x71, 0x04, 0xB0, 0x47, 0x50, 0x9A, 0x0E, 0x73,
  0x0E, 0xA0, 0x97, 0x50, 0xEA, 0x08, 0x73, 0x08, 0xA0, 0xE7, 0x40, 0x6B, 0x03, 0x73, 0x03, 0xB0,
  0x67, 0x30, 0x50, 0xF7, 0x75, 0x0F, 0x70, 0x58, 0x09, 0xF1, 0x08, 0x0A, 0xE0, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_color_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 35), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_color_text_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_indent_decrease 36x36, 4-bit Alpha,  RLE, 136 bytes.
static const uint8_t ic_outlined_36_editor_format_indent_decrease_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x09, 0x80, 0x00, 0x38, 0x09, 0x27, 0x03, 0x75, 0x07, 0xFF, 0x07, 0x50, 0x10, 0x55, 0x07,
  0xFF, 0x07, 0x48, 0x11, 0xD7, 0x50, 0x38, 0x09, 0x27, 0x03, 0x38, 0x21, 0xDF, 0x77, 0x77, 0x20,
  0x10, 0xDA, 0x07, 0x77, 0x71, 0x01, 0x0D, 0xB0, 0x75, 0x03, 0x80, 0x92, 0x78, 0x13, 0x1D, 0xC0,
  0x75, 0x07, 0xFF, 0x81, 0x71, 0xDC, 0x07, 0x50, 0x7F, 0xF8, 0x27, 0x01, 0xDB, 0x07, 0x50, 0x38,
  0x09, 0x27, 0x03, 0x20, 0x10, 0xDA, 0x07, 0x77, 0x73, 0x82, 0x1D, 0xF7, 0x77, 0x74, 0x81, 0x1D,
  0x75, 0x03, 0x80, 0x92, 0x70, 0x35, 0x01, 0x05, 0x50, 0x7F, 0xF0, 0x77, 0x50, 0x7F, 0xF0, 0x77,
  0x50, 0x38, 0x09, 0x27, 0x03, 0x80, 0xE4, 0x00, 0x38, 0x0A, 0x67, 0x03, 0x07, 0xFF, 0xFD, 0x00,
  0x7F, 0xFF, 0xD0, 0x70, 0x38, 0x0A, 0x67, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_indent_decrease() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_indent_decrease_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_indent_increase 36x36, 4-bit Alpha,  RLE, 134 bytes.
static const uint8_t ic_outlined_36_editor_format_indent_increase_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70,
  0x38, 0x09, 0x80, 0x00, 0x38, 0x09, 0x27, 0x03, 0x75, 0x07, 0xFF, 0x81, 0x75, 0x17, 0x30, 0x7F,
  0xF8, 0x27, 0x7D, 0x17, 0x20, 0x38, 0x09, 0x27, 0x83, 0x37, 0xFD, 0x17, 0x77, 0x30, 0x7A, 0x0D,
  0x01, 0x77, 0x72, 0x07, 0xB0, 0xD0, 0x16, 0x03, 0x80, 0x92, 0x70, 0x30, 0x7C, 0x0D, 0x01, 0x50,
  0x7F, 0xF0, 0x07, 0xC0, 0xD0, 0x15, 0x07, 0xFF, 0x00, 0x7B, 0x0D, 0x01, 0x60, 0x38, 0x09, 0x27,
  0x03, 0x07, 0xA0, 0xD0, 0x17, 0x77, 0x28, 0x27, 0xFD, 0x17, 0x77, 0x38, 0x17, 0xD1, 0x72, 0x03,
  0x80, 0x92, 0x78, 0x13, 0x51, 0x73, 0x07, 0xFF, 0x07, 0x75, 0x07, 0xFF, 0x07, 0x75, 0x03, 0x80,
  0x92, 0x70, 0x38, 0x0E, 0x40, 0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD,
  0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_indent_increase() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_indent_increase_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_italic 36x36, 4-bit Alpha,  RLE, 65 bytes.
static const uint8_t ic_outlined_36_editor_format_italic_data[] PROGMEM = {
  0x6F, 0xD6, 0xFD, 0x6F, 0xD6, 0xFD, 0x60, 0xF7, 0x0D, 0xB0, 0xD8, 0x00, 0x77, 0x10, 0x1C, 0x05,
  0x75, 0x08, 0xB0, 0xE7, 0x60, 0xEB, 0x08, 0x75, 0x06, 0xC0, 0x17, 0x50, 0xCB, 0x0A, 0x75, 0x03,
  0xC0, 0x37, 0x50, 0xAB, 0x0C, 0x75, 0x01, 0xC0, 0x67, 0x50, 0x8B, 0x0E, 0x76, 0x0E, 0xB0, 0x87,
  0x50, 0x5C, 0x01, 0x71, 0x80, 0x07, 0x0D, 0xB0, 0xD0, 0xF7, 0x6F, 0xD6, 0xFD, 0x6F, 0xD6, 0xFD,
  0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_italic() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 6, 26, 26), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_italic_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_line_spacing 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_format_line_spacing_data[] PROGMEM = {
  0x50, 0x77, 0x77, 0x71, 0x81, 0xBF, 0xB7, 0x77, 0x60, 0xBB, 0x0B, 0x58, 0x09, 0x67, 0x20, 0xBD,
  0x0B, 0x4F, 0xFC, 0x10, 0xBF, 0x0B, 0x3F, 0xFC, 0x03, 0x0F, 0x7B, 0x0F, 0x70, 0x32, 0x80, 0x96,
  0x74, 0xB7, 0x77, 0x7B, 0x77, 0x77, 0xB7, 0x77, 0x7B, 0x77, 0x77, 0xB7, 0x77, 0x7B, 0x68, 0x09,
  0x67, 0x4B, 0x6F, 0xFC, 0x4B, 0x6F, 0xFC, 0x4B, 0x68, 0x09, 0x67, 0x4B, 0x77, 0x77, 0xB7, 0x77,
  0x7B, 0x77, 0x77, 0xB7, 0x77, 0x7B, 0x77, 0x73, 0x03, 0x0F, 0x7B, 0x0F, 0x70, 0x32, 0x80, 0x96,
  0x71, 0x0B, 0xF0, 0xB3, 0xFF, 0xC2, 0x0B, 0xD0, 0xB4, 0xFF, 0xC3, 0x0B, 0xB0, 0xB5, 0x80, 0x96,
  0x74, 0x81, 0xBF, 0xB7, 0x77, 0x71, 0x07, 0x77, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_line_spacing() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 5, 32, 30), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_line_spacing_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_list_bulleted 36x36, 4-bit Alpha,  RLE, 111 bytes.
static const uint8_t ic_outlined_36_editor_format_list_bulleted_data[] PROGMEM = {
  0x20, 0x02, 0x77, 0x75, 0x09, 0xA0, 0x92, 0x03, 0x80, 0xA0, 0x70, 0x30, 0x2C, 0x81, 0x20, 0x7F,
  0xFE, 0x07, 0x02, 0xC8, 0x12, 0x07, 0xFF, 0xE8, 0x17, 0x09, 0xA0, 0x92, 0x03, 0x80, 0xA0, 0x70,
  0x32, 0x00, 0x28, 0x09, 0xD6, 0x00, 0x02, 0x77, 0x75, 0x09, 0xA0, 0x92, 0x03, 0x80, 0xA0, 0x70,
  0x30, 0x2C, 0x81, 0x20, 0x7F, 0xFE, 0x07, 0x02, 0xC8, 0x12, 0x07, 0xFF, 0xE8, 0x17, 0x09, 0xA0,
  0x92, 0x03, 0x80, 0xA0, 0x70, 0x32, 0x00, 0x28, 0x09, 0xD6, 0x00, 0x02, 0x77, 0x75, 0x09, 0xA0,
  0x92, 0x03, 0x80, 0xA0, 0x70, 0x30, 0x2C, 0x81, 0x20, 0x7F, 0xFE, 0x07, 0x02, 0xC8, 0x12, 0x07,
  0xFF, 0xE8, 0x17, 0x08, 0xA0, 0x82, 0x03, 0x80, 0xA0, 0x70, 0x32, 0x00, 0x27, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_list_bulleted() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 31, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_list_bulleted_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_list_numbered 36x36, 4-bit Alpha,  RLE, 108 bytes.
static const uint8_t ic_outlined_36_editor_format_list_numbered_data[] PROGMEM = {
  0xB7, 0x77, 0x50, 0x70, 0xB9, 0x40, 0x38, 0x0A, 0x07, 0x81, 0x30, 0x79, 0x40, 0x7F, 0xFE, 0x81,
  0x70, 0x79, 0x40, 0x7F, 0xFE, 0x81, 0x70, 0x79, 0x40, 0x38, 0x0A, 0x07, 0x81, 0x30, 0x79, 0x80,
  0x9D, 0x50, 0xC0, 0x77, 0x77, 0x38, 0x37, 0x7B, 0xF4, 0x20, 0x38, 0x0A, 0x07, 0x83, 0x30, 0x3E,
  0x73, 0x07, 0xFF, 0xE8, 0x27, 0x1D, 0xA4, 0x07, 0xFF, 0xE8, 0x47, 0xCF, 0x87, 0x32, 0x03, 0x80,
  0xA0, 0x70, 0x3C, 0x07, 0x80, 0x9D, 0x30, 0xC0, 0x77, 0x77, 0x30, 0xF7, 0x90, 0x72, 0x03, 0x80,
  0xA0, 0x78, 0x43, 0x05, 0xBF, 0x72, 0x07, 0xFF, 0xE8, 0x47, 0x05, 0xBF, 0x72, 0x07, 0xFF, 0xE8,
  0x00, 0x79, 0x07, 0x20, 0x38, 0x0A, 0x07, 0x03, 0xC0, 0x77, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_list_numbered() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 31, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_list_numbered_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_list_numbered_rtl 36x36, 4-bit Alpha,  RLE, 84 bytes.
static const uint8_t ic_outlined_36_editor_format_list_numbered_rtl_data[] PROGMEM = {
  0x77, 0x73, 0xB2, 0x80, 0xA1, 0x73, 0x07, 0x0B, 0x92, 0xFF, 0xF4, 0x07, 0x92, 0xFF, 0xF4, 0x07,
  0x92, 0x80, 0xA1, 0x74, 0x07, 0x97, 0x77, 0x60, 0x79, 0x80, 0x9D, 0x50, 0xC8, 0x0A, 0x27, 0x38,
  0x37, 0x7B, 0xF4, 0xFF, 0xF4, 0x81, 0x3E, 0x71, 0xFF, 0xF3, 0x81, 0x1D, 0xA2, 0x80, 0xA1, 0x73,
  0x83, 0xCF, 0x87, 0x37, 0x77, 0x3C, 0x07, 0x80, 0x9D, 0x30, 0xC8, 0x0A, 0x27, 0x30, 0xF7, 0x90,
  0x7F, 0xFF, 0x48, 0x25, 0xBF, 0x7F, 0xFF, 0x40, 0x50, 0xB9, 0x80, 0xA2, 0x73, 0x0F, 0x79, 0x07,
  0x77, 0x73, 0xC0, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_list_numbered_rtl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 31, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_list_numbered_rtl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_paint 36x36, 4-bit Alpha,  RLE, 122 bytes.
static const uint8_t ic_outlined_36_editor_format_paint_data[] PROGMEM = {
  0x08, 0xFF, 0xD0, 0x85, 0xFF, 0xF5, 0xFF, 0xF5, 0xB7, 0x71, 0xF0, 0x7B, 0x77, 0x1F, 0x07, 0xB7,
  0x71, 0xF0, 0x7F, 0xFF, 0x10, 0x7A, 0x07, 0xFF, 0xF1, 0x07, 0xA0, 0x70, 0x8F, 0xFD, 0x81, 0x80,
  0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77,
  0x07, 0xFF, 0xB0, 0x77, 0x07, 0xFF, 0xB0, 0x77, 0x07, 0xFF, 0xB0, 0x77, 0x07, 0xD0, 0x77, 0x75,
  0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75,
  0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75,
  0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75, 0x07, 0xD0, 0x77, 0x75,
  0x07, 0xD0, 0x77, 0x75, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_paint() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 31, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_paint_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_quote 36x36, 4-bit Alpha,  RLE, 166 bytes.
static const uint8_t ic_outlined_36_editor_format_quote_data[] PROGMEM = {
  0x07, 0xFC, 0x07, 0x20, 0x7F, 0xC0, 0x07, 0xFC, 0x07, 0x20, 0x7F, 0xC0, 0x07, 0xFC, 0x07, 0x20,
  0x7F, 0xC0, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x07, 0xA0, 0x75,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x75, 0x07, 0xA0, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x07, 0xA0,
  0x75, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x75, 0x07, 0xA0, 0x07, 0xF0, 0xA0, 0x7A, 0x07, 0x20, 0x7F, 0x0A, 0x07, 0xA0, 0x07, 0xF0,
  0x20, 0xAA, 0x07, 0x20, 0x7F, 0x02, 0x0A, 0xA0, 0x07, 0xE0, 0xA0, 0x2B, 0x02, 0x20, 0x7E, 0x0A,
  0x02, 0xB0, 0x23, 0x02, 0xB0, 0x20, 0xAA, 0x0A, 0x60, 0x2B, 0x02, 0x0A, 0xA0, 0xA4, 0x0A, 0xA0,
  0xA0, 0x2B, 0x02, 0x60, 0xAA, 0x0A, 0x02, 0xB0, 0x23, 0x02, 0xB0, 0x20, 0xAA, 0x0A, 0x60, 0x2B,
  0x02, 0x0A, 0xA0, 0xA4, 0x0A, 0xF0, 0x26, 0x0A, 0xF0, 0x23, 0x02, 0xF0, 0xA6, 0x02, 0xF0, 0xA4,
  0x0A, 0xF0, 0x26, 0x0A, 0xF0, 0x23,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_quote() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 9, 31, 26), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_quote_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_shapes 36x36, 4-bit Alpha,  RLE, 345 bytes.
static const uint8_t ic_outlined_36_editor_format_shapes_data[] PROGMEM = {
  0x03, 0x80, 0x47, 0x03, 0x77, 0x03, 0x80, 0x47, 0x03, 0x07, 0xF9, 0x07, 0x77, 0x07, 0xF9, 0x00,
  0x7F, 0x90, 0x77, 0x70, 0x7F, 0x90, 0x07, 0xA8, 0x2B, 0x77, 0xBA, 0x0B, 0x80, 0x92, 0x70, 0xBA,
  0x82, 0xB7, 0x7B, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xFF, 0xE0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72,
  0x07, 0xFF, 0xE0, 0x72, 0x07, 0xA0, 0x07, 0xA8, 0x2B, 0x77, 0xBA, 0x0B, 0x80, 0x92, 0x70, 0xBA,
  0x82, 0xB7, 0x7B, 0xA0, 0x07, 0xF9, 0x07, 0x77, 0x07, 0xF9, 0x00, 0x7F, 0x90, 0x77, 0x70, 0x7F,
  0x98, 0x37, 0x37, 0x7B, 0xA8, 0x2B, 0x77, 0x35, 0x82, 0x17, 0x71, 0x58, 0x23, 0x77, 0xBA, 0x82,
  0xB7, 0x73, 0x30, 0x7A, 0x07, 0x71, 0x06, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x71,
  0x0C, 0xA0, 0xC7, 0x10, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x78, 0x43, 0xFE, 0xEF, 0x27, 0x07, 0xA0,
  0x76, 0x07, 0xA0, 0x77, 0x84, 0x8F, 0x99, 0xF8, 0x70, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x78, 0x4E,
  0xF4, 0x4F, 0xE7, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x76, 0x81, 0x5F, 0xE2, 0x81, 0xEF, 0x46, 0x07,
  0xA0, 0x76, 0x07, 0xA0, 0x76, 0x81, 0xBF, 0x92, 0x81, 0x9F, 0xA6, 0x07, 0xA0, 0x76, 0x07, 0xA0,
  0x75, 0x01, 0xA0, 0x32, 0x03, 0xA0, 0x15, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x75, 0x07, 0xA8, 0x00,
  0xDA, 0x06, 0x50, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x50, 0xDF, 0x90, 0xC5, 0x07, 0xA0, 0x76, 0x07,
  0xA0, 0x74, 0x03, 0xA0, 0x24, 0x03, 0xA0, 0x34, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x74, 0x81, 0x9F,
  0xC6, 0x81, 0xDF, 0x94, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x74, 0x81, 0xEF, 0x66, 0x81, 0x7F, 0xE4,
  0x07, 0xA0, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x73, 0x82, 0x37, 0x7B, 0xA8, 0x2B, 0x77,
  0x37, 0x78, 0x23, 0x77, 0xBA, 0x83, 0xB7, 0x73, 0x7F, 0x90, 0x77, 0x70, 0x7F, 0x90, 0x07, 0xF9,
  0x07, 0x77, 0x07, 0xF9, 0x00, 0x7A, 0x82, 0xB7, 0x7B, 0xA0, 0xB8, 0x09, 0x27, 0x0B, 0xA8, 0x2B,
  0x77, 0xBA, 0x00, 0x7A, 0x07, 0x20, 0x7F, 0xFE, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7F,
  0xFE, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x82, 0xB7, 0x7B, 0xA0, 0xB8, 0x09, 0x27, 0x0B, 0xA8, 0x2B,
  0x77, 0xBA, 0x00, 0x7F, 0x90, 0x77, 0x70, 0x7F, 0x90, 0x07, 0xF9, 0x07, 0x77, 0x07, 0xF9, 0x07,
  0x03, 0x80, 0x47, 0x03, 0x77, 0x03, 0x80, 0x47, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_shapes() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 34, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_shapes_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_size 36x36, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_36_editor_format_size_data[] PROGMEM = {
  0x72, 0x07, 0xFF, 0xD7, 0x20, 0x7F, 0xFD, 0x72, 0x07, 0xFF, 0xD7, 0x20, 0x7F, 0xFD, 0x72, 0x03,
  0x80, 0x37, 0xC0, 0xB8, 0x03, 0x77, 0x73, 0xC0, 0x77, 0x77, 0x3C, 0x07, 0x70, 0x38, 0x09, 0x17,
  0x3C, 0x07, 0x70, 0x7F, 0xE3, 0xC0, 0x77, 0x07, 0xFE, 0x3C, 0x07, 0x70, 0x7F, 0xE3, 0xC0, 0x77,
  0x07, 0xFE, 0x3C, 0x07, 0x75, 0xC0, 0x77, 0xC0, 0x77, 0x5C, 0x07, 0x7C, 0x07, 0x75, 0xC0, 0x77,
  0xC0, 0x77, 0x5C, 0x07, 0x7C, 0x07, 0x75, 0xC0, 0x77, 0xC0, 0x77, 0x5C, 0x07, 0x7C, 0x07, 0x75,
  0xC0, 0x77, 0xC0, 0x77, 0x5C, 0x07, 0x7C, 0x07, 0x75, 0xC0, 0x77, 0xC0, 0x77, 0x5C, 0x07, 0x7C,
  0x07, 0x75, 0x80, 0x07, 0x03, 0x78, 0x00, 0x70, 0x37,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_size() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 32, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_size_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_strikethrough 36x36, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_outlined_36_editor_format_strikethrough_data[] PROGMEM = {
  0x30, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07,
  0x60, 0x38, 0x03, 0x7E, 0x80, 0x37, 0x03, 0x77, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E,
  0x80, 0x9B, 0x30, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x80, 0x9B,
  0x30, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0x80, 0x27, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_strikethrough() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 31, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_strikethrough_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_textdirection_l_to_r 36x36, 4-bit Alpha,  RLE, 206 bytes.
static const uint8_t ic_outlined_36_editor_format_textdirection_l_to_r_data[] PROGMEM = {
  0x38, 0x12, 0x9D, 0xFD, 0x07, 0x71, 0x06, 0xFF, 0x90, 0x77, 0x05, 0xFF, 0xA0, 0x77, 0x0D, 0xA8,
  0x1C, 0x38, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x4A, 0x82, 0xD1, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x77, 0x20, 0x6A, 0x09, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x72, 0x06, 0xA0, 0x92, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x77, 0x20, 0x4A, 0x82, 0xD1, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x30, 0xDA,
  0x81, 0xC3, 0x8A, 0x07, 0x20, 0x7A, 0x07, 0x73, 0x05, 0xF0, 0x72, 0x07, 0xA0, 0x77, 0x40, 0x6E,
  0x07, 0x20, 0x7A, 0x07, 0x75, 0x81, 0x29, 0xDB, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x10, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x77, 0x10, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x10, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x77, 0x10, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x10, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77,
  0x10, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x10, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x50, 0x17,
  0x48, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x17, 0xD1, 0x77, 0x71, 0x82, 0x7F, 0xD1, 0x77,
  0x70, 0x7A, 0x0D, 0x01, 0x20, 0x38, 0x09, 0x57, 0x0B, 0xB8, 0x2D, 0x10, 0x7F, 0xFF, 0x98, 0x1D,
  0x17, 0xFF, 0xF9, 0x81, 0xD1, 0x38, 0x09, 0x57, 0x0B, 0xB0, 0xD0, 0x17, 0x75, 0x07, 0xA0, 0xD0,
  0x17, 0x76, 0x82, 0x7F, 0xD1, 0x77, 0x78, 0x17, 0xD1, 0x77, 0x71, 0x05, 0x01, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_textdirection_l_to_r() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 3, 31, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_textdirection_l_to_r_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_textdirection_r_to_l 36x36, 4-bit Alpha,  RLE, 120 bytes.
static const uint8_t ic_outlined_36_editor_format_textdirection_r_to_l_data[] PROGMEM = {
  0x68, 0x16, 0xCE, 0xFD, 0x70, 0x10, 0xCF, 0xF9, 0x70, 0xCF, 0xFA, 0x60, 0x6B, 0x07, 0x01, 0xB3,
  0xB7, 0x20, 0xCA, 0x07, 0x2B, 0x3B, 0x72, 0x0E, 0xA0, 0x12, 0xB3, 0xB7, 0x20, 0xEA, 0x01, 0x2B,
  0x3B, 0x72, 0x0C, 0xA0, 0x72, 0xB3, 0xB7, 0x20, 0x6B, 0x07, 0x01, 0xB3, 0xB7, 0x30, 0xCF, 0x3B,
  0x73, 0x01, 0x0C, 0xE3, 0xB7, 0x58, 0x16, 0xCE, 0xB3, 0xB7, 0x71, 0xB3, 0xB7, 0x71, 0xB3, 0xB7,
  0x71, 0xB3, 0xB7, 0x71, 0xB3, 0xB7, 0x71, 0xB3, 0xB7, 0x71, 0xB3, 0xB7, 0x40, 0x73, 0xB3, 0xB7,
  0x30, 0x79, 0x30, 0xF7, 0x30, 0xF7, 0x72, 0x07, 0xA7, 0x76, 0x07, 0xB7, 0x75, 0x07, 0xC8, 0x09,
  0x77, 0xFF, 0xFA, 0x07, 0xFF, 0xFA, 0x10, 0x7C, 0x80, 0x96, 0x72, 0x07, 0xB7, 0x77, 0x07, 0xA7,
  0x77, 0x10, 0x79, 0x77, 0x72, 0x07, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_textdirection_r_to_l() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 29, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_textdirection_r_to_l_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_format_underlined 36x36, 4-bit Alpha,  RLE, 132 bytes.
static const uint8_t ic_outlined_36_editor_format_underlined_data[] PROGMEM = {
  0x20, 0xF7, 0x05, 0x73, 0x05, 0x0F, 0x74, 0xB0, 0xB7, 0x30, 0xBB, 0x4B, 0x0B, 0x73, 0x0B, 0xB4,
  0xB0, 0xB7, 0x30, 0xBB, 0x4B, 0x0B, 0x73, 0x0B, 0xB4, 0xB0, 0xB7, 0x30, 0xBB, 0x4B, 0x0B, 0x73,
  0x0B, 0xB4, 0xB0, 0xB7, 0x30, 0xBB, 0x4B, 0x0B, 0x73, 0x0B, 0xB4, 0xB0, 0xB7, 0x30, 0xBB, 0x4B,
  0x0B, 0x73, 0x0B, 0xB4, 0xB0, 0xB7, 0x30, 0xBB, 0x4B, 0x0B, 0x73, 0x0B, 0xB4, 0x0D, 0xA0, 0xD7,
  0x30, 0xDA, 0x0D, 0x40, 0xBB, 0x02, 0x71, 0x02, 0xB0, 0xB4, 0x06, 0xB0, 0xB7, 0x10, 0xBB, 0x06,
  0x40, 0x10, 0xEB, 0x09, 0x60, 0x9B, 0x0E, 0x01, 0x50, 0x6C, 0x84, 0xD7, 0x44, 0x7D, 0xC0, 0x67,
  0x0A, 0xFD, 0x0A, 0x72, 0x08, 0xFB, 0x08, 0x74, 0x03, 0x0B, 0xE0, 0xB0, 0x37, 0x78, 0x41, 0x57,
  0x75, 0x18, 0x0E, 0x00, 0x03, 0x80, 0xA0, 0x70, 0x30, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x07, 0x03,
  0x80, 0xA0, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_format_underlined() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 4, 28, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_format_underlined_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_functions 36x36, 4-bit Alpha,  RLE, 77 bytes.
static const uint8_t ic_outlined_36_editor_functions_data[] PROGMEM = {
  0x80, 0xE2, 0xF0, 0x7F, 0xFB, 0x10, 0x5D, 0x0D, 0x80, 0x67, 0x20, 0x4D, 0x07, 0x75, 0x03, 0x0E,
  0xC0, 0x77, 0x50, 0x30, 0xEC, 0x07, 0x75, 0x02, 0x0D, 0xC0, 0x77, 0x50, 0x10, 0xDC, 0x07, 0x75,
  0x01, 0x0C, 0xC0, 0x77, 0x60, 0xBC, 0x07, 0x75, 0x0B, 0xC0, 0x77, 0x30, 0x10, 0xCC, 0x07, 0x73,
  0x01, 0x0D, 0xC0, 0x77, 0x30, 0x20, 0xDC, 0x07, 0x73, 0x03, 0x0E, 0xC0, 0x77, 0x30, 0x30, 0xEC,
  0x07, 0x73, 0x04, 0xD0, 0x77, 0x30, 0x5D, 0x0D, 0x80, 0x77, 0x80, 0x98, 0x3F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_functions() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 6, 26, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_functions_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_height 36x36, 4-bit Alpha,  RLE, 113 bytes.
static const uint8_t ic_outlined_36_editor_height_data[] PROGMEM = {
  0x50, 0x01, 0x72, 0x82, 0x1D, 0xD1, 0x70, 0x10, 0xDA, 0x0D, 0x01, 0x50, 0x20, 0xDC, 0x0D, 0x02,
  0x30, 0x20, 0xDE, 0x83, 0xD2, 0x02, 0xDF, 0x98, 0x5D, 0x25, 0x77, 0x7B, 0xA8, 0x3B, 0x77, 0x75,
  0x40, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A,
  0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x74, 0x83, 0x57, 0x77, 0xBA, 0x85, 0xB7, 0x77, 0x52, 0xDF, 0x98, 0x3D, 0x20, 0x2D, 0xE0, 0xD0,
  0x23, 0x02, 0x0D, 0xC0, 0xD0, 0x25, 0x01, 0x0D, 0xA0, 0xD0, 0x17, 0x82, 0x1D, 0xD1, 0x72, 0x00,
  0x15,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_height() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 4, 23, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_height_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_hexagon 36x36, 4-bit Alpha,  RLE, 194 bytes.
static const uint8_t ic_outlined_36_editor_hexagon_data[] PROGMEM = {
  0x71, 0x80, 0x94, 0x77, 0x71, 0x05, 0xFF, 0xA0, 0x57, 0x70, 0xDF, 0xFA, 0x0D, 0x76, 0x08, 0xA0,
  0xD8, 0x09, 0x07, 0x0D, 0xA0, 0x87, 0x40, 0x2B, 0x05, 0x75, 0x05, 0xB0, 0x27, 0x30, 0xAA, 0x0B,
  0x77, 0x0C, 0xA0, 0xA7, 0x20, 0x4B, 0x03, 0x77, 0x03, 0xB0, 0x47, 0x10, 0xCA, 0x09, 0x77, 0x20,
  0x9A, 0x0C, 0x70, 0x6A, 0x0E, 0x01, 0x77, 0x20, 0x10, 0xEA, 0x06, 0x50, 0x10, 0xEA, 0x07, 0x77,
  0x40, 0x7A, 0x0E, 0x01, 0x40, 0x8A, 0x0D, 0x77, 0x60, 0xDA, 0x08, 0x30, 0x2B, 0x04, 0x77, 0x60,
  0x5B, 0x02, 0x20, 0xBA, 0x0B, 0x77, 0x71, 0x0B, 0xA8, 0x1B, 0x04, 0xB0, 0x27, 0x77, 0x10, 0x2B,
  0x00, 0x4B, 0x02, 0x77, 0x71, 0x02, 0xB8, 0x14, 0x0B, 0xA0, 0xB7, 0x77, 0x10, 0xBA, 0x0B, 0x20,
  0x2B, 0x04, 0x77, 0x60, 0x4B, 0x02, 0x30, 0x8A, 0x0D, 0x77, 0x60, 0xDA, 0x08, 0x40, 0x10, 0xEA,
  0x07, 0x77, 0x40, 0x7A, 0x0E, 0x01, 0x50, 0x6A, 0x0E, 0x01, 0x77, 0x20, 0x10, 0xEA, 0x06, 0x70,
  0xCA, 0x09, 0x77, 0x20, 0x9A, 0x0C, 0x71, 0x04, 0xB0, 0x37, 0x70, 0x3B, 0x04, 0x72, 0x0A, 0xA0,
  0xB7, 0x70, 0xBA, 0x0A, 0x73, 0x02, 0xB0, 0x57, 0x50, 0x5B, 0x02, 0x74, 0x08, 0xA0, 0xD8, 0x09,
  0x07, 0x0D, 0xA0, 0x87, 0x60, 0xDF, 0xFA, 0x0D, 0x77, 0x05, 0xFF, 0xA0, 0x57, 0x71, 0x80, 0x94,
  0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_hexagon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 33, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_hexagon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_highlight 36x36, 4-bit Alpha,  RLE, 167 bytes.
static const uint8_t ic_outlined_36_editor_highlight_data[] PROGMEM = {
  0x74, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x60, 0x17, 0x10,
  0x7A, 0x07, 0x71, 0x01, 0x38, 0x16, 0xE3, 0x78, 0x23, 0x77, 0x37, 0x83, 0x3E, 0x60, 0x6A, 0x0E,
  0x03, 0x77, 0x20, 0x30, 0xEA, 0x81, 0x62, 0xDA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x6D, 0x20,
  0x2D, 0xFC, 0x17, 0x78, 0x31, 0xDF, 0xD2, 0x38, 0x12, 0xB1, 0x77, 0x28, 0x11, 0xB2, 0x77, 0x77,
  0x48, 0x09, 0x67, 0x71, 0xFF, 0xC7, 0x1F, 0xFC, 0x71, 0xB8, 0x09, 0x07, 0xB7, 0x1B, 0x75, 0xB7,
  0x1B, 0x75, 0xB7, 0x1B, 0x75, 0xB7, 0x1B, 0x0B, 0x73, 0x0B, 0xB7, 0x10, 0x7B, 0x0B, 0x71, 0x0B,
  0xB0, 0x77, 0x20, 0x7B, 0x0B, 0x60, 0xBB, 0x07, 0x74, 0x07, 0xB0, 0xB4, 0x0B, 0xB0, 0x77, 0x60,
  0x7B, 0x07, 0x20, 0x7B, 0x07, 0x77, 0x10, 0x9A, 0x07, 0x20, 0x7A, 0x09, 0x77, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x77, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7F, 0x90, 0x77, 0x72, 0x07, 0xF9,
  0x07, 0x77, 0x20, 0x7F, 0x90, 0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_highlight() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 3, 30, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_highlight_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_horizontal_distribute 36x36, 4-bit Alpha,  RLE, 119 bytes.
static const uint8_t ic_outlined_36_editor_horizontal_distribute_data[] PROGMEM = {
  0xB7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7,
  0x77, 0x3E, 0x72, 0x84, 0x17, 0x77, 0x71, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C,
  0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03,
  0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72,
  0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7,
  0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x20, 0x3C, 0x03, 0x72, 0xE7, 0x28,
  0x41, 0x77, 0x77, 0x17, 0x2E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77,
  0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xB0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_horizontal_distribute() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_horizontal_distribute_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_horizontal_rule 36x36, 4-bit Alpha,  RLE, 8 bytes.
static const uint8_t ic_outlined_36_editor_horizontal_rule_data[] PROGMEM = {
  0x80, 0xA4, 0x78, 0x0D, 0x4F, 0x80, 0xA4, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_horizontal_rule() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 16, 29, 19), Box(0, 0, 35, 35),
      ic_outlined_36_editor_horizontal_rule_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_chart_outlined 36x36, 4-bit Alpha,  RLE, 258 bytes.
static const uint8_t ic_outlined_36_editor_insert_chart_outlined_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x0B, 0x80,
  0xA0, 0x70, 0xBA, 0x07, 0x04, 0xFF, 0xFD, 0x81, 0x40, 0x9F, 0xFF, 0xB0, 0x93, 0x04, 0x80, 0xA2,
  0x70, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_chart_outlined() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_chart_outlined_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_chart 36x36, 4-bit Alpha,  RLE, 258 bytes.
static const uint8_t ic_outlined_36_editor_insert_chart_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x18, 0x23, 0x77, 0x37, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x00, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x0B, 0x80,
  0xA0, 0x70, 0xBA, 0x07, 0x04, 0xFF, 0xFD, 0x81, 0x40, 0x9F, 0xFF, 0xB0, 0x93, 0x04, 0x80, 0xA2,
  0x70, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_comment 36x36, 4-bit Alpha,  RLE, 102 bytes.
static const uint8_t ic_outlined_36_editor_insert_comment_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xFF, 0xB8, 0x2D, 0x80, 0x8F, 0xFF, 0xF0, 0x80, 0xDF, 0xFF, 0xF0, 0xDB, 0x77,
  0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE3, 0xFF, 0xC3, 0xE3, 0xFF, 0xC3, 0xE3, 0xFF, 0xC3, 0xE7,
  0x77, 0x3E, 0x38, 0x09, 0x67, 0x3E, 0x3F, 0xFC, 0x3E, 0x3F, 0xFC, 0x3E, 0x38, 0x09, 0x67, 0x3E,
  0x77, 0x73, 0xE3, 0xFF, 0xC3, 0xE3, 0xFF, 0xC3, 0xE3, 0xFF, 0xC3, 0xE7, 0x77, 0x3E, 0x77, 0x73,
  0xE7, 0x77, 0x3B, 0x0D, 0xFF, 0xFB, 0x0B, 0x1B, 0x08, 0xFF, 0xFC, 0x0B, 0xB1, 0x08, 0x0D, 0xFF,
  0xFE, 0x77, 0x73, 0x07, 0xD7, 0x77, 0x40, 0x7C, 0x77, 0x75, 0x07, 0xB7, 0x77, 0x60, 0x7A, 0x77,
  0x77, 0x07, 0x97, 0x77, 0x71, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_drive_file 36x36, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_outlined_36_editor_insert_drive_file_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xD0, 0x77, 0x10, 0x8F, 0xF9, 0x07, 0x70, 0xDF, 0xFA, 0x07, 0x6B, 0x73, 0x07,
  0xC0, 0x75, 0xB7, 0x30, 0x7D, 0x07, 0x4B, 0x73, 0x07, 0xE0, 0x73, 0xB7, 0x30, 0x7F, 0x07, 0x2B,
  0x73, 0x07, 0xF9, 0x07, 0x1B, 0x73, 0x07, 0xFA, 0x07, 0xB7, 0x30, 0x7F, 0xE7, 0x30, 0x38, 0x03,
  0x7E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77,
  0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77,
  0x4B, 0x0D, 0xFF, 0xF9, 0x0D, 0x08, 0xFF, 0xF9, 0x82, 0x80, 0x8E, 0xFF, 0xC0, 0xD0, 0x81,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_drive_file() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 29, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_drive_file_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_emoticon 36x36, 4-bit Alpha,  RLE, 261 bytes.
static const uint8_t ic_outlined_36_editor_insert_emoticon_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x05,
  0x0D, 0xFF, 0x0D, 0x05, 0x74, 0x08, 0xC8, 0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0, 0x77, 0x20,
  0xAB, 0x0D, 0x06, 0x73, 0x06, 0x0D, 0xB0, 0xA7, 0x08, 0xB0, 0xA7, 0x70, 0xAB, 0x07, 0x50, 0x5B,
  0x08, 0x77, 0x20, 0x8B, 0x05, 0x40, 0xDA, 0x0A, 0x77, 0x40, 0xAA, 0x0D, 0x30, 0x7A, 0x0D, 0x77,
  0x60, 0xDA, 0x07, 0x20, 0xEA, 0x06, 0x38, 0x28, 0xEC, 0x36, 0x82, 0x3C, 0xE8, 0x30, 0x6A, 0x81,
  0xE0, 0x3A, 0x0D, 0x30, 0x4B, 0x0C, 0x60, 0xCB, 0x04, 0x30, 0xDA, 0x03, 0x08, 0xA0, 0x83, 0x06,
  0xB0, 0xE6, 0x0E, 0xB0, 0x63, 0x08, 0xA0, 0x80, 0xBA, 0x04, 0x30, 0x10, 0xEA, 0x08, 0x60, 0x8A,
  0x0E, 0x01, 0x30, 0x4A, 0x0B, 0x0D, 0xA0, 0x24, 0x81, 0x16, 0x47, 0x18, 0x14, 0x61, 0x40, 0x2A,
  0x0D, 0x0E, 0xA7, 0x77, 0x3A, 0x00, 0xEA, 0x77, 0x73, 0xA0, 0xE0, 0xDA, 0x02, 0x77, 0x71, 0x02,
  0xA0, 0xD0, 0xBA, 0x04, 0x77, 0x71, 0x04, 0xA0, 0xB0, 0x8A, 0x08, 0x30, 0x5F, 0xF0, 0x63, 0x08,
  0xA0, 0x80, 0x3A, 0x0D, 0x40, 0xCF, 0xD0, 0xC4, 0x0D, 0xA8, 0x13, 0x0E, 0xA0, 0x63, 0x02, 0x0E,
  0xFB, 0x0E, 0x02, 0x30, 0x6A, 0x0E, 0x20, 0x7A, 0x0D, 0x40, 0x20, 0xDF, 0x90, 0xD0, 0x24, 0x0D,
  0xA0, 0x73, 0x0D, 0xA0, 0xA5, 0x06, 0x0D, 0xC0, 0xD0, 0x65, 0x0A, 0xA0, 0xD4, 0x05, 0xB0, 0x86,
  0x82, 0x13, 0x31, 0x60, 0x8B, 0x05, 0x50, 0x8B, 0x0A, 0x77, 0x0A, 0xB0, 0x77, 0x0A, 0xB0, 0xD0,
  0x67, 0x30, 0x60, 0xDB, 0x0A, 0x72, 0x08, 0xC8, 0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0, 0x77,
  0x40, 0x50, 0xDF, 0xF0, 0xD0, 0x57, 0x70, 0x70, 0xEF, 0xB0, 0xE0, 0x77, 0x74, 0x89, 0x03, 0x8B,
  0xDE, 0xED, 0xB8, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_emoticon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_emoticon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_invitation 36x36, 4-bit Alpha,  RLE, 188 bytes.
static const uint8_t ic_outlined_36_editor_insert_invitation_data[] PROGMEM = {
  0x50, 0xF7, 0x75, 0x0F, 0x77, 0x3B, 0x75, 0xB7, 0x3B, 0x75, 0xB7, 0x81, 0x47, 0x7B, 0x80, 0x90,
  0x7B, 0x81, 0x77, 0x43, 0x09, 0xFF, 0xFB, 0x81, 0x90, 0x4F, 0xFF, 0xD0, 0x40, 0x7A, 0x0B, 0x80,
  0xA0, 0x70, 0xBA, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00,
  0x7A, 0x0B, 0x80, 0xA0, 0x70, 0xBA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B,
  0x80, 0xA0, 0x70, 0xBA, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x73,
  0xF0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x3F, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x73, 0xF0,
  0x72, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x3F, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x73, 0xF0, 0x72,
  0x07, 0xA0, 0x07, 0xA0, 0x77, 0x3F, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x73, 0xF0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x38, 0x03, 0x70, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x70, 0x4F, 0xFF,
  0xD8, 0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48, 0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_invitation() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 1, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_invitation_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_link 36x36, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_outlined_36_editor_insert_link_data[] PROGMEM = {
  0x50, 0x30, 0x68, 0x02, 0x70, 0x32, 0x03, 0x80, 0x27, 0x06, 0x03, 0x71, 0x04, 0x0D, 0xF9, 0x07,
  0x20, 0x7F, 0x90, 0xD0, 0x45, 0x08, 0xFB, 0x07, 0x20, 0x7F, 0xB0, 0x83, 0x07, 0xB0, 0xD0, 0x88,
  0x02, 0x50, 0x22, 0x02, 0x80, 0x25, 0x08, 0x0D, 0xB8, 0x17, 0x01, 0xB0, 0x87, 0x76, 0x08, 0xB0,
  0x10, 0x8A, 0x0A, 0x77, 0x71, 0x0A, 0xA0, 0x80, 0xCA, 0x02, 0x58, 0x09, 0x07, 0x50, 0x2A, 0x82,
  0xCE, 0xFE, 0x6F, 0xD6, 0x84, 0xEF, 0xEE, 0xFE, 0x6F, 0xD6, 0x82, 0xEF, 0xEC, 0xA0, 0x25, 0x80,
  0x90, 0x75, 0x02, 0xA0, 0xC0, 0x8A, 0x0A, 0x77, 0x71, 0x0A, 0xA0, 0x80, 0x1B, 0x08, 0x77, 0x60,
  0x8B, 0x81, 0x10, 0x7B, 0x0D, 0x08, 0x80, 0x25, 0x02, 0x20, 0x28, 0x02, 0x50, 0x80, 0xDB, 0x07,
  0x30, 0x8F, 0xB0, 0x72, 0x07, 0xFB, 0x08, 0x50, 0x40, 0xDF, 0x90, 0x72, 0x07, 0xF9, 0x0D, 0x04,
  0x71, 0x03, 0x06, 0x80, 0x27, 0x03, 0x20, 0x38, 0x02, 0x70, 0x60, 0x35,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_link() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 10, 32, 25), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_link_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_page_break 36x36, 4-bit Alpha,  RLE, 157 bytes.
static const uint8_t ic_outlined_36_editor_insert_page_break_data[] PROGMEM = {
  0x60, 0x80, 0xDF, 0xD0, 0x77, 0x74, 0x08, 0xFF, 0x90, 0x77, 0x73, 0x0D, 0xFF, 0xA0, 0x77, 0x72,
  0xB7, 0x30, 0x7C, 0x07, 0x77, 0x1B, 0x73, 0x07, 0xD0, 0x77, 0x7B, 0x73, 0x07, 0xE0, 0x77, 0x6B,
  0x73, 0x07, 0xF0, 0x77, 0x5B, 0x73, 0x07, 0xF9, 0x07, 0x74, 0xB7, 0x30, 0x7F, 0xA0, 0x77, 0x3B,
  0x73, 0x07, 0xFB, 0x73, 0xB7, 0x30, 0x38, 0x03, 0x7B, 0x73, 0xB7, 0x74, 0xB7, 0x3B, 0x77, 0x4B,
  0x73, 0x0F, 0x77, 0x74, 0x0F, 0x78, 0x09, 0x85, 0x00, 0x38, 0x04, 0x70, 0x32, 0x03, 0x80, 0x47,
  0x03, 0x20, 0x38, 0x04, 0x70, 0x30, 0x7F, 0x90, 0x72, 0x07, 0xF9, 0x07, 0x20, 0x7F, 0x90, 0x07,
  0xF9, 0x07, 0x20, 0x7F, 0x90, 0x72, 0x07, 0xF9, 0x07, 0x03, 0x80, 0x47, 0x03, 0x20, 0x38, 0x04,
  0x70, 0x32, 0x03, 0x80, 0x47, 0x03, 0x80, 0x98, 0x50, 0x0F, 0x77, 0x74, 0x0F, 0x77, 0x3B, 0x77,
  0x4B, 0x73, 0xB7, 0x74, 0xB7, 0x3B, 0x77, 0x4B, 0x73, 0xB7, 0x74, 0xB7, 0x30, 0xDF, 0xFF, 0x90,
  0xD7, 0x30, 0x8F, 0xFF, 0x90, 0x87, 0x40, 0x80, 0xDF, 0xFC, 0x0D, 0x08, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_page_break() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 34, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_page_break_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_insert_photo 36x36, 4-bit Alpha,  RLE, 196 bytes.
static const uint8_t ic_outlined_36_editor_insert_photo_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77,
  0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07,
  0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x50, 0x50, 0xB6, 0x07, 0xA0, 0x07, 0xA0, 0x75, 0x01, 0x58, 0x22, 0xEF,
  0x75, 0x07, 0xA0, 0x07, 0xA0, 0x74, 0x81, 0x2E, 0x34, 0x0D, 0xB0, 0x34, 0x07, 0xA0, 0x07, 0xA0,
  0x74, 0x82, 0xDF, 0xD1, 0x20, 0xAC, 0x0D, 0x01, 0x30, 0x7A, 0x00, 0x7A, 0x07, 0x30, 0xAB, 0x81,
  0xC0, 0x6E, 0x0B, 0x30, 0x7A, 0x00, 0x7A, 0x07, 0x20, 0x6D, 0x0B, 0xF9, 0x07, 0x20, 0x7A, 0x00,
  0x7A, 0x81, 0x70, 0x3F, 0xFA, 0x81, 0x40, 0x7A, 0x00, 0x7A, 0x81, 0x70, 0x68, 0x09, 0x47, 0x81,
  0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x0B, 0x80, 0xA0, 0x70, 0xBA, 0x07, 0x04, 0xFF, 0xFD, 0x81, 0x40, 0x9F, 0xFF, 0xB0, 0x93, 0x04,
  0x80, 0xA2, 0x70, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_insert_photo() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_insert_photo_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_linear_scale 36x36, 4-bit Alpha,  RLE, 71 bytes.
static const uint8_t ic_outlined_36_editor_linear_scale_data[] PROGMEM = {
  0x28, 0x27, 0xA9, 0x47, 0x82, 0x6A, 0xA6, 0x78, 0x24, 0x9A, 0x72, 0x01, 0x0D, 0xC0, 0x75, 0x0B,
  0xC0, 0xB5, 0x07, 0xC8, 0x1D, 0x19, 0xE8, 0x38, 0x77, 0x79, 0xE8, 0x39, 0x77, 0x78, 0xE0, 0x90,
  0xDF, 0xFF, 0xF0, 0x0D, 0xFF, 0xFF, 0x0D, 0x09, 0xE8, 0x38, 0x77, 0x79, 0xE8, 0x39, 0x77, 0x78,
  0xE8, 0x19, 0x1D, 0xC0, 0x75, 0x0B, 0xC0, 0xB5, 0x07, 0xC0, 0xD0, 0x12, 0x82, 0x7A, 0x94, 0x78,
  0x26, 0xAA, 0x67, 0x82, 0x49, 0xA7, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_linear_scale() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 14, 32, 21), Box(0, 0, 35, 35),
      ic_outlined_36_editor_linear_scale_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_line_axis 36x36, 4-bit Alpha,  RLE, 212 bytes.
static const uint8_t ic_outlined_36_editor_line_axis_data[] PROGMEM = {
  0x73, 0x04, 0x0B, 0x77, 0x76, 0x04, 0xA0, 0xC0, 0x17, 0x77, 0x30, 0x4C, 0x0C, 0x01, 0x77, 0x71,
  0x04, 0xE0, 0xD0, 0x27, 0x40, 0x80, 0x57, 0x04, 0xC0, 0x8B, 0x0E, 0x02, 0x72, 0x06, 0xA0, 0x55,
  0x04, 0x0E, 0xB8, 0x24, 0x04, 0xEA, 0x0E, 0x03, 0x70, 0x5B, 0x0A, 0x40, 0x40, 0xEB, 0x04, 0x30,
  0x30, 0xEA, 0x0E, 0x04, 0x50, 0x30, 0xEA, 0x0B, 0x40, 0x40, 0xEB, 0x04, 0x50, 0x20, 0xDB, 0x05,
  0x30, 0x20, 0xEA, 0x0C, 0x01, 0x30, 0x40, 0xEB, 0x04, 0x70, 0x20, 0xDB, 0x82, 0x60, 0x1D, 0xA0,
  0xD0, 0x13, 0x04, 0x0E, 0xB0, 0x43, 0x04, 0x0A, 0x40, 0x10, 0xCB, 0x08, 0x0C, 0xA0, 0xE0, 0x23,
  0x04, 0x0E, 0xB0, 0x43, 0x04, 0xA0, 0xB4, 0x01, 0x0B, 0xE0, 0x34, 0x0A, 0xB0, 0x43, 0x04, 0xC0,
  0xB5, 0x0B, 0xC0, 0x56, 0x81, 0xBF, 0x43, 0x04, 0xE0, 0xB4, 0x08, 0xC0, 0xA7, 0x03, 0x30, 0x4B,
  0x0E, 0x0B, 0xB0, 0xB2, 0x06, 0xE0, 0xB7, 0x20, 0x4B, 0x82, 0xE4, 0x0A, 0xB0, 0xB0, 0x5B, 0x0A,
  0x08, 0xB0, 0xC0, 0x16, 0x04, 0xB0, 0xE0, 0x43, 0x0A, 0xE0, 0xB2, 0x07, 0xB0, 0xD0, 0x14, 0x04,
  0xB0, 0xE0, 0x45, 0x0A, 0xC0, 0xC0, 0x13, 0x05, 0xB0, 0xD0, 0x22, 0x04, 0xB0, 0xE0, 0x47, 0x0A,
  0xA0, 0xD0, 0x15, 0x04, 0xB8, 0x1B, 0x04, 0xB0, 0xE0, 0x47, 0x28, 0x1A, 0xE2, 0x78, 0x34, 0xEC,
  0x14, 0xC0, 0x47, 0x40, 0x37, 0x28, 0x23, 0x10, 0xAB, 0x04, 0x77, 0x75, 0x81, 0xBF, 0x47, 0x77,
  0x70, 0x37, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_line_axis() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_line_axis_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_margin 36x36, 4-bit Alpha,  RLE, 228 bytes.
static const uint8_t ic_outlined_36_editor_margin_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B, 0x80, 0xA0,
  0x70, 0xBA, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37, 0x73,
  0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00,
  0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28,
  0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77,
  0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A,
  0x00, 0x7A, 0x0B, 0x80, 0xA0, 0x70, 0xBA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03,
  0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_margin() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_margin_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_merge_type 36x36, 4-bit Alpha,  RLE, 115 bytes.
static const uint8_t ic_outlined_36_editor_merge_type_data[] PROGMEM = {
  0x72, 0x00, 0x47, 0x73, 0x04, 0xA0, 0x47, 0x71, 0x04, 0xC0, 0x47, 0x60, 0x4E, 0x04, 0x74, 0x04,
  0xF9, 0x04, 0x72, 0x04, 0xFB, 0x04, 0x70, 0x4F, 0xD0, 0x47, 0x40, 0x7A, 0x07, 0x77, 0x20, 0x7A,
  0x07, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A,
  0x07, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x20, 0xAA, 0x07, 0x77, 0x10, 0x9B,
  0x06, 0x77, 0x09, 0xB0, 0x97, 0x70, 0x9B, 0x09, 0x40, 0x57, 0x20, 0x9B, 0x09, 0x48, 0x19, 0xF9,
  0x70, 0x9B, 0x09, 0x40, 0x5B, 0x09, 0x50, 0x9B, 0x09, 0x60, 0x9B, 0x09, 0x30, 0x9B, 0x09, 0x71,
  0x09, 0xB8, 0x19, 0x05, 0xB0, 0x97, 0x30, 0x9B, 0x83, 0x50, 0x9F, 0x97, 0x58, 0x19, 0xF9, 0x30,
  0x57, 0x70, 0x52,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_merge_type() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 5, 27, 30), Box(0, 0, 35, 35),
      ic_outlined_36_editor_merge_type_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_mode_comment 36x36, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_outlined_36_editor_mode_comment_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xFF, 0xB8, 0x2D, 0x80, 0x8F, 0xFF, 0xF0, 0x80, 0xDF, 0xFF, 0xF0, 0xDB, 0x77,
  0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73,
  0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7,
  0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3B, 0x0D, 0xFF, 0xFB, 0x0B,
  0x1B, 0x08, 0xFF, 0xFC, 0x0B, 0xB1, 0x08, 0x0D, 0xFF, 0xFE, 0x77, 0x73, 0x07, 0xD7, 0x77, 0x40,
  0x7C, 0x77, 0x75, 0x07, 0xB7, 0x77, 0x60, 0x7A, 0x77, 0x77, 0x07, 0x97, 0x77, 0x71, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_mode_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_mode_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_mode_edit_outline 36x36, 4-bit Alpha,  RLE, 222 bytes.
static const uint8_t ic_outlined_36_editor_mode_edit_outline_data[] PROGMEM = {
  0x77, 0x78, 0x12, 0x72, 0x77, 0x73, 0x83, 0x3E, 0xFE, 0x37, 0x77, 0x10, 0x30, 0xEB, 0x0E, 0x03,
  0x77, 0x60, 0x10, 0xED, 0x0E, 0x03, 0x77, 0x60, 0x7E, 0x0E, 0x02, 0x77, 0x20, 0x30, 0x42, 0x07,
  0xE0, 0x77, 0x71, 0x82, 0x3E, 0xF5, 0x20, 0x7C, 0x0E, 0x02, 0x77, 0x03, 0x0E, 0xB0, 0x52, 0x07,
  0xA0, 0xE0, 0x37, 0x70, 0x30, 0xED, 0x05, 0x28, 0x17, 0xE3, 0x77, 0x03, 0x0E, 0xA0, 0xE0, 0xDB,
  0x05, 0x20, 0x17, 0x70, 0x30, 0xEA, 0x82, 0xE3, 0x1D, 0xB0, 0x47, 0x71, 0x03, 0x0E, 0xA8, 0x3E,
  0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03,
  0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E,
  0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3,
  0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30,
  0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0,
  0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x02, 0x0E, 0xA8, 0x3E, 0x30,
  0x3E, 0xA0, 0xE0, 0x37, 0x71, 0x07, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x72, 0x07, 0xA8,
  0x27, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x30, 0x7A, 0x81, 0xB7, 0xEA, 0x0E, 0x03, 0x77, 0x40, 0x7E,
  0x0E, 0x03, 0x77, 0x50, 0x7D, 0x0E, 0x03, 0x77, 0x60, 0x38, 0x01, 0x70, 0x27, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_mode_edit_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_mode_edit_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_mode_edit 36x36, 4-bit Alpha,  RLE, 222 bytes.
static const uint8_t ic_outlined_36_editor_mode_edit_data[] PROGMEM = {
  0x77, 0x78, 0x12, 0x72, 0x77, 0x73, 0x83, 0x3E, 0xFE, 0x37, 0x77, 0x10, 0x30, 0xEB, 0x0E, 0x03,
  0x77, 0x60, 0x10, 0xED, 0x0E, 0x03, 0x77, 0x60, 0x7E, 0x0E, 0x02, 0x77, 0x20, 0x30, 0x42, 0x07,
  0xE0, 0x77, 0x71, 0x82, 0x3E, 0xF5, 0x20, 0x7C, 0x0E, 0x02, 0x77, 0x03, 0x0E, 0xB0, 0x52, 0x07,
  0xA0, 0xE0, 0x37, 0x70, 0x30, 0xED, 0x05, 0x28, 0x17, 0xE3, 0x77, 0x03, 0x0E, 0xA0, 0xE0, 0xDB,
  0x05, 0x20, 0x17, 0x70, 0x30, 0xEA, 0x82, 0xE3, 0x1D, 0xB0, 0x47, 0x71, 0x03, 0x0E, 0xA8, 0x3E,
  0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03,
  0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E,
  0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3,
  0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30,
  0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0,
  0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x02, 0x0E, 0xA8, 0x3E, 0x30,
  0x3E, 0xA0, 0xE0, 0x37, 0x71, 0x07, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x72, 0x07, 0xA8,
  0x27, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x30, 0x7A, 0x81, 0xB7, 0xEA, 0x0E, 0x03, 0x77, 0x40, 0x7E,
  0x0E, 0x03, 0x77, 0x50, 0x7D, 0x0E, 0x03, 0x77, 0x60, 0x38, 0x01, 0x70, 0x27, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_mode_edit() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_mode_edit_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_mode 36x36, 4-bit Alpha,  RLE, 222 bytes.
static const uint8_t ic_outlined_36_editor_mode_data[] PROGMEM = {
  0x77, 0x78, 0x12, 0x72, 0x77, 0x73, 0x83, 0x3E, 0xFE, 0x37, 0x77, 0x10, 0x30, 0xEB, 0x0E, 0x03,
  0x77, 0x60, 0x10, 0xED, 0x0E, 0x03, 0x77, 0x60, 0x7E, 0x0E, 0x02, 0x77, 0x20, 0x30, 0x42, 0x07,
  0xE0, 0x77, 0x71, 0x82, 0x3E, 0xF5, 0x20, 0x7C, 0x0E, 0x02, 0x77, 0x03, 0x0E, 0xB0, 0x52, 0x07,
  0xA0, 0xE0, 0x37, 0x70, 0x30, 0xED, 0x05, 0x28, 0x17, 0xE3, 0x77, 0x03, 0x0E, 0xA0, 0xE0, 0xDB,
  0x05, 0x20, 0x17, 0x70, 0x30, 0xEA, 0x82, 0xE3, 0x1D, 0xB0, 0x47, 0x71, 0x03, 0x0E, 0xA8, 0x3E,
  0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03,
  0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E,
  0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3,
  0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x70, 0x30,
  0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x03, 0x0E, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0,
  0x37, 0x70, 0x30, 0xEA, 0x83, 0xE3, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x02, 0x0E, 0xA8, 0x3E, 0x30,
  0x3E, 0xA0, 0xE0, 0x37, 0x71, 0x07, 0xA8, 0x3E, 0x30, 0x3E, 0xA0, 0xE0, 0x37, 0x72, 0x07, 0xA8,
  0x27, 0x03, 0xEA, 0x0E, 0x03, 0x77, 0x30, 0x7A, 0x81, 0xB7, 0xEA, 0x0E, 0x03, 0x77, 0x40, 0x7E,
  0x0E, 0x03, 0x77, 0x50, 0x7D, 0x0E, 0x03, 0x77, 0x60, 0x38, 0x01, 0x70, 0x27, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_mode() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_mode_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_monetization_on 36x36, 4-bit Alpha,  RLE, 294 bytes.
static const uint8_t ic_outlined_36_editor_monetization_on_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x05,
  0x0D, 0xFF, 0x0D, 0x05, 0x74, 0x07, 0xC8, 0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0, 0x77, 0x20,
  0xAB, 0x0D, 0x06, 0x38, 0x25, 0x77, 0x63, 0x06, 0x0D, 0xB0, 0xA7, 0x08, 0xB0, 0xA5, 0x0A, 0xA0,
  0xD5, 0x0A, 0xB0, 0x85, 0x05, 0xB0, 0x86, 0x0A, 0xA0, 0xD6, 0x08, 0xB0, 0x54, 0x0D, 0xA0, 0xA5,
  0x81, 0x3A, 0xEB, 0x0A, 0x03, 0x50, 0xAA, 0x0D, 0x30, 0x7A, 0x0D, 0x50, 0x7F, 0x90, 0x45, 0x0D,
  0xA0, 0x72, 0x0E, 0xA0, 0x64, 0x03, 0xA8, 0x7D, 0x52, 0x15, 0xDF, 0xE1, 0x40, 0x6A, 0x81, 0xE0,
  0x3A, 0x0D, 0x50, 0x8A, 0x02, 0x40, 0x3A, 0x06, 0x50, 0xDA, 0x03, 0x08, 0xA0, 0x95, 0x0A, 0xA6,
  0x81, 0x77, 0x45, 0x09, 0xA0, 0x80, 0xBA, 0x04, 0x50, 0x7A, 0x09, 0x76, 0x04, 0xA0, 0xB0, 0xDA,
  0x02, 0x50, 0x10, 0xEA, 0x81, 0xE9, 0x47, 0x30, 0x2A, 0x0D, 0x0E, 0xA7, 0x02, 0x0C, 0xC8, 0x1E,
  0x91, 0x71, 0xA0, 0x0E, 0xA7, 0x28, 0x15, 0xAE, 0xC0, 0x67, 0xA0, 0xE0, 0xDA, 0x02, 0x74, 0x04,
  0x0A, 0xB0, 0x45, 0x02, 0xA0, 0xD0, 0xBA, 0x04, 0x76, 0x04, 0xA0, 0xB5, 0x04, 0xA0, 0xB0, 0x8A,
  0x09, 0x58, 0x16, 0x75, 0x68, 0x1C, 0xFE, 0x50, 0x9A, 0x08, 0x03, 0xA0, 0xD5, 0x82, 0xAF, 0xE1,
  0x58, 0x1D, 0xFD, 0x50, 0xDA, 0x81, 0x30, 0xEA, 0x06, 0x40, 0x4A, 0x84, 0xC5, 0x11, 0x3B, 0xA0,
  0x84, 0x06, 0xA0, 0xE2, 0x07, 0xA0, 0xD5, 0x07, 0xF9, 0x0C, 0x50, 0xDA, 0x07, 0x30, 0xDA, 0x0A,
  0x58, 0x13, 0xAE, 0xB0, 0xC0, 0x65, 0x0A, 0xA0, 0xD4, 0x05, 0xB0, 0x86, 0x0A, 0xA0, 0xD6, 0x08,
  0xB0, 0x55, 0x08, 0xB0, 0xA5, 0x0A, 0xA0, 0xD5, 0x0A, 0xB0, 0x87, 0x0A, 0xB0, 0xD0, 0x63, 0x82,
  0x57, 0x76, 0x30, 0x60, 0xDB, 0x0A, 0x72, 0x07, 0xC8, 0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0,
  0x77, 0x40, 0x50, 0xDF, 0xF0, 0xD0, 0x57, 0x70, 0x70, 0xEF, 0xB0, 0xE0, 0x77, 0x74, 0x89, 0x03,
  0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_monetization_on() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_monetization_on_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_money_off_csred 36x36, 4-bit Alpha,  RLE, 159 bytes.
static const uint8_t ic_outlined_36_editor_money_off_csred_data[] PROGMEM = {
  0x73, 0x03, 0x80, 0x07, 0x77, 0x50, 0x7C, 0x73, 0x06, 0x0B, 0x70, 0x7C, 0x72, 0x06, 0xA0, 0xB6,
  0x09, 0xC0, 0x17, 0x10, 0x6B, 0x0B, 0x40, 0xBE, 0x0A, 0x01, 0x70, 0x6B, 0x0B, 0x30, 0x10, 0xDE,
  0x0E, 0x02, 0x70, 0x6B, 0x0B, 0x38, 0x31, 0x75, 0x69, 0xB0, 0xC7, 0x10, 0x6B, 0x0B, 0x70, 0x4B,
  0x05, 0x71, 0x06, 0xB0, 0xB7, 0x0A, 0xA0, 0x97, 0x20, 0xBB, 0x0B, 0x68, 0x24, 0x77, 0x57, 0x20,
  0x8C, 0x0B, 0x77, 0x40, 0x2D, 0x0B, 0x77, 0x40, 0x7D, 0x0B, 0x77, 0x40, 0x50, 0xEC, 0x0B, 0x77,
  0x50, 0x60, 0xCB, 0x0B, 0x77, 0x60, 0x6B, 0x0B, 0x77, 0x60, 0x6B, 0x0B, 0x77, 0x60, 0x6B, 0x0B,
  0x74, 0x0F, 0x70, 0x25, 0x06, 0xB0, 0xB7, 0x30, 0xDA, 0x08, 0x60, 0x6B, 0x0B, 0x72, 0x08, 0xB0,
  0x46, 0x0D, 0xB0, 0xB7, 0x10, 0x10, 0xEB, 0x84, 0xA6, 0x56, 0x8E, 0xD0, 0xB7, 0x10, 0x30, 0xDF,
  0xB0, 0xCB, 0x0B, 0x71, 0x81, 0x18, 0xDE, 0x82, 0xC5, 0x06, 0xB0, 0xB7, 0x30, 0x9C, 0x01, 0x40,
  0x6A, 0x06, 0x73, 0x07, 0xC6, 0x00, 0x67, 0x40, 0x7C, 0x77, 0x50, 0x38, 0x00, 0x77, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_money_off_csred() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_money_off_csred_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_money_off 36x36, 4-bit Alpha,  RLE, 159 bytes.
static const uint8_t ic_outlined_36_editor_money_off_data[] PROGMEM = {
  0x73, 0x03, 0x80, 0x07, 0x77, 0x50, 0x7C, 0x73, 0x06, 0x0B, 0x70, 0x7C, 0x72, 0x06, 0xA0, 0xB6,
  0x09, 0xC0, 0x17, 0x10, 0x6B, 0x0B, 0x40, 0xBE, 0x0A, 0x01, 0x70, 0x6B, 0x0B, 0x30, 0x10, 0xDE,
  0x0E, 0x02, 0x70, 0x6B, 0x0B, 0x38, 0x31, 0x75, 0x69, 0xB0, 0xC7, 0x10, 0x6B, 0x0B, 0x70, 0x4B,
  0x05, 0x71, 0x06, 0xB0, 0xB7, 0x0A, 0xA0, 0x97, 0x20, 0xBB, 0x0B, 0x68, 0x24, 0x77, 0x57, 0x20,
  0x8C, 0x0B, 0x77, 0x40, 0x2D, 0x0B, 0x77, 0x40, 0x7D, 0x0B, 0x77, 0x40, 0x50, 0xEC, 0x0B, 0x77,
  0x50, 0x60, 0xCB, 0x0B, 0x77, 0x60, 0x6B, 0x0B, 0x77, 0x60, 0x6B, 0x0B, 0x77, 0x60, 0x6B, 0x0B,
  0x74, 0x0F, 0x70, 0x25, 0x06, 0xB0, 0xB7, 0x30, 0xDA, 0x08, 0x60, 0x6B, 0x0B, 0x72, 0x08, 0xB0,
  0x46, 0x0D, 0xB0, 0xB7, 0x10, 0x10, 0xEB, 0x84, 0xA6, 0x56, 0x8E, 0xD0, 0xB7, 0x10, 0x30, 0xDF,
  0xB0, 0xCB, 0x0B, 0x71, 0x81, 0x18, 0xDE, 0x82, 0xC5, 0x06, 0xB0, 0xB7, 0x30, 0x9C, 0x01, 0x40,
  0x6A, 0x06, 0x73, 0x07, 0xC6, 0x00, 0x67, 0x40, 0x7C, 0x77, 0x50, 0x38, 0x00, 0x77, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_money_off() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_money_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_move_down 36x36, 4-bit Alpha,  RLE, 176 bytes.
static const uint8_t ic_outlined_36_editor_move_down_data[] PROGMEM = {
  0x78, 0x25, 0xAD, 0xEC, 0x07, 0x20, 0x7F, 0xE5, 0x06, 0x0E, 0xF9, 0x07, 0x20, 0x7F, 0xE4, 0x0A,
  0xFB, 0x07, 0x20, 0x7F, 0xE3, 0x0B, 0xB8, 0x1D, 0x72, 0x71, 0x07, 0xA0, 0x77, 0xB2, 0x09, 0xB0,
  0x87, 0x40, 0x7A, 0x07, 0x7B, 0x10, 0x2B, 0x07, 0x75, 0x07, 0xA0, 0x77, 0xB1, 0x0A, 0xA0, 0xA7,
  0x60, 0x7A, 0x07, 0x7B, 0x1B, 0x02, 0x76, 0x07, 0xA0, 0xB8, 0x03, 0x7B, 0x04, 0xA0, 0xC7, 0x70,
  0x7F, 0xE0, 0x6A, 0x09, 0x77, 0x07, 0xFE, 0x07, 0xA0, 0x87, 0x70, 0x38, 0x09, 0x17, 0x06, 0xA0,
  0x97, 0x77, 0x70, 0x4A, 0x0C, 0x77, 0x77, 0x1B, 0x02, 0x40, 0x37, 0x10, 0x38, 0x09, 0x17, 0x10,
  0xAA, 0x0A, 0x38, 0x17, 0xF7, 0x70, 0x7F, 0xE1, 0x03, 0xB8, 0x17, 0x05, 0xB0, 0x76, 0x07, 0xFE,
  0x20, 0x8B, 0x81, 0x80, 0xBB, 0x07, 0x50, 0x7F, 0xE3, 0x0B, 0xB8, 0x1D, 0x7D, 0xB0, 0x74, 0x07,
  0xFE, 0x40, 0xAF, 0xA0, 0x73, 0x07, 0xFE, 0x50, 0x60, 0xEF, 0x90, 0x32, 0x07, 0xFE, 0x78, 0x15,
  0xAD, 0xC0, 0x73, 0x07, 0xFE, 0x72, 0x0A, 0xB0, 0x74, 0x07, 0xFE, 0x71, 0x0A, 0xB0, 0x75, 0x07,
  0xFE, 0x70, 0x5B, 0x07, 0x60, 0x7F, 0xE7, 0x18, 0x17, 0xF7, 0x77, 0x77, 0x20, 0x37, 0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_move_down() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 6, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_move_down_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_move_up 36x36, 4-bit Alpha,  RLE, 175 bytes.
static const uint8_t ic_outlined_36_editor_move_up_data[] PROGMEM = {
  0x72, 0x03, 0x77, 0x77, 0x28, 0x17, 0xF7, 0x77, 0x77, 0x05, 0xB0, 0x76, 0x07, 0xFE, 0x71, 0x0A,
  0xB0, 0x75, 0x07, 0xFE, 0x72, 0x0A, 0xB0, 0x74, 0x07, 0xFE, 0x78, 0x15, 0xAD, 0xC0, 0x73, 0x07,
  0xFE, 0x50, 0x60, 0xEF, 0x90, 0x32, 0x07, 0xFE, 0x40, 0xAF, 0xA0, 0x73, 0x07, 0xFE, 0x30, 0xBB,
  0x81, 0xD7, 0xDB, 0x07, 0x40, 0x7F, 0xE2, 0x08, 0xB8, 0x18, 0x0A, 0xB0, 0x75, 0x07, 0xFE, 0x10,
  0x3B, 0x81, 0x70, 0x5B, 0x07, 0x60, 0x7F, 0xE1, 0x0A, 0xA0, 0xA3, 0x81, 0x7F, 0x77, 0x07, 0xFE,
  0x1B, 0x02, 0x40, 0x37, 0x10, 0x38, 0x09, 0x17, 0x04, 0xA0, 0xC7, 0x77, 0x70, 0x6A, 0x09, 0x77,
  0x77, 0x07, 0xA0, 0x87, 0x70, 0x38, 0x09, 0x17, 0x06, 0xA0, 0x97, 0x70, 0x7F, 0xE0, 0x4A, 0x0C,
  0x77, 0x07, 0xFE, 0x1B, 0x02, 0x76, 0x07, 0xA0, 0xB8, 0x03, 0x7B, 0x10, 0xAA, 0x0A, 0x76, 0x07,
  0xA0, 0x77, 0xB1, 0x02, 0xB0, 0x77, 0x50, 0x7A, 0x07, 0x7B, 0x20, 0x9B, 0x08, 0x74, 0x07, 0xA0,
  0x77, 0xB3, 0x0B, 0xB8, 0x1D, 0x72, 0x71, 0x07, 0xA0, 0x77, 0xB4, 0x0A, 0xFB, 0x07, 0x20, 0x7F,
  0xE5, 0x06, 0x0E, 0xF9, 0x07, 0x20, 0x7F, 0xE7, 0x82, 0x5A, 0xDE, 0xC0, 0x72, 0x07, 0xFE,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_move_up() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 4, 32, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_move_up_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_multiline_chart 36x36, 4-bit Alpha,  RLE, 195 bytes.
static const uint8_t ic_outlined_36_editor_multiline_chart_data[] PROGMEM = {
  0x71, 0x85, 0x34, 0x67, 0x54, 0x27, 0x76, 0x81, 0x5A, 0xEF, 0x81, 0xE9, 0x37, 0x20, 0x40, 0x34,
  0x06, 0x0D, 0xFE, 0x0C, 0x03, 0x68, 0x53, 0xFE, 0x30, 0x2C, 0xD8, 0x5D, 0xA9, 0x79, 0xBD, 0xD0,
  0x94, 0x02, 0x0E, 0xA8, 0x1B, 0x5E, 0xB8, 0x1E, 0x72, 0x78, 0x13, 0x9E, 0xB8, 0x3C, 0x10, 0x1D,
  0xA8, 0x1D, 0x17, 0xA0, 0xE0, 0x77, 0x50, 0x10, 0xBB, 0x81, 0xD2, 0xCA, 0x0E, 0x02, 0x28, 0x17,
  0xC2, 0x77, 0x10, 0x6F, 0x03, 0x75, 0x02, 0x07, 0x71, 0x05, 0xD0, 0x57, 0x58, 0x22, 0xDF, 0x87,
  0x10, 0xAB, 0x09, 0x75, 0x02, 0x0D, 0xB0, 0x86, 0x06, 0xC0, 0xE7, 0x40, 0x20, 0xDD, 0x08, 0x40,
  0x5E, 0x07, 0x72, 0x02, 0x0D, 0xB0, 0xEB, 0x08, 0x20, 0x3B, 0x0B, 0x06, 0xA0, 0xE7, 0x10, 0x20,
  0xDB, 0x81, 0x71, 0xDB, 0x81, 0x82, 0xEA, 0x82, 0xC1, 0x0D, 0xA0, 0x56, 0x02, 0x0D, 0xB0, 0x72,
  0x01, 0x0D, 0xB0, 0xEA, 0x0D, 0x01, 0x20, 0x8A, 0x0A, 0x50, 0x20, 0xDB, 0x07, 0x40, 0x10, 0xDC,
  0x0E, 0x02, 0x30, 0x2A, 0x0E, 0x40, 0x20, 0xDB, 0x07, 0x60, 0x10, 0xDB, 0x03, 0x50, 0xEA, 0x02,
  0x20, 0x20, 0xDB, 0x07, 0x71, 0x82, 0x1D, 0xF5, 0x60, 0xBA, 0x82, 0x40, 0x2D, 0xB0, 0x77, 0x30,
  0x10, 0x57, 0x84, 0x6B, 0xB5, 0x0B, 0xB0, 0x77, 0x77, 0x48, 0x21, 0xDF, 0x77, 0x77, 0x60, 0x10,
  0x67, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_multiline_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 32, 27), Box(0, 0, 35, 35),
      ic_outlined_36_editor_multiline_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_notes 36x36, 4-bit Alpha,  RLE, 47 bytes.
static const uint8_t ic_outlined_36_editor_notes_data[] PROGMEM = {
  0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x80, 0x9D, 0x40, 0x03, 0x80,
  0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x38, 0x09,
  0xD4, 0x00, 0x7F, 0xFB, 0x07, 0x72, 0x07, 0xFF, 0xB0, 0x77, 0x20, 0x7F, 0xFB, 0x07, 0x72,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_notes() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 9, 31, 26), Box(0, 0, 35, 35),
      ic_outlined_36_editor_notes_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_numbers 36x36, 4-bit Alpha,  RLE, 152 bytes.
static const uint8_t ic_outlined_36_editor_numbers_data[] PROGMEM = {
  0x73, 0x01, 0xA0, 0xD5, 0x01, 0xA0, 0xD7, 0x71, 0x05, 0xA0, 0x95, 0x05, 0xA0, 0x97, 0x71, 0x09,
  0xA0, 0x55, 0x09, 0xA0, 0x57, 0x71, 0x0D, 0xA0, 0x15, 0x0D, 0xA0, 0x17, 0x70, 0x1A, 0x0D, 0x50,
  0x1A, 0x0D, 0x77, 0x10, 0x5A, 0x09, 0x50, 0x5A, 0x09, 0x72, 0x09, 0xFF, 0xFA, 0x05, 0x30, 0xDF,
  0xFF, 0xA0, 0x12, 0x01, 0xFF, 0xFA, 0x0D, 0x72, 0x05, 0xA0, 0x95, 0x05, 0xA0, 0x97, 0x71, 0x09,
  0xA0, 0x55, 0x09, 0xA0, 0x57, 0x71, 0x0D, 0xA0, 0x15, 0x0D, 0xA0, 0x17, 0x70, 0x1A, 0x0D, 0x50,
  0x1A, 0x0D, 0x77, 0x10, 0x5A, 0x09, 0x50, 0x5A, 0x09, 0x77, 0x10, 0x9A, 0x05, 0x50, 0x9A, 0x05,
  0x72, 0x0D, 0xFF, 0xFA, 0x01, 0x20, 0x1F, 0xFF, 0xA0, 0xD3, 0x05, 0xFF, 0xFA, 0x09, 0x72, 0x09,
  0xA0, 0x55, 0x09, 0xA0, 0x57, 0x71, 0x0D, 0xA0, 0x15, 0x0D, 0xA0, 0x17, 0x70, 0x1A, 0x0D, 0x50,
  0x1A, 0x0D, 0x77, 0x10, 0x5A, 0x09, 0x50, 0x5A, 0x09, 0x77, 0x10, 0x9A, 0x05, 0x50, 0x9A, 0x05,
  0x77, 0x10, 0xDA, 0x01, 0x50, 0xDA, 0x01, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_numbers() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 31, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_numbers_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_padding 36x36, 4-bit Alpha,  RLE, 198 bytes.
static const uint8_t ic_outlined_36_editor_padding_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x20, 0x7A,
  0x00, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x28,
  0x23, 0x77, 0x32, 0x82, 0x37, 0x73, 0x28, 0x23, 0x77, 0x32, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76,
  0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76,
  0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x07, 0xA0, 0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x70, 0x4F, 0xFF, 0xD8, 0x14, 0x09, 0xFF, 0xFB, 0x09,
  0x30, 0x48, 0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_padding() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_padding_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_pentagon 36x36, 4-bit Alpha,  RLE, 208 bytes.
static const uint8_t ic_outlined_36_editor_pentagon_data[] PROGMEM = {
  0x76, 0x82, 0x1A, 0xA1, 0x77, 0x74, 0x03, 0x0D, 0xA0, 0xD0, 0x37, 0x77, 0x20, 0x8E, 0x08, 0x77,
  0x60, 0x20, 0xCB, 0x00, 0xEB, 0x0C, 0x02, 0x77, 0x30, 0x6C, 0x82, 0xA1, 0x1A, 0xC0, 0x67, 0x70,
  0x10, 0xBB, 0x0E, 0x06, 0x40, 0x60, 0xEB, 0x0B, 0x01, 0x74, 0x05, 0x0E, 0xB0, 0xC0, 0x26, 0x02,
  0x0C, 0xB0, 0xE0, 0x57, 0x10, 0x10, 0xAC, 0x07, 0x73, 0x07, 0xC0, 0xA0, 0x15, 0x03, 0x0D, 0xB0,
  0xD0, 0x37, 0x50, 0x30, 0xDB, 0x0D, 0x03, 0x30, 0x8C, 0x09, 0x77, 0x20, 0x9C, 0x81, 0x80, 0xCB,
  0x0E, 0x04, 0x77, 0x40, 0x40, 0xEB, 0x0C, 0x0A, 0xA0, 0xC0, 0x17, 0x76, 0x01, 0x0C, 0xA0, 0xA0,
  0x5A, 0x0C, 0x77, 0x71, 0x0C, 0xA8, 0x15, 0x0E, 0xA0, 0x27, 0x76, 0x02, 0xA0, 0xE2, 0x0A, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0xA2, 0x05, 0xA0, 0xC7, 0x76, 0x0C, 0xA0, 0x53, 0x0E, 0xA0, 0x27, 0x74,
  0x02, 0xA0, 0xE4, 0x0A, 0xA0, 0x77, 0x74, 0x07, 0xA0, 0xA4, 0x05, 0xA0, 0xC7, 0x74, 0x0C, 0xA0,
  0x55, 0x0E, 0xA0, 0x27, 0x72, 0x02, 0xA0, 0xE6, 0x0A, 0xA0, 0x77, 0x72, 0x07, 0xA0, 0xA6, 0x05,
  0xA0, 0xC7, 0x72, 0x0C, 0xA0, 0x57, 0x0E, 0xA0, 0x27, 0x70, 0x2A, 0x0E, 0x71, 0x0A, 0xA0, 0x77,
  0x70, 0x7A, 0x0A, 0x71, 0x05, 0xA0, 0xC7, 0x70, 0xCA, 0x05, 0x72, 0x0E, 0xA0, 0x88, 0x09, 0x07,
  0x08, 0xA0, 0xE7, 0x30, 0xAF, 0xFC, 0x0A, 0x73, 0x05, 0xFF, 0xC0, 0x57, 0x48, 0x09, 0x67, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_pentagon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_pentagon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_pie_chart_outline 36x36, 4-bit Alpha,  RLE, 272 bytes.
static const uint8_t ic_outlined_36_editor_pie_chart_outline_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x04,
  0x0D, 0xFF, 0x0D, 0x04, 0x74, 0x07, 0xC8, 0x2E, 0x84, 0x8A, 0x82, 0x84, 0x8E, 0xC0, 0x77, 0x20,
  0x9B, 0x0E, 0x05, 0x30, 0x7A, 0x07, 0x30, 0x50, 0xEB, 0x09, 0x70, 0x7B, 0x0A, 0x01, 0x40, 0x7A,
  0x07, 0x50, 0xAB, 0x07, 0x50, 0x4B, 0x09, 0x60, 0x7A, 0x07, 0x60, 0x9B, 0x04, 0x40, 0xDA, 0x0A,
  0x70, 0x7A, 0x07, 0x70, 0xAA, 0x0D, 0x30, 0x6A, 0x0D, 0x01, 0x70, 0x7A, 0x07, 0x71, 0x0E, 0xA0,
  0x62, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x71, 0x05, 0xA8, 0x1E, 0x03, 0xA0, 0xD7, 0x20, 0x7A,
  0x07, 0x72, 0x0E, 0xA0, 0x30, 0x8A, 0x08, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x8A, 0x08, 0x0B, 0xA0,
  0x47, 0x20, 0x7A, 0x07, 0x72, 0x04, 0xA0, 0xB0, 0xDA, 0x02, 0x72, 0x07, 0xA0, 0xB8, 0x05, 0x70,
  0x8A, 0x0D, 0x0E, 0xA7, 0x30, 0x7F, 0xF9, 0x00, 0xEA, 0x73, 0x07, 0xFF, 0x90, 0xE0, 0xDA, 0x02,
  0x72, 0x07, 0xA0, 0xB8, 0x05, 0x70, 0x8A, 0x0D, 0x0B, 0xA0, 0x47, 0x20, 0x7A, 0x07, 0x72, 0x04,
  0xA0, 0xB0, 0x8A, 0x08, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x8A, 0x08, 0x03, 0xA0, 0xD7, 0x20, 0x7A,
  0x07, 0x72, 0x0E, 0xA8, 0x13, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x71, 0x05, 0xA0, 0xE2, 0x06,
  0xA0, 0xD0, 0x17, 0x07, 0xA0, 0x77, 0x10, 0xEA, 0x06, 0x30, 0xDA, 0x0A, 0x70, 0x7A, 0x07, 0x70,
  0xAA, 0x0D, 0x40, 0x4B, 0x09, 0x60, 0x7A, 0x07, 0x60, 0x9B, 0x04, 0x50, 0x7B, 0x0A, 0x01, 0x40,
  0x7A, 0x07, 0x50, 0xAB, 0x07, 0x70, 0x9B, 0x0E, 0x05, 0x30, 0x7A, 0x07, 0x30, 0x50, 0xEB, 0x09,
  0x72, 0x07, 0xC8, 0x2E, 0x84, 0x8A, 0x82, 0x84, 0x8E, 0xC0, 0x77, 0x40, 0x40, 0xDF, 0xF0, 0xD0,
  0x47, 0x70, 0x70, 0xEF, 0xB0, 0xE0, 0x77, 0x74, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_pie_chart_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_pie_chart_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_pie_chart 36x36, 4-bit Alpha,  RLE, 272 bytes.
static const uint8_t ic_outlined_36_editor_pie_chart_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x05,
  0x0D, 0xFF, 0x0D, 0x05, 0x74, 0x07, 0xC8, 0x2E, 0x84, 0x8A, 0x82, 0x84, 0x8E, 0xC0, 0x77, 0x20,
  0xAB, 0x0E, 0x05, 0x30, 0x7A, 0x07, 0x30, 0x50, 0xEB, 0x0A, 0x70, 0x8B, 0x0A, 0x01, 0x40, 0x7A,
  0x07, 0x50, 0xAB, 0x08, 0x50, 0x5B, 0x09, 0x60, 0x7A, 0x07, 0x60, 0x9B, 0x05, 0x40, 0xDA, 0x0A,
  0x70, 0x7A, 0x07, 0x70, 0xAA, 0x0D, 0x30, 0x7A, 0x0D, 0x01, 0x70, 0x7A, 0x07, 0x71, 0x0E, 0xA0,
  0x72, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x71, 0x05, 0xA8, 0x1E, 0x03, 0xA0, 0xD7, 0x20, 0x7A,
  0x07, 0x72, 0x0E, 0xA0, 0x30, 0x8A, 0x08, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x8A, 0x08, 0x0B, 0xA0,
  0x47, 0x20, 0x7A, 0x07, 0x72, 0x04, 0xA0, 0xB0, 0xDA, 0x02, 0x72, 0x07, 0xA0, 0xB8, 0x05, 0x70,
  0x8A, 0x0D, 0x0E, 0xA7, 0x30, 0x7F, 0xF9, 0x00, 0xEA, 0x73, 0x07, 0xFF, 0x90, 0xE0, 0xDA, 0x02,
  0x72, 0x07, 0xA0, 0xB8, 0x05, 0x70, 0x8A, 0x0D, 0x0B, 0xA0, 0x47, 0x20, 0x7A, 0x07, 0x72, 0x04,
  0xA0, 0xB0, 0x8A, 0x08, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x8A, 0x08, 0x03, 0xA0, 0xD7, 0x20, 0x7A,
  0x07, 0x72, 0x0E, 0xA8, 0x13, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x71, 0x05, 0xA0, 0xE2, 0x07,
  0xA0, 0xD0, 0x17, 0x07, 0xA0, 0x77, 0x10, 0xEA, 0x07, 0x30, 0xDA, 0x0A, 0x70, 0x7A, 0x07, 0x70,
  0xAA, 0x0D, 0x40, 0x5B, 0x09, 0x60, 0x7A, 0x07, 0x60, 0x9B, 0x05, 0x50, 0x8B, 0x0A, 0x01, 0x40,
  0x7A, 0x07, 0x50, 0xAB, 0x08, 0x70, 0xAB, 0x0E, 0x05, 0x30, 0x7A, 0x07, 0x30, 0x50, 0xEB, 0x0A,
  0x72, 0x07, 0xC8, 0x2E, 0x84, 0x8A, 0x82, 0x84, 0x8E, 0xC0, 0x77, 0x40, 0x50, 0xDF, 0xF0, 0xD0,
  0x57, 0x70, 0x70, 0xEF, 0xB0, 0xE0, 0x77, 0x74, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_pie_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_pie_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_polyline 36x36, 4-bit Alpha,  RLE, 149 bytes.
static const uint8_t ic_outlined_36_editor_polyline_data[] PROGMEM = {
  0x74, 0xFA, 0x77, 0x5F, 0xA7, 0x75, 0xFA, 0x77, 0x5B, 0x3B, 0x77, 0x5B, 0x3B, 0x77, 0x5B, 0x3B,
  0x77, 0x5F, 0xA7, 0x74, 0x02, 0xFA, 0x77, 0x30, 0x10, 0xDF, 0xA7, 0x73, 0x0C, 0xA0, 0xE0, 0x27,
  0x77, 0x10, 0xBB, 0x04, 0x77, 0x71, 0x09, 0xB0, 0x57, 0x72, 0x07, 0xFA, 0x07, 0x77, 0x30, 0x7F,
  0x90, 0xA7, 0x74, 0x07, 0xF9, 0x07, 0x77, 0x40, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x40, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x77, 0x40, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x40, 0x7F, 0x90, 0xB0,
  0x27, 0x73, 0x07, 0xFB, 0x09, 0x02, 0x77, 0x10, 0x7F, 0xD0, 0x90, 0x27, 0x77, 0x03, 0x0B, 0xD8,
  0x29, 0x20, 0x7F, 0x90, 0x77, 0x30, 0x30, 0xBD, 0x00, 0x9F, 0x90, 0x77, 0x50, 0x30, 0xBF, 0xE0,
  0x77, 0x70, 0x30, 0xBD, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x20, 0x30, 0xBB, 0x07, 0x20, 0x7A, 0x07,
  0x77, 0x40, 0x8A, 0x07, 0x20, 0x7A, 0x07, 0x77, 0x40, 0x7F, 0x90, 0x77, 0x74, 0x07, 0xF9, 0x07,
  0x77, 0x40, 0x7F, 0x90, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_polyline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 31, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_polyline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_post_add 36x36, 4-bit Alpha,  RLE, 211 bytes.
static const uint8_t ic_outlined_36_editor_post_add_data[] PROGMEM = {
  0x77, 0x70, 0x7A, 0x07, 0x77, 0x74, 0x07, 0xA0, 0x77, 0x77, 0x40, 0x7A, 0x07, 0x77, 0x74, 0x07,
  0xA0, 0x76, 0x04, 0x80, 0x77, 0x38, 0x00, 0x70, 0xBA, 0x85, 0xB7, 0x77, 0x70, 0x9F, 0xD3, 0xFD,
  0x04, 0xFE, 0x3F, 0xD0, 0x7A, 0x0B, 0x80, 0x67, 0x38, 0x00, 0x70, 0xBA, 0x0B, 0x80, 0x17, 0xA0,
  0x77, 0x73, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x77, 0x73, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x72, 0x03,
  0x80, 0x77, 0x03, 0x20, 0x7A, 0x07, 0x40, 0x7A, 0x07, 0x20, 0x7F, 0xC0, 0x72, 0x07, 0xA0, 0x74,
  0x07, 0xA0, 0x72, 0x07, 0xFC, 0x07, 0x73, 0x07, 0xA0, 0x72, 0x03, 0x80, 0x77, 0x03, 0x73, 0x07,
  0xA0, 0x77, 0x77, 0x40, 0x7A, 0x07, 0x20, 0x7F, 0xC0, 0x72, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x72,
  0x07, 0xFC, 0x07, 0x20, 0x7A, 0x07, 0x40, 0x7A, 0x07, 0x20, 0x7F, 0xC0, 0x72, 0x07, 0xA0, 0x74,
  0x07, 0xA0, 0x77, 0x73, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x72, 0x03, 0x80, 0x77, 0x03, 0x20, 0x7A,
  0x07, 0x40, 0x7A, 0x07, 0x20, 0x7F, 0xC0, 0x72, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x72, 0x07, 0xFC,
  0x07, 0x20, 0x7A, 0x07, 0x40, 0x7A, 0x07, 0x20, 0x38, 0x07, 0x70, 0x32, 0x07, 0xA0, 0x74, 0x07,
  0xA0, 0x77, 0x73, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x77, 0x73, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x88,
  0x09, 0x51, 0x08, 0xA0, 0x74, 0x04, 0xFF, 0xFA, 0x04, 0x50, 0x9F, 0xFF, 0x09, 0x70, 0x48, 0x09,
  0x77, 0x04, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_post_add() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_post_add_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_publish 36x36, 4-bit Alpha,  RLE, 134 bytes.
static const uint8_t ic_outlined_36_editor_publish_data[] PROGMEM = {
  0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x77, 0x77, 0x74, 0x00, 0x17, 0x75, 0x82,
  0x1D, 0xD1, 0x77, 0x30, 0x10, 0xDA, 0x0D, 0x01, 0x77, 0x10, 0x10, 0xDC, 0x0D, 0x01, 0x76, 0x01,
  0x0D, 0xE0, 0xD0, 0x17, 0x40, 0x10, 0xDB, 0x00, 0x4B, 0x0D, 0x01, 0x72, 0x01, 0x0D, 0xB0, 0x42,
  0x04, 0xB0, 0xD0, 0x17, 0x01, 0x0D, 0xB0, 0x44, 0x04, 0xB0, 0xD0, 0x15, 0x01, 0x0D, 0xD0, 0x72,
  0x07, 0xD0, 0xD0, 0x13, 0x01, 0x0D, 0xE0, 0x72, 0x07, 0xE8, 0x3D, 0x10, 0x1D, 0xF0, 0x72, 0x07,
  0xF0, 0xD0, 0x16, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x50, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x75,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x50, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x75, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x77, 0x50, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x75, 0x07, 0xF9, 0x07, 0x75, 0x07, 0xF9,
  0x07, 0x75, 0x07, 0xF9, 0x07, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_publish() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 6, 28, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_publish_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_query_stats 36x36, 4-bit Alpha,  RLE, 261 bytes.
static const uint8_t ic_outlined_36_editor_query_stats_data[] PROGMEM = {
  0x77, 0x77, 0x28, 0x13, 0xA1, 0x77, 0x77, 0x38, 0x2D, 0xFD, 0x27, 0x77, 0x71, 0x07, 0xA0, 0xE0,
  0x17, 0x77, 0x70, 0x2B, 0x06, 0x77, 0x77, 0x10, 0xBA, 0x0B, 0x77, 0x77, 0x10, 0x6B, 0x02, 0x77,
  0x60, 0x97, 0x01, 0x0E, 0xA0, 0x77, 0x76, 0x81, 0x6F, 0x76, 0x0A, 0xA0, 0xD7, 0x76, 0x01, 0x0E,
  0xA0, 0x24, 0x04, 0xB0, 0x37, 0x76, 0x0A, 0xB0, 0xC4, 0x0D, 0xA0, 0x97, 0x50, 0x01, 0x60, 0x4D,
  0x07, 0x20, 0x8A, 0x0D, 0x01, 0x75, 0x09, 0x0C, 0x60, 0xDA, 0x0D, 0xB0, 0x20, 0x3B, 0x05, 0x75,
  0x03, 0xA0, 0xA4, 0x07, 0xA8, 0x90, 0xE1, 0x97, 0x31, 0x14, 0x89, 0x76, 0x0D, 0xB0, 0x82, 0x02,
  0xB0, 0x67, 0x77, 0x07, 0xD8, 0x16, 0x0B, 0xA0, 0xC3, 0x84, 0x16, 0x89, 0x72, 0x75, 0x02, 0xB0,
  0xDB, 0x09, 0xB0, 0x22, 0x08, 0xE0, 0xA0, 0x17, 0x30, 0xBA, 0x81, 0xC0, 0xBD, 0x08, 0x20, 0xBF,
  0x90, 0xD0, 0x17, 0x10, 0x5B, 0x82, 0x20, 0x1D, 0xB0, 0xD2, 0x08, 0xB8, 0x2C, 0x76, 0xAB, 0x0C,
  0x70, 0x10, 0xEA, 0x08, 0x30, 0x20, 0xEA, 0x81, 0x50, 0x1B, 0x08, 0x40, 0x4B, 0x04, 0x60, 0x9A,
  0x0D, 0x58, 0x13, 0xFB, 0x20, 0x6A, 0x0C, 0x60, 0x8A, 0x0A, 0x50, 0x3B, 0x04, 0x60, 0x50, 0x22,
  0x08, 0xA0, 0x76, 0x03, 0xA0, 0xC5, 0x0D, 0xA0, 0xA7, 0x40, 0x9A, 0x07, 0x60, 0x3A, 0x0C, 0x40,
  0x4A, 0x0E, 0x01, 0x74, 0x07, 0xA0, 0xA6, 0x06, 0xA0, 0xA5, 0x81, 0x3D, 0x67, 0x50, 0x2B, 0x04,
  0x40, 0x20, 0xEA, 0x05, 0x77, 0x70, 0xAB, 0x83, 0x83, 0x37, 0xEA, 0x0E, 0x77, 0x71, 0x01, 0x0D,
  0xFB, 0x09, 0x77, 0x71, 0x01, 0x0C, 0xE0, 0xEB, 0x09, 0x77, 0x72, 0x86, 0x5A, 0xCC, 0xA5, 0x09,
  0xB0, 0x97, 0x77, 0x72, 0x09, 0xB0, 0x97, 0x77, 0x72, 0x09, 0xB0, 0x37, 0x77, 0x72, 0x81, 0x9F,
  0x57, 0x77, 0x74, 0x03, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_query_stats() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 34, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_query_stats_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_rectangle 36x36, 4-bit Alpha,  RLE, 51 bytes.
static const uint8_t ic_outlined_36_editor_rectangle_data[] PROGMEM = {
  0x80, 0x9B, 0x1F, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7,
  0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77,
  0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x3E, 0x77, 0x73, 0xE7, 0x77, 0x38,
  0x09, 0xB1, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_rectangle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_rectangle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_scatter_plot 36x36, 4-bit Alpha,  RLE, 220 bytes.
static const uint8_t ic_outlined_36_editor_scatter_plot_data[] PROGMEM = {
  0x72, 0x85, 0x29, 0xDF, 0xD9, 0x27, 0x75, 0x06, 0xF0, 0x67, 0x73, 0x05, 0xFA, 0x05, 0x77, 0x20,
  0xDA, 0x83, 0xC3, 0x03, 0xCA, 0x0D, 0x77, 0x10, 0x4A, 0x0D, 0x01, 0x30, 0x10, 0xDA, 0x04, 0x77,
  0x06, 0xA0, 0x95, 0x09, 0xA0, 0x67, 0x70, 0x6A, 0x09, 0x50, 0x9A, 0x06, 0x77, 0x04, 0xA0, 0xD0,
  0x13, 0x01, 0x0D, 0xA0, 0x47, 0x71, 0x0D, 0xA8, 0x3C, 0x30, 0x3C, 0xA0, 0xD7, 0x72, 0x05, 0xFA,
  0x05, 0x77, 0x30, 0x6F, 0x06, 0x77, 0x58, 0x52, 0x9D, 0xFD, 0x92, 0x77, 0x85, 0x29, 0xDF, 0xD9,
  0x27, 0x75, 0x06, 0xF0, 0x67, 0x73, 0x05, 0xFA, 0x05, 0x77, 0x20, 0xDA, 0x83, 0xC3, 0x03, 0xCA,
  0x0D, 0x77, 0x10, 0x4A, 0x0D, 0x01, 0x30, 0x10, 0xDA, 0x04, 0x77, 0x06, 0xA0, 0x95, 0x09, 0xA0,
  0x65, 0x83, 0x16, 0x88, 0x54, 0x06, 0xA0, 0x95, 0x09, 0xA0, 0x64, 0x07, 0xD0, 0xE0, 0x52, 0x04,
  0xA0, 0xD0, 0x13, 0x01, 0x0D, 0xA0, 0x43, 0x09, 0xF9, 0x06, 0x20, 0xDA, 0x83, 0xC3, 0x03, 0xCA,
  0x0D, 0x30, 0x5B, 0x82, 0xC7, 0x8D, 0xB8, 0x12, 0x05, 0xFA, 0x05, 0x30, 0xBA, 0x0A, 0x40, 0xCA,
  0x08, 0x20, 0x6F, 0x06, 0x4B, 0x01, 0x40, 0x4A, 0x0C, 0x38, 0x52, 0x9D, 0xFD, 0x92, 0x40, 0x1A,
  0x0E, 0x50, 0x2A, 0x0D, 0x77, 0x10, 0xEA, 0x02, 0x40, 0x5A, 0x0B, 0x77, 0x10, 0xAA, 0x0C, 0x01,
  0x20, 0x20, 0xDA, 0x07, 0x77, 0x10, 0x3B, 0x81, 0xEA, 0xBB, 0x0E, 0x01, 0x77, 0x20, 0x6F, 0x0E,
  0x04, 0x77, 0x40, 0x40, 0xDC, 0x0C, 0x03, 0x77, 0x78, 0x23, 0x55, 0x24,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_scatter_plot() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 30, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_scatter_plot_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_schema 36x36, 4-bit Alpha,  RLE, 190 bytes.
static const uint8_t ic_outlined_36_editor_schema_data[] PROGMEM = {
  0x80, 0x67, 0x03, 0x77, 0x1F, 0xB0, 0x77, 0x71, 0xFB, 0x07, 0x77, 0x1B, 0x80, 0x07, 0x0B, 0xA0,
  0x77, 0x71, 0xB4, 0x07, 0xA0, 0x77, 0x71, 0xB4, 0x07, 0xA0, 0x77, 0x71, 0xB8, 0x00, 0x70, 0xBA,
  0x07, 0x77, 0x1F, 0xB0, 0x77, 0x71, 0xFB, 0x07, 0x77, 0x10, 0xF7, 0x09, 0xA8, 0x3D, 0x77, 0x73,
  0x77, 0x40, 0x3A, 0x0B, 0x77, 0x71, 0x03, 0xA0, 0xB7, 0x75, 0x0F, 0x70, 0x9A, 0x83, 0xD7, 0x77,
  0x34, 0x80, 0x67, 0x03, 0xFB, 0x07, 0x4F, 0xB0, 0x7F, 0xB0, 0x74, 0xFB, 0x07, 0xB8, 0x00, 0x70,
  0xBA, 0x0B, 0x80, 0x07, 0xB8, 0x00, 0x70, 0xBA, 0x07, 0xB4, 0x07, 0xFB, 0x40, 0x7A, 0x07, 0xB4,
  0x07, 0xFB, 0x40, 0x7A, 0x07, 0xB8, 0x00, 0x70, 0xBA, 0x0B, 0x80, 0x07, 0xB8, 0x00, 0x70, 0xBA,
  0x07, 0xFB, 0x07, 0x4F, 0xB0, 0x7F, 0xB0, 0x74, 0xFB, 0x80, 0x07, 0x09, 0xA8, 0x3D, 0x77, 0x73,
  0x48, 0x06, 0x70, 0x33, 0x03, 0xA0, 0xB7, 0x77, 0x10, 0x3A, 0x0B, 0x77, 0x50, 0xF7, 0x09, 0xA8,
  0x3D, 0x77, 0x73, 0x77, 0x1F, 0xB0, 0x77, 0x71, 0xFB, 0x07, 0x77, 0x1B, 0x80, 0x07, 0x0B, 0xA0,
  0x77, 0x71, 0xB4, 0x07, 0xA0, 0x77, 0x71, 0xB4, 0x07, 0xA0, 0x77, 0x71, 0xB8, 0x00, 0x70, 0xBA,
  0x07, 0x77, 0x1F, 0xB0, 0x77, 0x71, 0xFB, 0x07, 0x77, 0x18, 0x06, 0x70, 0x37, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_schema() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 1, 31, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_schema_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_score 36x36, 4-bit Alpha,  RLE, 269 bytes.
static const uint8_t ic_outlined_36_editor_score_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xD0,
  0x71, 0xA8, 0x43, 0x02, 0xEF, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xD0, 0x71, 0xA8, 0x33,
  0x0B, 0xFC, 0x30, 0x7A, 0x00, 0x7A, 0x07, 0x28, 0x51, 0x33, 0x3C, 0xF7, 0x1A, 0x03, 0x06, 0xA0,
  0x23, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x85, 0x49, 0x99, 0xEF, 0x71, 0xA8, 0x25, 0xEF, 0x74, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x07, 0xD0, 0x71, 0xA8, 0x1C, 0xFE, 0x50, 0x7A, 0x00, 0x7A, 0x07, 0x28,
  0x57, 0xFE, 0x99, 0x94, 0x1A, 0x82, 0x5E, 0xF7, 0x40, 0x7A, 0x00, 0x7A, 0x07, 0x28, 0x57, 0xFC,
  0x33, 0x31, 0x1A, 0x03, 0x06, 0xA0, 0x23, 0x08, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xD0, 0x71, 0xA8,
  0x33, 0x0B, 0xFC, 0x20, 0x4B, 0x00, 0x7A, 0x07, 0x20, 0x7D, 0x07, 0x1A, 0x85, 0x30, 0x2E, 0xF7,
  0x4C, 0x00, 0x7A, 0x07, 0x50, 0x17, 0x40, 0x4D, 0x00, 0x7A, 0x07, 0x48, 0x14, 0xE4, 0x72, 0x04,
  0xB0, 0xDA, 0x00, 0x7A, 0x07, 0x30, 0x4B, 0x04, 0x70, 0x4B, 0x00, 0x7A, 0x00, 0x7A, 0x07, 0x20,
  0x4D, 0x04, 0x50, 0x4B, 0x81, 0x70, 0x7A, 0x00, 0x7A, 0x81, 0x70, 0x4B, 0x0B, 0xB0, 0x43, 0x04,
  0xB0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x70, 0x4B, 0x81, 0x70, 0x7B, 0x81, 0x40, 0x4B, 0x07, 0x30,
  0x7A, 0x00, 0x7A, 0x0B, 0xB0, 0x73, 0x07, 0xB0, 0x7B, 0x07, 0x40, 0x7A, 0x00, 0x7D, 0x07, 0x50,
  0x7D, 0x07, 0x50, 0x7A, 0x00, 0x7C, 0x07, 0x70, 0x7B, 0x07, 0x60, 0x7A, 0x00, 0x7B, 0x07, 0x72,
  0x81, 0x7F, 0x77, 0x07, 0xA0, 0x07, 0xA0, 0xD8, 0x07, 0x70, 0xB8, 0x04, 0x70, 0xBA, 0x07, 0x04,
  0xFF, 0xFD, 0x81, 0x40, 0x9F, 0xFF, 0xB0, 0x93, 0x04, 0x80, 0xA2, 0x70, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_score() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_score_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_shape_line 36x36, 4-bit Alpha,  RLE, 276 bytes.
static const uint8_t ic_outlined_36_editor_shape_line_data[] PROGMEM = {
  0x68, 0x25, 0x77, 0x57, 0x77, 0x60, 0x10, 0x9E, 0x09, 0x01, 0x77, 0x72, 0x02, 0x0D, 0xF9, 0x0D,
  0x02, 0x74, 0x83, 0x7C, 0xEC, 0x75, 0x01, 0x0D, 0xB8, 0x2C, 0x99, 0xCB, 0x0D, 0x01, 0x72, 0x0B,
  0xD0, 0xB4, 0x09, 0xA0, 0xE0, 0x54, 0x05, 0x0E, 0xA0, 0x97, 0x10, 0x7F, 0x07, 0x3B, 0x05, 0x60,
  0x5B, 0x71, 0x0C, 0xF0, 0xC2, 0x05, 0xA0, 0xC7, 0x10, 0xCA, 0x05, 0x70, 0xEF, 0x0E, 0x20, 0x6A,
  0x09, 0x71, 0x09, 0xA0, 0x67, 0x0D, 0xF0, 0xC2, 0x06, 0xA0, 0x97, 0x10, 0x9A, 0x06, 0x70, 0xBF,
  0x07, 0x20, 0x5A, 0x0C, 0x71, 0x0C, 0xA0, 0x56, 0x09, 0xF0, 0xB4, 0xB0, 0x56, 0x05, 0xB6, 0x09,
  0xB8, 0x3B, 0xDF, 0xC7, 0x50, 0x9A, 0x0E, 0x05, 0x40, 0x50, 0xEA, 0x09, 0x50, 0x9B, 0x09, 0x73,
  0x01, 0x0D, 0xB8, 0x2C, 0x99, 0xCB, 0x0D, 0x01, 0x40, 0x9B, 0x09, 0x75, 0x02, 0x0D, 0xF9, 0x0D,
  0x02, 0x40, 0x9B, 0x09, 0x77, 0x01, 0x09, 0xE0, 0x90, 0x14, 0x09, 0xB0, 0x97, 0x74, 0x82, 0x57,
  0x75, 0x60, 0x9B, 0x09, 0x77, 0x77, 0x09, 0xB0, 0x97, 0x77, 0x70, 0x9B, 0x09, 0x77, 0x77, 0x09,
  0xB0, 0x97, 0x77, 0x70, 0x9B, 0x09, 0x77, 0x77, 0x09, 0xB0, 0x95, 0x08, 0x0D, 0xF9, 0x0B, 0x03,
  0x74, 0x09, 0xB0, 0x95, 0x08, 0xFC, 0x0E, 0x01, 0x72, 0x09, 0xB0, 0x96, 0x0D, 0xFD, 0x06, 0x48,
  0x37, 0xCF, 0xDB, 0xB0, 0x97, 0xB7, 0x07, 0xA0, 0x73, 0x0B, 0xF0, 0x97, 0x1B, 0x70, 0x7A, 0x07,
  0x20, 0x7F, 0x0B, 0x72, 0xB7, 0x07, 0xA0, 0x72, 0x0C, 0xF0, 0xD7, 0x2B, 0x70, 0x7A, 0x07, 0x20,
  0xEF, 0x0E, 0x72, 0xB7, 0x07, 0xA0, 0x72, 0x0C, 0xF0, 0xC7, 0x2B, 0x70, 0x7A, 0x07, 0x20, 0x7F,
  0x07, 0x72, 0xB7, 0x07, 0xA0, 0x73, 0x0B, 0xD0, 0xB7, 0x3B, 0x80, 0x37, 0x0B, 0xA0, 0x74, 0x83,
  0x7C, 0xEC, 0x77, 0x40, 0xBF, 0xD0, 0x47, 0x76, 0x03, 0x0E, 0xFB, 0x09, 0x77, 0x71, 0x01, 0x06,
  0x80, 0x47, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_shape_line() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 34, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_shape_line_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_short_text 36x36, 4-bit Alpha,  RLE, 22 bytes.
static const uint8_t ic_outlined_36_editor_short_text_data[] PROGMEM = {
  0x80, 0xA4, 0x78, 0x0D, 0x4F, 0x80, 0xA4, 0x78, 0x0D, 0x40, 0x80, 0x93, 0x77, 0x2F, 0xF9, 0x72,
  0xFF, 0x97, 0x28, 0x09, 0x37, 0x72,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_short_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 13, 29, 22), Box(0, 0, 35, 35),
      ic_outlined_36_editor_short_text_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_show_chart 36x36, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_outlined_36_editor_show_chart_data[] PROGMEM = {
  0x77, 0x76, 0x04, 0x03, 0x77, 0x76, 0x82, 0x3F, 0xE3, 0x77, 0x74, 0x02, 0x0E, 0xA0, 0xB7, 0x77,
  0x30, 0x10, 0xDA, 0x0D, 0x01, 0x77, 0x73, 0x0C, 0xA0, 0xE0, 0x27, 0x77, 0x30, 0xBB, 0x03, 0x75,
  0x02, 0x07, 0x73, 0x0A, 0xB0, 0x57, 0x58, 0x22, 0xDF, 0x87, 0x10, 0x8B, 0x06, 0x75, 0x02, 0x0D,
  0xB0, 0x86, 0x06, 0xB0, 0x87, 0x50, 0x20, 0xDD, 0x08, 0x40, 0x5B, 0x0A, 0x75, 0x02, 0x0D, 0xB0,
  0xEB, 0x08, 0x20, 0x3B, 0x0B, 0x75, 0x02, 0x0D, 0xB8, 0x17, 0x1D, 0xB8, 0x18, 0x2E, 0xA0, 0xC0,
  0x17, 0x40, 0x20, 0xDB, 0x07, 0x20, 0x10, 0xDB, 0x0E, 0xA0, 0xD0, 0x17, 0x40, 0x20, 0xDB, 0x07,
  0x40, 0x10, 0xDC, 0x0E, 0x02, 0x74, 0x02, 0x0D, 0xB0, 0x76, 0x01, 0x0D, 0xB0, 0x37, 0x40, 0x20,
  0xDB, 0x07, 0x71, 0x82, 0x1D, 0xF5, 0x74, 0x02, 0x0D, 0xB0, 0x77, 0x30, 0x10, 0x57, 0x50, 0xBB,
  0x07, 0x77, 0x74, 0x82, 0x1D, 0xF7, 0x77, 0x76, 0x01, 0x06, 0x77, 0x76,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_show_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 8, 32, 27), Box(0, 0, 35, 35),
      ic_outlined_36_editor_show_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_space_bar 36x36, 4-bit Alpha,  RLE, 23 bytes.
static const uint8_t ic_outlined_36_editor_space_bar_data[] PROGMEM = {
  0x0F, 0x77, 0x74, 0x0F, 0x7B, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x80,
  0x96, 0x78, 0x0D, 0x7F, 0x80, 0xA4, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_space_bar() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 13, 29, 22), Box(0, 0, 35, 35),
      ic_outlined_36_editor_space_bar_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_square 36x36, 4-bit Alpha,  RLE, 158 bytes.
static const uint8_t ic_outlined_36_editor_square_data[] PROGMEM = {
  0x03, 0x80, 0xA6, 0x70, 0x30, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x0B, 0x80, 0xA0,
  0x70, 0xBA, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77,
  0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A,
  0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77,
  0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A,
  0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x0B, 0x80, 0xA0, 0x70,
  0xBA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x07, 0x03, 0x80, 0xA6, 0x70, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_square() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_square_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_stacked_line_chart 36x36, 4-bit Alpha,  RLE, 236 bytes.
static const uint8_t ic_outlined_36_editor_stacked_line_chart_data[] PROGMEM = {
  0x77, 0x76, 0x0B, 0x09, 0x77, 0x76, 0x0A, 0xA0, 0x97, 0x77, 0x40, 0x8B, 0x06, 0x77, 0x73, 0x06,
  0xB0, 0x87, 0x77, 0x30, 0x5B, 0x0A, 0x76, 0x01, 0x73, 0x03, 0xB0, 0xB7, 0x68, 0x18, 0xD2, 0x71,
  0x02, 0x0E, 0xA0, 0xC0, 0x17, 0x50, 0x8A, 0x0D, 0x02, 0x60, 0x10, 0xDA, 0x0D, 0x01, 0x75, 0x08,
  0xC0, 0xD0, 0x25, 0x0C, 0xA0, 0xE0, 0x27, 0x50, 0x8E, 0x0D, 0x02, 0x30, 0xBB, 0x03, 0x30, 0xB0,
  0x97, 0x08, 0xB0, 0xD0, 0x8B, 0x82, 0xD2, 0x0A, 0xB0, 0x53, 0x0A, 0xA0, 0x95, 0x08, 0xB8, 0x2D,
  0x10, 0x7B, 0x0D, 0x09, 0xB0, 0x63, 0x08, 0xB0, 0x64, 0x08, 0xB0, 0xD0, 0x13, 0x07, 0xE0, 0x83,
  0x06, 0xB0, 0x84, 0x08, 0xB0, 0xD0, 0x15, 0x07, 0xC0, 0xA3, 0x05, 0xB0, 0xA4, 0x08, 0xB0, 0xD0,
  0x13, 0x01, 0x30, 0x7A, 0x0B, 0x30, 0x3B, 0x0B, 0x40, 0x7B, 0x0D, 0x01, 0x38, 0x18, 0xD2, 0x38,
  0x17, 0xC1, 0x20, 0x20, 0xEA, 0x0C, 0x01, 0x30, 0x7B, 0x0D, 0x01, 0x30, 0x8A, 0x0D, 0x02, 0x60,
  0x10, 0xDA, 0x0D, 0x01, 0x40, 0x7A, 0x0D, 0x01, 0x30, 0x8C, 0x0D, 0x02, 0x50, 0xCA, 0x0E, 0x02,
  0x68, 0x17, 0xD1, 0x30, 0x8E, 0x0D, 0x02, 0x30, 0xBB, 0x03, 0x75, 0x08, 0xB0, 0xD0, 0x8B, 0x82,
  0xD2, 0x0A, 0xB0, 0x57, 0x50, 0x8B, 0x82, 0xD1, 0x07, 0xB0, 0xD0, 0x9B, 0x06, 0x75, 0x08, 0xB0,
  0xD0, 0x13, 0x07, 0xE0, 0x87, 0x50, 0x8B, 0x0D, 0x01, 0x50, 0x7C, 0x0A, 0x75, 0x08, 0xB0, 0xD0,
  0x17, 0x07, 0xA0, 0xB7, 0x50, 0x7B, 0x0D, 0x01, 0x72, 0x81, 0x7C, 0x17, 0x40, 0x7B, 0x0D, 0x01,
  0x77, 0x73, 0x07, 0xA0, 0xD0, 0x17, 0x77, 0x58, 0x17, 0xD1, 0x77, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_stacked_line_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_stacked_line_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_strikethrough_s 36x36, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_outlined_36_editor_strikethrough_s_data[] PROGMEM = {
  0x74, 0x84, 0x25, 0x77, 0x64, 0x77, 0x60, 0x60, 0xCF, 0x09, 0x01, 0x77, 0x20, 0xBF, 0xB0, 0xE0,
  0x47, 0x70, 0xAF, 0xE0, 0x37, 0x50, 0x4C, 0x84, 0xD6, 0x21, 0x3A, 0xC0, 0xB7, 0x50, 0x9C, 0x02,
  0x50, 0x9C, 0x02, 0x74, 0x0A, 0xB0, 0xD6, 0x03, 0xC0, 0x47, 0x40, 0x9C, 0x01, 0x68, 0x00, 0x30,
  0x17, 0x40, 0x5C, 0x0D, 0x03, 0x77, 0x71, 0x80, 0x27, 0x03, 0x80, 0xC6, 0x00, 0x7F, 0xFF, 0xD0,
  0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x77, 0x71, 0x03, 0x0B, 0xC0, 0xD7, 0x40, 0x18, 0x00,
  0x37, 0x09, 0xC0, 0x37, 0x30, 0x5C, 0x02, 0x60, 0x3C, 0x05, 0x73, 0x02, 0xC0, 0x76, 0x03, 0xC0,
  0x57, 0x40, 0xDB, 0x0E, 0x04, 0x50, 0xBC, 0x02, 0x74, 0x04, 0xD8, 0x3C, 0x98, 0xAE, 0xC0, 0xC7,
  0x60, 0x7F, 0xD0, 0xE0, 0x37, 0x70, 0x40, 0xCF, 0xA0, 0xC0, 0x37, 0x73, 0x82, 0x49, 0xDE, 0xA8,
  0x1C, 0x94, 0x72,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_strikethrough_s() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 26), Box(0, 0, 35, 35),
      ic_outlined_36_editor_strikethrough_s_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_subscript 36x36, 4-bit Alpha,  RLE, 161 bytes.
static const uint8_t ic_outlined_36_editor_subscript_data[] PROGMEM = {
  0x06, 0xB0, 0x97, 0x10, 0x9B, 0x06, 0x72, 0x0B, 0xB0, 0x36, 0x03, 0xB0, 0xB7, 0x30, 0x20, 0xEA,
  0x0C, 0x60, 0xCA, 0x0E, 0x02, 0x74, 0x07, 0xB0, 0x64, 0x07, 0xB0, 0x77, 0x60, 0xCA, 0x0E, 0x01,
  0x20, 0x10, 0xEA, 0x0C, 0x77, 0x03, 0xB0, 0xA2, 0x0A, 0xB0, 0x27, 0x71, 0x08, 0xB0, 0x04, 0xB0,
  0x87, 0x73, 0x0D, 0xA0, 0x0D, 0xA0, 0xD7, 0x74, 0x04, 0xE0, 0x37, 0x75, 0x09, 0xC0, 0x97, 0x76,
  0x07, 0xC0, 0x77, 0x75, 0x02, 0xD0, 0xE0, 0x27, 0x74, 0x0B, 0xE0, 0xB7, 0x73, 0x06, 0xB0, 0x07,
  0xB0, 0x57, 0x71, 0x01, 0x0E, 0xA0, 0xD2, 0x0D, 0xA0, 0xE0, 0x17, 0x70, 0xAB, 0x04, 0x20, 0x4B,
  0x0A, 0x76, 0x04, 0xB0, 0x94, 0x09, 0xB0, 0x43, 0x84, 0x37, 0x77, 0x75, 0x30, 0xDA, 0x0E, 0x01,
  0x40, 0x10, 0xEA, 0x0D, 0x30, 0x7D, 0x81, 0x50, 0x9B, 0x05, 0x60, 0x5B, 0x09, 0x79, 0x07, 0x03,
  0xB0, 0xB7, 0x10, 0xBB, 0x03, 0x28, 0x55, 0x77, 0x7F, 0x7C, 0xB0, 0x27, 0x10, 0x2B, 0x81, 0xC0,
  0x5C, 0x0D, 0x02, 0x77, 0x50, 0x79, 0x77, 0x73, 0x85, 0x7F, 0x77, 0x77, 0x37, 0x75, 0x07, 0xD0,
  0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_subscript() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 6, 34, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_subscript_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_superscript 36x36, 4-bit Alpha,  RLE, 163 bytes.
static const uint8_t ic_outlined_36_editor_superscript_data[] PROGMEM = {
  0x77, 0x50, 0x7C, 0x0D, 0x02, 0x77, 0x58, 0x53, 0x77, 0x77, 0xF7, 0x77, 0x73, 0x90, 0x70, 0x6B,
  0x09, 0x71, 0x09, 0xB8, 0x26, 0x02, 0xDC, 0x81, 0x50, 0xBB, 0x03, 0x60, 0x3B, 0x0B, 0x28, 0x47,
  0xF7, 0x77, 0x52, 0x02, 0x0E, 0xA0, 0xC6, 0x0C, 0xA0, 0xE0, 0x22, 0x07, 0x97, 0x07, 0xB0, 0x64,
  0x07, 0xB0, 0x73, 0x07, 0xD0, 0x73, 0x0C, 0xA0, 0xE0, 0x12, 0x01, 0x0E, 0xA0, 0xC4, 0x03, 0x80,
  0x17, 0x03, 0x30, 0x3B, 0x0A, 0x20, 0xAB, 0x02, 0x77, 0x10, 0x8B, 0x00, 0x4B, 0x08, 0x77, 0x30,
  0xDA, 0x00, 0xDA, 0x0D, 0x77, 0x40, 0x4E, 0x03, 0x77, 0x50, 0x9C, 0x09, 0x77, 0x60, 0x7C, 0x07,
  0x77, 0x50, 0x2D, 0x0E, 0x02, 0x77, 0x40, 0xBE, 0x0B, 0x77, 0x30, 0x6B, 0x00, 0x7B, 0x05, 0x77,
  0x10, 0x10, 0xEA, 0x0D, 0x20, 0xDA, 0x0E, 0x01, 0x77, 0x0A, 0xB0, 0x42, 0x04, 0xB0, 0xA7, 0x60,
  0x4B, 0x09, 0x40, 0x9B, 0x04, 0x75, 0x0D, 0xA0, 0xE0, 0x14, 0x01, 0x0E, 0xA0, 0xD7, 0x40, 0x9B,
  0x05, 0x60, 0x5B, 0x09, 0x72, 0x03, 0xB0, 0xB7, 0x10, 0xBB, 0x03, 0x71, 0x0C, 0xB0, 0x27, 0x10,
  0x2B, 0x0C, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_superscript() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 6, 34, 29), Box(0, 0, 35, 35),
      ic_outlined_36_editor_superscript_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_table_chart 36x36, 4-bit Alpha,  RLE, 175 bytes.
static const uint8_t ic_outlined_36_editor_table_chart_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x37, 0x06, 0x01, 0x20, 0x9F, 0xFF, 0xC8, 0x1E, 0x34, 0xFF, 0xFE, 0x0B, 0x07,
  0xA0, 0xB8, 0x0A, 0x27, 0xB0, 0x7A, 0x07, 0x77, 0x71, 0xB0, 0x7A, 0x07, 0x77, 0x71, 0xB0, 0x7A,
  0x07, 0x77, 0x71, 0xB0, 0x7A, 0x07, 0x77, 0x71, 0xB0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F,
  0xFF, 0xF0, 0x7A, 0x07, 0x4B, 0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74,
  0xB0, 0x7A, 0x07, 0x4B, 0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74, 0xB0,
  0x7A, 0x07, 0x4B, 0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74, 0xB0, 0x7A,
  0x07, 0x4B, 0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74, 0xB0, 0x7A, 0x07,
  0x4B, 0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74, 0xB0, 0x7A, 0x07, 0x4B,
  0x70, 0x7A, 0x07, 0x4B, 0x07, 0xA0, 0x74, 0xB7, 0x07, 0xA0, 0x74, 0xB0, 0x7A, 0x07, 0x4B, 0x70,
  0x7A, 0x07, 0x4B, 0x07, 0xA0, 0xB8, 0x00, 0x7B, 0x80, 0x37, 0x0B, 0xA0, 0xB8, 0x00, 0x7B, 0x04,
  0xFF, 0xFE, 0x81, 0xB0, 0x9F, 0xFF, 0xC0, 0xE0, 0x32, 0x04, 0x80, 0xA3, 0x70, 0x60, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_table_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 32, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_table_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_table_rows 36x36, 4-bit Alpha,  RLE, 148 bytes.
static const uint8_t ic_outlined_36_editor_table_rows_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07,
  0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xFF, 0xFD,
  0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07,
  0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00,
  0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x00, 0x7F, 0xFF, 0xD0, 0x07,
  0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76,
  0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x07, 0xA0,
  0xB8, 0x0A, 0x07, 0x0B, 0xA0, 0x70, 0x4F, 0xFF, 0xD8, 0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48,
  0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_table_rows() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_table_rows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_text_decrease 36x36, 4-bit Alpha,  RLE, 158 bytes.
static const uint8_t ic_outlined_36_editor_text_decrease_data[] PROGMEM = {
  0x71, 0x83, 0x57, 0x77, 0x17, 0x77, 0x71, 0x0E, 0xB0, 0x77, 0x77, 0x70, 0x5C, 0x0D, 0x77, 0x77,
  0x0B, 0xD0, 0x37, 0x77, 0x50, 0x2B, 0x0B, 0xA0, 0x97, 0x77, 0x50, 0x7A, 0x0B, 0x04, 0xA0, 0xE7,
  0x77, 0x50, 0xDA, 0x81, 0x60, 0xEA, 0x05, 0x77, 0x73, 0x03, 0xB8, 0x11, 0x08, 0xA0, 0xB7, 0x77,
  0x30, 0x9A, 0x0B, 0x20, 0x3B, 0x02, 0x77, 0x72, 0x0E, 0xA0, 0x53, 0x0D, 0xA0, 0x75, 0x03, 0x80,
  0x77, 0x03, 0x40, 0x5A, 0x0E, 0x40, 0x8A, 0x0D, 0x50, 0x7F, 0xC0, 0x74, 0x0B, 0xA0, 0xA4, 0x02,
  0xB0, 0x34, 0x07, 0xFC, 0x07, 0x30, 0x2B, 0x04, 0x50, 0xCA, 0x09, 0x40, 0x38, 0x07, 0x70, 0x33,
  0x07, 0xB8, 0x02, 0xD0, 0xEA, 0x0E, 0x77, 0x60, 0xDF, 0xE0, 0x57, 0x74, 0x04, 0xFF, 0x0B, 0x77,
  0x40, 0x9A, 0x0D, 0x80, 0x41, 0x06, 0xB0, 0x27, 0x73, 0x0E, 0xA0, 0x87, 0x20, 0xEA, 0x07, 0x77,
  0x20, 0x5B, 0x02, 0x72, 0x0A, 0xA0, 0xD7, 0x72, 0x0B, 0xA0, 0xC7, 0x30, 0x4B, 0x04, 0x77, 0x02,
  0xB0, 0x77, 0x40, 0xEA, 0x09, 0x77, 0x83, 0x37, 0x77, 0x17, 0x40, 0x50, 0xF7, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_text_decrease() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 7, 34, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_text_decrease_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_text_fields 36x36, 4-bit Alpha,  RLE, 147 bytes.
static const uint8_t ic_outlined_36_editor_text_fields_data[] PROGMEM = {
  0x03, 0xFF, 0xD0, 0x37, 0x20, 0x3F, 0xFD, 0x03, 0x72, 0x03, 0xFF, 0xD0, 0x37, 0x20, 0x3F, 0xFD,
  0x03, 0x72, 0x01, 0x80, 0x37, 0x0D, 0xB0, 0xD8, 0x03, 0x70, 0x17, 0x73, 0x0B, 0xB0, 0xB7, 0x77,
  0x40, 0xBB, 0x0B, 0x77, 0x74, 0x0B, 0xB0, 0xB2, 0x01, 0x80, 0x91, 0x70, 0x17, 0x10, 0xBB, 0x0B,
  0x20, 0x3F, 0xE0, 0x37, 0x10, 0xBB, 0x0B, 0x20, 0x3F, 0xE0, 0x37, 0x10, 0xBB, 0x0B, 0x20, 0x3F,
  0xE0, 0x37, 0x10, 0xBB, 0x0B, 0x20, 0x3F, 0xE0, 0x37, 0x10, 0xBB, 0x0B, 0x70, 0xBB, 0x0B, 0x76,
  0x0B, 0xB0, 0xB7, 0x0B, 0xB0, 0xB7, 0x60, 0xBB, 0x0B, 0x70, 0xBB, 0x0B, 0x76, 0x0B, 0xB0, 0xB7,
  0x0B, 0xB0, 0xB7, 0x60, 0xBB, 0x0B, 0x70, 0xBB, 0x0B, 0x76, 0x0B, 0xB0, 0xB7, 0x0B, 0xB0, 0xB7,
  0x60, 0xBB, 0x0B, 0x70, 0xBB, 0x0B, 0x76, 0x0B, 0xB0, 0xB7, 0x0B, 0xB0, 0xB7, 0x60, 0xBB, 0x0B,
  0x70, 0xBB, 0x0B, 0x76, 0x0B, 0xB0, 0xB7, 0x0B, 0xB0, 0xB7, 0x68, 0x35, 0x77, 0x75, 0x78, 0x35,
  0x77, 0x75, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_text_fields() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_text_fields_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_text_increase 36x36, 4-bit Alpha,  RLE, 167 bytes.
static const uint8_t ic_outlined_36_editor_text_increase_data[] PROGMEM = {
  0x71, 0x83, 0x57, 0x77, 0x17, 0x77, 0x71, 0x0E, 0xB0, 0x77, 0x77, 0x70, 0x5C, 0x0D, 0x77, 0x77,
  0x0B, 0xD0, 0x37, 0x77, 0x50, 0x2B, 0x0B, 0xA0, 0x97, 0x77, 0x50, 0x7A, 0x0B, 0x04, 0xA0, 0xE7,
  0x5B, 0x74, 0x0D, 0xA8, 0x16, 0x0E, 0xA0, 0x57, 0x4B, 0x73, 0x03, 0xB8, 0x11, 0x08, 0xA0, 0xB7,
  0x4B, 0x73, 0x09, 0xA0, 0xB2, 0x03, 0xB0, 0x27, 0x3B, 0x73, 0x0E, 0xA0, 0x53, 0x0D, 0xA0, 0x75,
  0x03, 0x80, 0x07, 0xB8, 0x00, 0x70, 0x34, 0x05, 0xA0, 0xE4, 0x08, 0xA0, 0xD5, 0x07, 0xFC, 0x07,
  0x40, 0xBA, 0x0A, 0x40, 0x2B, 0x03, 0x40, 0x7F, 0xC0, 0x73, 0x02, 0xB0, 0x45, 0x0C, 0xA0, 0x94,
  0x03, 0x80, 0x07, 0xB8, 0x00, 0x70, 0x33, 0x07, 0xB8, 0x02, 0xD0, 0xEA, 0x0E, 0x72, 0xB7, 0x10,
  0xDF, 0xE0, 0x57, 0x1B, 0x70, 0x4F, 0xF0, 0xB7, 0x1B, 0x70, 0x9A, 0x0D, 0x80, 0x41, 0x06, 0xB0,
  0x27, 0xB7, 0x0E, 0xA0, 0x87, 0x20, 0xEA, 0x07, 0x77, 0x20, 0x5B, 0x02, 0x72, 0x0A, 0xA0, 0xD7,
  0x72, 0x0B, 0xA0, 0xC7, 0x30, 0x4B, 0x04, 0x77, 0x02, 0xB0, 0x77, 0x40, 0xEA, 0x09, 0x77, 0x83,
  0x37, 0x77, 0x17, 0x40, 0x50, 0xF7, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_text_increase() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 7, 34, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_text_increase_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_title 36x36, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_outlined_36_editor_title_data[] PROGMEM = {
  0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x70, 0x38, 0x03, 0x70,
  0x9C, 0x09, 0x80, 0x37, 0x03, 0x71, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0,
  0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0,
  0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0,
  0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0,
  0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x03, 0xC0, 0x37, 0x72, 0x84, 0x17, 0x77, 0x71, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_title() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 6, 28, 28), Box(0, 0, 35, 35),
      ic_outlined_36_editor_title_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_type_specimen 36x36, 4-bit Alpha,  RLE, 162 bytes.
static const uint8_t ic_outlined_36_editor_type_specimen_data[] PROGMEM = {
  0x70, 0x80, 0xDF, 0xFC, 0x0D, 0x08, 0x70, 0x8F, 0xFF, 0x90, 0x86, 0x0D, 0xFF, 0xF9, 0x0D, 0x6B,
  0x77, 0x4B, 0x6B, 0x77, 0x4B, 0x6B, 0x78, 0x23, 0xBB, 0x37, 0xE3, 0xB7, 0x0A, 0xA0, 0xA7, 0xE3,
  0xB6, 0x01, 0xC0, 0x16, 0xE3, 0xB6, 0x84, 0x6F, 0xAA, 0xF6, 0x6E, 0x3B, 0x68, 0x4C, 0xF5, 0x5F,
  0xC6, 0xE3, 0xB5, 0x81, 0x2F, 0xE2, 0x81, 0xEF, 0x25, 0xE3, 0xB5, 0x81, 0x8F, 0x92, 0x81, 0x9F,
  0x85, 0xE3, 0xB5, 0x81, 0xEF, 0x42, 0x81, 0x4F, 0xE5, 0xE3, 0xB4, 0x04, 0xA8, 0x00, 0x9A, 0x04,
  0x4E, 0x3B, 0x40, 0xAF, 0x90, 0xA4, 0xE3, 0xB3, 0x01, 0xA8, 0x45, 0x33, 0x33, 0x5A, 0x01, 0x3E,
  0x3B, 0x38, 0x16, 0xFD, 0x68, 0x1D, 0xF6, 0x3E, 0x3B, 0x38, 0x1C, 0xF7, 0x68, 0x17, 0xFC, 0x3E,
  0x3B, 0x28, 0x21, 0xBB, 0x26, 0x82, 0x2B, 0xB1, 0x2E, 0x3B, 0x77, 0x4E, 0x3B, 0x77, 0x4E, 0x30,
  0xDF, 0xFF, 0x90, 0xDB, 0x30, 0x8F, 0xFF, 0x90, 0x8B, 0x40, 0x80, 0xDF, 0xFC, 0x0D, 0x08, 0x1B,
  0x77, 0x76, 0xB7, 0x77, 0x6B, 0x77, 0x76, 0x0D, 0xFF, 0xFA, 0x60, 0x8F, 0xFF, 0xA7, 0x08, 0x0D,
  0xFF, 0xF6,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_type_specimen() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_type_specimen_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_vertical_align_bottom 36x36, 4-bit Alpha,  RLE, 110 bytes.
static const uint8_t ic_outlined_36_editor_vertical_align_bottom_data[] PROGMEM = {
  0x73, 0x82, 0x37, 0x73, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07,
  0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07,
  0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07,
  0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x28, 0x35, 0x77,
  0x7B, 0xA8, 0x3B, 0x77, 0x75, 0x75, 0x01, 0x0D, 0xF9, 0x0D, 0x01, 0x76, 0x01, 0x0D, 0xE0, 0xD0,
  0x17, 0x71, 0x01, 0x0D, 0xC0, 0xD0, 0x17, 0x73, 0x01, 0x0D, 0xA0, 0xD0, 0x17, 0x75, 0x82, 0x1D,
  0xD1, 0x77, 0x70, 0x01, 0x80, 0xE7, 0x08, 0x0A, 0x47, 0x80, 0xD4, 0xF8, 0x0A, 0x47,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_vertical_align_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_vertical_align_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_vertical_align_center 36x36, 4-bit Alpha,  RLE, 141 bytes.
static const uint8_t ic_outlined_36_editor_vertical_align_center_data[] PROGMEM = {
  0x73, 0x82, 0x37, 0x73, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07,
  0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x28, 0x35, 0x77, 0x7B, 0xA8, 0x3B, 0x77,
  0x75, 0x75, 0x01, 0x0D, 0xF9, 0x0D, 0x01, 0x76, 0x01, 0x0D, 0xE0, 0xD0, 0x17, 0x71, 0x01, 0x0D,
  0xC0, 0xD0, 0x17, 0x73, 0x01, 0x0D, 0xA0, 0xD0, 0x17, 0x75, 0x82, 0x1D, 0xD1, 0x77, 0x70, 0x01,
  0x80, 0xE7, 0x08, 0x0A, 0x47, 0x80, 0xD4, 0xF8, 0x0A, 0x47, 0x80, 0xE7, 0x00, 0x01, 0x77, 0x78,
  0x21, 0xDD, 0x17, 0x75, 0x01, 0x0D, 0xA0, 0xD0, 0x17, 0x73, 0x01, 0x0D, 0xC0, 0xD0, 0x17, 0x71,
  0x01, 0x0D, 0xE0, 0xD0, 0x17, 0x60, 0x10, 0xDF, 0x90, 0xD0, 0x17, 0x58, 0x35, 0x77, 0x7B, 0xA8,
  0x3B, 0x77, 0x75, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77,
  0x60, 0x7A, 0x07, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x68, 0x23, 0x77, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_vertical_align_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 1, 29, 34), Box(0, 0, 35, 35),
      ic_outlined_36_editor_vertical_align_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_vertical_align_top 36x36, 4-bit Alpha,  RLE, 110 bytes.
static const uint8_t ic_outlined_36_editor_vertical_align_top_data[] PROGMEM = {
  0x80, 0xA4, 0x78, 0x0D, 0x4F, 0x80, 0xA4, 0x78, 0x0E, 0x70, 0x00, 0x17, 0x77, 0x82, 0x1D, 0xD1,
  0x77, 0x50, 0x10, 0xDA, 0x0D, 0x01, 0x77, 0x30, 0x10, 0xDC, 0x0D, 0x01, 0x77, 0x10, 0x10, 0xDE,
  0x0D, 0x01, 0x76, 0x01, 0x0D, 0xF9, 0x0D, 0x01, 0x75, 0x83, 0x57, 0x77, 0xBA, 0x83, 0xB7, 0x77,
  0x57, 0x72, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0,
  0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x07, 0xA0, 0x77, 0x76, 0x82, 0x37, 0x73, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_vertical_align_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 29, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_vertical_align_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_vertical_distribute 36x36, 4-bit Alpha,  RLE, 38 bytes.
static const uint8_t ic_outlined_36_editor_vertical_distribute_data[] PROGMEM = {
  0x80, 0x9A, 0x6F, 0x80, 0xCA, 0x10, 0x01, 0x80, 0x92, 0x30, 0x17, 0x70, 0x7F, 0xF0, 0x77, 0x70,
  0x7F, 0xF0, 0x77, 0x70, 0x7F, 0xF0, 0x77, 0x70, 0x7F, 0xF0, 0x77, 0x70, 0x18, 0x09, 0x23, 0x01,
  0x80, 0xCA, 0x10, 0x80, 0x9A, 0x6F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_vertical_distribute() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_outlined_36_editor_vertical_distribute_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_36_editor_wrap_text 36x36, 4-bit Alpha,  RLE, 104 bytes.
static const uint8_t ic_outlined_36_editor_wrap_text_data[] PROGMEM = {
  0x80, 0xA4, 0x72, 0xFF, 0xFB, 0x2F, 0xFF, 0xB2, 0x80, 0xA4, 0x78, 0x0A, 0x80, 0x08, 0x0A, 0x07,
  0x05, 0x02, 0x4F, 0xFF, 0x90, 0xA0, 0x12, 0xFF, 0xFA, 0x0D, 0x01, 0x18, 0x0A, 0x07, 0x09, 0x0E,
  0xA0, 0xA7, 0x77, 0x10, 0x10, 0xDA, 0x02, 0x77, 0x71, 0x05, 0xA0, 0x67, 0x72, 0x01, 0x50, 0x2A,
  0x07, 0x77, 0x10, 0x07, 0x50, 0x5A, 0x06, 0x77, 0x81, 0x7F, 0x74, 0x01, 0x0D, 0xA0, 0x28, 0x05,
  0x74, 0x07, 0xA8, 0x4B, 0x77, 0x79, 0xEA, 0x0A, 0x1F, 0xA3, 0x07, 0xFB, 0x0D, 0x01, 0x1F, 0xA3,
  0x07, 0xFA, 0x0A, 0x01, 0x28, 0x05, 0x74, 0x07, 0xA8, 0x4B, 0x77, 0x75, 0x27, 0x74, 0x81, 0x7F,
  0x77, 0x77, 0x30, 0x07, 0x77, 0x74, 0x01, 0x72,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_36_editor_wrap_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 7, 31, 31), Box(0, 0, 35, 35),
      ic_outlined_36_editor_wrap_text_data, Alpha4(color::Black));
  return value;
}
