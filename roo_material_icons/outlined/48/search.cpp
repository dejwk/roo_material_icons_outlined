#include "search.h"

using namespace roo_display;

// Image file ic_outlined_48_search_bathroom 48x48, 4-bit Alpha,  RLE, 272 bytes.
static const uint8_t ic_outlined_48_search_bathroom_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x75, 0x86, 0x59, 0xDE, 0xED, 0x95, 0x75, 0xF9, 0x73, 0x04, 0x0D,
  0xF9, 0x0D, 0x04, 0x73, 0xF9, 0x72, 0x08, 0xFD, 0x08, 0x72, 0xF9, 0x71, 0x08, 0xB8, 0x1E, 0x72,
  0x28, 0x12, 0x7E, 0xB0, 0x87, 0x1F, 0x97, 0x04, 0xB0, 0xA7, 0x10, 0xAB, 0x04, 0x7F, 0x97, 0x0D,
  0xA0, 0xA7, 0x30, 0xAA, 0x0D, 0x7F, 0x96, 0x05, 0xA0, 0xE0, 0x17, 0x40, 0xEA, 0x05, 0x6F, 0x96,
  0x09, 0xA0, 0x77, 0x50, 0x7A, 0x09, 0x6F, 0x96, 0x0D, 0xA0, 0x37, 0x50, 0x2A, 0x0D, 0x6F, 0x96,
  0x0E, 0xFF, 0xC0, 0xE6, 0xF9, 0x6F, 0xFE, 0x6F, 0x96, 0xFF, 0xE6, 0xF9, 0x77, 0x77, 0x4F, 0x97,
  0x77, 0x74, 0xF9, 0x71, 0x82, 0x4D, 0xD4, 0x28, 0x24, 0xDD, 0x42, 0x82, 0x4D, 0xD4, 0x71, 0xF9,
  0x71, 0x0D, 0xA0, 0xD2, 0x0D, 0xA0, 0xD2, 0x0D, 0xA0, 0xD7, 0x1F, 0x97, 0x10, 0xDA, 0x0D, 0x20,
  0xDA, 0x0D, 0x20, 0xDA, 0x0D, 0x71, 0xF9, 0x71, 0x82, 0x4D, 0xD4, 0x28, 0x24, 0xDD, 0x42, 0x82,
  0x4D, 0xD4, 0x71, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x71, 0x82, 0x4D, 0xD4, 0x28,
  0x24, 0xDD, 0x42, 0x82, 0x4D, 0xD4, 0x71, 0xF9, 0x71, 0x0D, 0xA0, 0xD2, 0x0D, 0xA0, 0xD2, 0x0D,
  0xA0, 0xD7, 0x1F, 0x97, 0x10, 0xDA, 0x0D, 0x20, 0xDA, 0x0D, 0x20, 0xDA, 0x0D, 0x71, 0xF9, 0x71,
  0x82, 0x4D, 0xD4, 0x28, 0x24, 0xDD, 0x42, 0x82, 0x4D, 0xD4, 0x71, 0xF9, 0x77, 0x77, 0x4F, 0x97,
  0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xC0, 0xD8, 0x0C, 0x2F, 0x0D, 0x0A, 0x80,
  0xC2, 0xF8, 0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xFC, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_bathroom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_bathroom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_bed 48x48, 4-bit Alpha,  RLE, 136 bytes.
static const uint8_t ic_outlined_48_search_bed_data[] PROGMEM = {
  0x58, 0x16, 0xCE, 0xF9, 0x81, 0xEC, 0x62, 0x81, 0x6C, 0xEF, 0x98, 0x1E, 0xC6, 0x71, 0x01, 0x0C,
  0xFF, 0x00, 0xCF, 0xF0, 0xC0, 0x16, 0x0C, 0xFF, 0xFF, 0xC0, 0xC5, 0x06, 0xFF, 0xFF, 0xE0, 0x64,
  0x0C, 0xB0, 0xB0, 0x17, 0x10, 0x10, 0xBC, 0x0B, 0x01, 0x71, 0x01, 0x0B, 0xB0, 0xC4, 0x0E, 0xB0,
  0x17, 0x30, 0x1C, 0x01, 0x73, 0x01, 0xB0, 0xE4, 0xC7, 0x5C, 0x75, 0xC4, 0xC7, 0x5C, 0x75, 0xC4,
  0xC7, 0x5C, 0x75, 0xC4, 0xC7, 0x5C, 0x75, 0xC4, 0x80, 0xC0, 0xF3, 0x01, 0x80, 0xC0, 0xF0, 0x12,
  0x0C, 0x80, 0xC0, 0xF8, 0x1C, 0x06, 0x80, 0xC2, 0xF0, 0x60, 0xCB, 0x0B, 0x01, 0x77, 0x77, 0x01,
  0x0B, 0xB0, 0xC0, 0xEB, 0x01, 0x77, 0x77, 0x20, 0x1B, 0x0E, 0xC7, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x48, 0x0A, 0xC4, 0xF7, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_bed() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 10, 43, 37), Box(0, 0, 47, 47),
      ic_outlined_48_search_bed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_bedroom_baby 48x48, 4-bit Alpha,  RLE, 244 bytes.
static const uint8_t ic_outlined_48_search_bedroom_baby_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x40, 0x50, 0xED, 0x09,
  0x77, 0x6F, 0x95, 0x04, 0xE0, 0x27, 0x75, 0xF9, 0x50, 0xCE, 0x0B, 0x77, 0x5F, 0x94, 0x0A, 0xF9,
  0x04, 0x77, 0x4F, 0x93, 0x08, 0xFA, 0x0D, 0x77, 0x4F, 0x93, 0x08, 0xA0, 0xE0, 0x5E, 0x07, 0x77,
  0x3F, 0x94, 0x81, 0x89, 0x11, 0xFF, 0xC6, 0xF9, 0x71, 0xFF, 0xC6, 0xF9, 0x71, 0xFF, 0xA7, 0x1F,
  0x97, 0x1F, 0xFA, 0x71, 0xF9, 0x71, 0xFF, 0xA7, 0x1F, 0x97, 0x1F, 0xFA, 0x71, 0xF9, 0x71, 0xFF,
  0xA7, 0x1F, 0x97, 0x04, 0xFF, 0xA0, 0x47, 0xF9, 0x30, 0x40, 0x92, 0x0D, 0xA0, 0x0B, 0xF8, 0x1E,
  0xBB, 0xA0, 0xD2, 0x09, 0x04, 0x3F, 0x92, 0x04, 0xA0, 0xB0, 0x7A, 0x0E, 0x01, 0x28, 0x43, 0x56,
  0x65, 0x32, 0x01, 0x0E, 0xA0, 0x70, 0xBA, 0x04, 0x2F, 0x92, 0x09, 0xE0, 0x67, 0x50, 0x7E, 0x09,
  0x2F, 0x93, 0x08, 0xD0, 0x57, 0x50, 0x5D, 0x08, 0x3F, 0x94, 0x04, 0x0E, 0xC8, 0x3E, 0x95, 0x31,
  0x28, 0x31, 0x36, 0xAE, 0xC0, 0xE0, 0x44, 0xF9, 0x60, 0x8F, 0xFC, 0x08, 0x6F, 0x97, 0x81, 0x18,
  0xDF, 0xD8, 0x1C, 0x71, 0x7F, 0x97, 0x38, 0x92, 0x37, 0xAC, 0xEF, 0xED, 0xBA, 0x62, 0x73, 0xF9,
  0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xC0, 0xD8, 0x0C,
  0x2F, 0x0D, 0x0A, 0x80, 0xC2, 0xF8, 0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF,
  0xFC, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_bedroom_baby() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_bedroom_baby_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_bedroom_child 48x48, 4-bit Alpha,  RLE, 193 bytes.
static const uint8_t ic_outlined_48_search_bedroom_child_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x71, 0x81, 0x1A, 0xDF,
  0xB8, 0x1D, 0xA1, 0x71, 0xF9, 0x70, 0x10, 0xEF, 0xF0, 0xE0, 0x17, 0xF9, 0x70, 0xAF, 0xFA, 0x0A,
  0x7F, 0x97, 0x0D, 0xA7, 0x5A, 0x0D, 0x7F, 0x97, 0xB7, 0x5B, 0x7F, 0x97, 0xB7, 0x5B, 0x7F, 0x97,
  0xB7, 0x5B, 0x7F, 0x96, 0x05, 0xFF, 0xC0, 0x56, 0xF9, 0x50, 0x9F, 0xFE, 0x09, 0x5F, 0x94, 0x05,
  0xFF, 0xF9, 0x05, 0x4F, 0x94, 0x0C, 0xA0, 0x97, 0x72, 0x09, 0xA0, 0xC4, 0xF9, 0x40, 0xEA, 0x77,
  0x4A, 0x0E, 0x4F, 0x94, 0xB7, 0x74, 0xB4, 0xF9, 0x4B, 0x77, 0x4B, 0x4F, 0x94, 0xFF, 0xFB, 0x4F,
  0x94, 0xFF, 0xFB, 0x4F, 0x94, 0xFF, 0xFB, 0x4F, 0x94, 0xB7, 0x74, 0xB4, 0xF9, 0x4B, 0x77, 0x4B,
  0x4F, 0x94, 0xB7, 0x74, 0xB4, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F,
  0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xC0, 0xD8, 0x0C, 0x2F, 0x0D, 0x0A,
  0x80, 0xC2, 0xF8, 0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xFC, 0x81, 0xDA,
  0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_bedroom_child() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_bedroom_child_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_bedroom_parent 48x48, 4-bit Alpha,  RLE, 227 bytes.
static const uint8_t ic_outlined_48_search_bedroom_parent_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x50, 0x70, 0xCF, 0x82,
  0xE9, 0x9E, 0xF0, 0xC0, 0x75, 0xF9, 0x40, 0xBF, 0xFF, 0x90, 0xB4, 0xF9, 0x30, 0x5F, 0xFF, 0xB0,
  0x53, 0xF9, 0x30, 0x9A, 0x07, 0x70, 0x7A, 0x07, 0x70, 0x7A, 0x09, 0x3F, 0x93, 0x0A, 0xA0, 0x77,
  0x07, 0xA0, 0x77, 0x07, 0xA0, 0xA3, 0xF9, 0x30, 0xAA, 0x07, 0x70, 0x7A, 0x07, 0x70, 0x7A, 0x0A,
  0x3F, 0x93, 0x0A, 0xA0, 0x77, 0x07, 0xA0, 0x77, 0x07, 0xA0, 0xA3, 0xF9, 0x30, 0xAF, 0xFF, 0xB0,
  0xA3, 0xF9, 0x30, 0xAF, 0xFF, 0xB0, 0xA3, 0xF9, 0x20, 0x20, 0xEF, 0xFF, 0xB0, 0xE0, 0x22, 0xF9,
  0x20, 0x9A, 0x0B, 0x01, 0x77, 0x40, 0x10, 0xBA, 0x09, 0x2F, 0x92, 0x0E, 0xA0, 0x17, 0x76, 0x01,
  0xA0, 0xE2, 0xF9, 0x2B, 0x77, 0x71, 0xB2, 0xF9, 0x2B, 0x77, 0x71, 0xB2, 0xF9, 0x2F, 0xFF, 0xF2,
  0xF9, 0x2F, 0xFF, 0xF2, 0xF9, 0x2F, 0xFF, 0xF2, 0xF9, 0x2B, 0x77, 0x71, 0xB2, 0xF9, 0x2B, 0x77,
  0x71, 0xB2, 0xF9, 0x2B, 0x77, 0x71, 0xB2, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77,
  0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xC0, 0xD8, 0x0C, 0x2F,
  0x0D, 0x0A, 0x80, 0xC2, 0xF8, 0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xFC,
  0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_bedroom_parent() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_bedroom_parent_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_blender 48x48, 4-bit Alpha,  RLE, 246 bytes.
static const uint8_t ic_outlined_48_search_blender_data[] PROGMEM = {
  0x77, 0xF9, 0x77, 0x71, 0xF9, 0x72, 0x81, 0x1A, 0xDF, 0xFF, 0xC8, 0x1E, 0x1E, 0xFF, 0xFE, 0x0B,
  0x0A, 0xFF, 0xFF, 0x09, 0x0D, 0xFF, 0xFF, 0x07, 0xC2, 0x04, 0xB0, 0xB7, 0x70, 0xBB, 0x04, 0xC2,
  0x02, 0xB0, 0xD7, 0x70, 0xDB, 0x02, 0xC3, 0xC7, 0x7C, 0x1C, 0x30, 0xCB, 0x03, 0x75, 0x03, 0xB0,
  0xD1, 0xC3, 0x0A, 0xB0, 0x57, 0x50, 0x5B, 0x0A, 0x1C, 0x30, 0x8B, 0x07, 0x75, 0x07, 0xB0, 0x81,
  0xC3, 0x05, 0xB0, 0xA7, 0x50, 0xAB, 0x05, 0x1C, 0x30, 0x3B, 0x0C, 0x75, 0x0C, 0xB8, 0x13, 0x0D,
  0xFB, 0x0E, 0x75, 0x0E, 0xB8, 0x11, 0x0A, 0xFC, 0x01, 0x73, 0x01, 0xB0, 0xE2, 0x01, 0x0E, 0xFB,
  0x04, 0x73, 0x04, 0xB0, 0xB3, 0x81, 0x1A, 0xDF, 0x90, 0x67, 0x30, 0x6B, 0x09, 0x73, 0x07, 0xB0,
  0x97, 0x30, 0x8B, 0x07, 0x73, 0x04, 0xB0, 0xB7, 0x30, 0xBB, 0x04, 0x73, 0x02, 0xB0, 0xD7, 0x30,
  0xDB, 0x02, 0x74, 0xC7, 0x3C, 0x75, 0x0D, 0xB0, 0x37, 0x10, 0x2B, 0x0D, 0x75, 0x0A, 0xB0, 0x57,
  0x10, 0x5B, 0x0A, 0x75, 0x08, 0xFF, 0xA0, 0x87, 0x50, 0x5F, 0xFA, 0x05, 0x75, 0x08, 0xFF, 0xA0,
  0x87, 0x40, 0x7F, 0xFC, 0x07, 0x72, 0x03, 0xD0, 0x80, 0x36, 0x03, 0x08, 0xD0, 0x37, 0x10, 0xDB,
  0x0D, 0x03, 0x73, 0x03, 0x0D, 0xB0, 0xD7, 0x04, 0xC0, 0x34, 0x82, 0x4D, 0xD4, 0x40, 0x3C, 0x04,
  0x60, 0x9B, 0x08, 0x50, 0xDA, 0x0D, 0x50, 0x8B, 0x09, 0x60, 0xCB, 0x03, 0x50, 0xDA, 0x0D, 0x50,
  0x3B, 0x0C, 0x60, 0xEB, 0x68, 0x24, 0xDD, 0x46, 0xB0, 0xE6, 0xC7, 0x72, 0xC6, 0xC7, 0x72, 0xC6,
  0x0D, 0xFF, 0xF9, 0x0D, 0x60, 0xAF, 0xFF, 0x90, 0xA6, 0x01, 0x0E, 0xFF, 0xE0, 0xE0, 0x17, 0x81,
  0x1A, 0xDF, 0xFA, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_blender() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 35, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_blender_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_camera_indoor 48x48, 4-bit Alpha,  RLE, 187 bytes.
static const uint8_t ic_outlined_48_search_camera_indoor_data[] PROGMEM = {
  0x77, 0x10, 0x09, 0x77, 0x77, 0x02, 0x0C, 0xA0, 0xC0, 0x27, 0x77, 0x40, 0x50, 0xEC, 0x0E, 0x05,
  0x77, 0x72, 0x09, 0xF9, 0x09, 0x77, 0x60, 0x20, 0xCF, 0xB0, 0xC0, 0x27, 0x73, 0x05, 0x0E, 0xC8,
  0x2E, 0x55, 0xEC, 0x0E, 0x05, 0x77, 0x10, 0x9D, 0x0C, 0x02, 0x20, 0x20, 0xCD, 0x09, 0x75, 0x02,
  0x0C, 0xD0, 0x96, 0x09, 0xD0, 0xC0, 0x27, 0x20, 0x50, 0xEC, 0x0E, 0x05, 0x71, 0x05, 0x0E, 0xC0,
  0xE0, 0x57, 0x09, 0xD0, 0xC0, 0x27, 0x30, 0x20, 0xCD, 0x09, 0x40, 0x20, 0xCD, 0x09, 0x77, 0x09,
  0xD8, 0x3C, 0x20, 0x5E, 0xC0, 0xE0, 0x57, 0x72, 0x05, 0x0E, 0xC0, 0xE0, 0x5D, 0x0C, 0x02, 0x77,
  0x40, 0x20, 0xCF, 0xA0, 0x97, 0x77, 0x10, 0x9F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x94, 0x04,
  0x0D, 0xF9, 0x0D, 0x04, 0x71, 0xF9, 0x40, 0xDF, 0xB0, 0xD7, 0x1F, 0x94, 0xFD, 0x20, 0x50, 0xD4,
  0xF9, 0x4F, 0xD0, 0x40, 0xCA, 0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFF, 0xA4,
  0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFD, 0x04, 0x0C, 0xA4, 0xF9, 0x4F, 0xD2, 0x05, 0x0D, 0x4F, 0x94,
  0x0D, 0xFB, 0x0D, 0x71, 0xF9, 0x40, 0x40, 0xDF, 0x90, 0xD0, 0x47, 0x1F, 0x97, 0x77, 0x3F, 0x97,
  0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x38, 0x0A, 0x80, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_camera_indoor() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_camera_indoor_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_camera_outdoor 48x48, 4-bit Alpha,  RLE, 176 bytes.
static const uint8_t ic_outlined_48_search_camera_outdoor_data[] PROGMEM = {
  0x77, 0x10, 0x09, 0x77, 0x77, 0x02, 0x0C, 0xA0, 0xC0, 0x27, 0x77, 0x40, 0x50, 0xEC, 0x0E, 0x05,
  0x77, 0x72, 0x09, 0xF9, 0x09, 0x77, 0x60, 0x20, 0xCF, 0xB0, 0xC0, 0x27, 0x73, 0x05, 0x0E, 0xC8,
  0x2E, 0x55, 0xEC, 0x0E, 0x05, 0x77, 0x10, 0x9D, 0x0C, 0x02, 0x20, 0x20, 0xCD, 0x09, 0x75, 0x02,
  0x0C, 0xD0, 0x96, 0x09, 0xD0, 0xC0, 0x27, 0x20, 0x50, 0xEC, 0x0E, 0x05, 0x71, 0x05, 0x0E, 0xC0,
  0xE0, 0x57, 0x09, 0xD0, 0xC0, 0x27, 0x30, 0x20, 0xCD, 0x09, 0x40, 0x20, 0xCD, 0x09, 0x77, 0x09,
  0xD8, 0x3C, 0x20, 0x5E, 0xC0, 0xE0, 0x57, 0x72, 0x05, 0x0E, 0xC0, 0xE0, 0x5D, 0x0C, 0x02, 0x77,
  0x40, 0x20, 0xCF, 0xA0, 0x97, 0x77, 0x10, 0x9F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77,
  0x7C, 0x77, 0x77, 0xC7, 0x50, 0x40, 0xDF, 0x90, 0xD0, 0x44, 0xC7, 0x50, 0xDF, 0xB0, 0xD4, 0xC7,
  0x5F, 0xD2, 0x05, 0x0D, 0xC7, 0x5F, 0xD0, 0x40, 0xCE, 0x75, 0xFF, 0xE7, 0x5F, 0xFE, 0x75, 0xFF,
  0xE7, 0x5F, 0xFE, 0x75, 0xFD, 0x04, 0x0C, 0xE7, 0x5F, 0xD2, 0x05, 0x0D, 0xC7, 0x50, 0xDF, 0xB0,
  0xD4, 0xC7, 0x50, 0x40, 0xDF, 0x90, 0xD0, 0x44, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0x80, 0x9F, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_camera_outdoor() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_camera_outdoor_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_chair_alt 48x48, 4-bit Alpha,  RLE, 113 bytes.
static const uint8_t ic_outlined_48_search_chair_alt_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xE8, 0x4D, 0xA1, 0x01, 0xEF, 0xFF, 0xB8, 0x1E, 0x1A, 0xFF, 0xFD, 0x0A,
  0x0D, 0xFF, 0xFD, 0x0D, 0xC7, 0x76, 0xF9, 0x77, 0x6F, 0x97, 0x76, 0xF9, 0x77, 0x6F, 0x97, 0x76,
  0xF9, 0x77, 0x6C, 0x0D, 0xFF, 0xFD, 0x0D, 0x0A, 0xFF, 0xFD, 0x81, 0xA1, 0xEF, 0xFF, 0xB8, 0x4E,
  0x10, 0x1A, 0xDF, 0xFE, 0x81, 0xDA, 0x17, 0xC7, 0x1C, 0x75, 0xC7, 0x1C, 0x75, 0xC7, 0x1C, 0x75,
  0xC7, 0x1C, 0x78, 0x11, 0xAD, 0xFF, 0xE8, 0x4D, 0xA1, 0x01, 0xEF, 0xFF, 0xB8, 0x1E, 0x1A, 0xFF,
  0xFD, 0x0A, 0x0D, 0xFF, 0xFD, 0x0D, 0xC7, 0x76, 0xF9, 0x77, 0x6F, 0x97, 0x76, 0xF9, 0x77, 0x68,
  0x09, 0xE4, 0xF7, 0x76, 0xF9, 0x77, 0x6F, 0x97, 0x76, 0xF9, 0x77, 0x6F, 0x97, 0x76, 0xF9, 0x77,
  0x6C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_chair_alt() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 6, 37, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_chair_alt_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_chair 48x48, 4-bit Alpha,  RLE, 228 bytes.
static const uint8_t ic_outlined_48_search_chair_data[] PROGMEM = {
  0x72, 0x81, 0x6C, 0xEF, 0xFE, 0x81, 0xEC, 0x67, 0x72, 0x01, 0x0C, 0xFF, 0xFD, 0x0C, 0x01, 0x77,
  0x0C, 0xFF, 0xFF, 0x0C, 0x76, 0x06, 0xFF, 0xFF, 0xA0, 0x67, 0x50, 0xCB, 0x0B, 0x01, 0x77, 0x60,
  0x10, 0xBB, 0x0C, 0x75, 0x0E, 0xB0, 0x17, 0x77, 0x10, 0x1B, 0x0E, 0x75, 0xC7, 0x77, 0x3C, 0x75,
  0xC7, 0x77, 0x3C, 0x75, 0xC7, 0x77, 0x3C, 0x75, 0xC7, 0x77, 0x3C, 0x72, 0x81, 0x6C, 0xEC, 0x77,
  0x73, 0xC8, 0x1E, 0xC6, 0x40, 0x10, 0xCF, 0x01, 0x77, 0x71, 0x01, 0xF0, 0xC0, 0x12, 0x0C, 0xF9,
  0x0C, 0x77, 0x71, 0x0C, 0xF9, 0x81, 0xC0, 0x6F, 0xB0, 0x67, 0x76, 0x06, 0xFB, 0x06, 0x0C, 0xB8,
  0x2B, 0x11, 0xBB, 0x0C, 0x77, 0x60, 0xCB, 0x82, 0xB1, 0x1B, 0xB0, 0xC0, 0xEB, 0x01, 0x20, 0x1B,
  0x0E, 0x77, 0x60, 0xEB, 0x01, 0x20, 0x1B, 0x0E, 0xC4, 0xC7, 0x76, 0xC4, 0xF9, 0x4C, 0x77, 0x6C,
  0x4F, 0x94, 0xC7, 0x76, 0xC4, 0xF9, 0x4C, 0x77, 0x6C, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x94, 0xFF,
  0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x98, 0x0C, 0x00, 0xF9, 0x80, 0xC0,
  0x0C, 0x0E, 0xB0, 0x17, 0x77, 0x76, 0x01, 0xB0, 0xE0, 0xCB, 0x0B, 0x01, 0x77, 0x77, 0x40, 0x10,
  0xBB, 0x0C, 0x06, 0x80, 0xC6, 0xF8, 0x16, 0x0C, 0x80, 0xC4, 0xF0, 0xC2, 0x01, 0x0C, 0x80, 0xC2,
  0xF0, 0xC0, 0x14, 0x81, 0x6C, 0xEF, 0xFF, 0xFC, 0x81, 0xEC, 0x67, 0x2C, 0x77, 0x73, 0xC7, 0x5C,
  0x77, 0x73, 0xC7, 0x50, 0xDA, 0x0D, 0x77, 0x73, 0x0D, 0xA0, 0xD7, 0x58, 0x24, 0xDD, 0x47, 0x77,
  0x38, 0x24, 0xDD, 0x46,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_chair() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 6, 45, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_chair_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_coffee_maker 48x48, 4-bit Alpha,  RLE, 176 bytes.
static const uint8_t ic_outlined_48_search_coffee_maker_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0x01, 0x0E, 0xFF, 0xFF, 0xA0, 0xAF, 0xFF, 0xFB, 0x0D, 0xFF, 0xFF,
  0xF4, 0xFF, 0xE4, 0xC4, 0xFF, 0xE4, 0xC4, 0xFF, 0xE4, 0xC4, 0xFF, 0xE4, 0xC4, 0x0D, 0xFF, 0xC0,
  0xD4, 0xC4, 0x04, 0x0D, 0xFF, 0xA0, 0xD0, 0x44, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x58, 0x24,
  0xDD, 0x47, 0x5C, 0x75, 0x0D, 0xA0, 0xD7, 0x5C, 0x75, 0x0D, 0xA0, 0xD7, 0x5C, 0x75, 0x82, 0x4D,
  0xD4, 0x75, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC4, 0xFF, 0xE4, 0xC4, 0xFF, 0xE4, 0xC4, 0xFF, 0xE4,
  0xC4, 0xFF, 0xE4, 0xC4, 0xC7, 0x5C, 0x4C, 0x4C, 0x75, 0xC4, 0xC4, 0xC7, 0x5C, 0x4C, 0x4C, 0x75,
  0xC4, 0xC4, 0xC7, 0x5C, 0x4C, 0x4C, 0x75, 0xC4, 0xC4, 0x0E, 0xB7, 0x5B, 0x0E, 0x4C, 0x40, 0xCB,
  0x03, 0x73, 0x03, 0xB0, 0xC4, 0xC4, 0x09, 0xB0, 0x87, 0x30, 0x8B, 0x0A, 0x4C, 0x40, 0x4C, 0x03,
  0x71, 0x03, 0xC0, 0x44, 0xC5, 0x0D, 0xB0, 0xD0, 0x36, 0x03, 0x0D, 0xB0, 0xD5, 0xC5, 0x03, 0xD0,
  0x80, 0x32, 0x03, 0x08, 0xD0, 0x35, 0xC6, 0x07, 0xFF, 0x07, 0x6C, 0x70, 0x7F, 0xD0, 0x77, 0x0D,
  0xFF, 0xFF, 0xB0, 0xAF, 0xFF, 0xFB, 0x01, 0x0E, 0xFF, 0xFF, 0xA1, 0x81, 0x1A, 0xDF, 0xFF, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_coffee_maker() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_coffee_maker_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_coffee 48x48, 4-bit Alpha,  RLE, 208 bytes.
static const uint8_t ic_outlined_48_search_coffee_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFC, 0x82, 0xEC, 0x71, 0x30, 0x10, 0xEF, 0xFF, 0xFA, 0x0E, 0x05, 0x20,
  0xAF, 0xFF, 0xFD, 0x81, 0x50, 0xDF, 0xFF, 0xFD, 0x0E, 0x01, 0xC7, 0x76, 0xC1, 0x01, 0x07, 0xC0,
  0x7C, 0x77, 0x6C, 0x30, 0x7B, 0x0C, 0xC7, 0x76, 0xC3, 0x01, 0xB0, 0xEC, 0x77, 0x6C, 0x30, 0x1B,
  0x0E, 0xC7, 0x76, 0xC3, 0x07, 0xB0, 0xCC, 0x77, 0x6C, 0x10, 0x10, 0x7C, 0x07, 0xFF, 0xFF, 0xE0,
  0xE0, 0x1F, 0xFF, 0xFE, 0x05, 0x1F, 0xFF, 0xFC, 0x0E, 0x05, 0x2F, 0xFF, 0xF9, 0x82, 0xEC, 0x71,
  0x3C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x10, 0xDB, 0x77, 0x6B, 0x0E, 0x71, 0x0C, 0xB0, 0x27,
  0x74, 0x02, 0xB0, 0xD7, 0x10, 0xAB, 0x05, 0x77, 0x40, 0x5B, 0x0B, 0x71, 0x05, 0xB0, 0xA7, 0x74,
  0x0A, 0xB0, 0x77, 0x10, 0x1C, 0x02, 0x77, 0x20, 0x2C, 0x02, 0x72, 0x0A, 0xB0, 0xA7, 0x72, 0x0A,
  0xB0, 0xD7, 0x30, 0x2C, 0x07, 0x77, 0x07, 0xC0, 0x57, 0x40, 0x9C, 0x07, 0x75, 0x07, 0xC0, 0xB7,
  0x60, 0xCC, 0x0A, 0x02, 0x71, 0x02, 0x0A, 0xC0, 0xE0, 0x27, 0x60, 0x20, 0xED, 0x81, 0xA5, 0x22,
  0x81, 0x25, 0xAE, 0x03, 0x77, 0x10, 0x20, 0xDF, 0xFA, 0x0E, 0x04, 0x77, 0x30, 0x10, 0xAF, 0xF0,
  0xC0, 0x17, 0x76, 0x04, 0x0C, 0xFB, 0x0C, 0x05, 0x77, 0x73, 0x89, 0x02, 0x8B, 0xDF, 0xED, 0xB7,
  0x38, 0x09, 0xA5, 0x0F, 0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_coffee() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 43, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_coffee_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_dining 48x48, 4-bit Alpha,  RLE, 246 bytes.
static const uint8_t ic_outlined_48_search_dining_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x58, 0x7B, 0xB0, 0x4E, 0x40, 0xBB, 0x58, 0x36, 0xCF, 0xC6, 0x71,
  0xF9, 0x5A, 0x18, 0x17, 0xF7, 0x1A, 0x40, 0x9D, 0x09, 0x7F, 0x95, 0xA1, 0x81, 0x7F, 0x71, 0xA3,
  0x05, 0xF0, 0x56, 0xF9, 0x5A, 0x18, 0x17, 0xF7, 0x1A, 0x30, 0xDF, 0x0D, 0x6F, 0x95, 0xA1, 0x81,
  0x7F, 0x71, 0xA2, 0x02, 0xFA, 0x02, 0x5F, 0x95, 0xA1, 0x81, 0x7F, 0x71, 0xA2, 0x06, 0xFA, 0x05,
  0x5F, 0x95, 0xFA, 0x20, 0x7F, 0xA0, 0x75, 0xF9, 0x5F, 0xA2, 0x06, 0xFA, 0x06, 0x5F, 0x95, 0xFA,
  0x20, 0x4F, 0xA0, 0x45, 0xF9, 0x50, 0xDF, 0x0D, 0x30, 0xEF, 0x90, 0x15, 0xF9, 0x50, 0x7F, 0x07,
  0x30, 0x9F, 0x09, 0x6F, 0x96, 0x0A, 0xD0, 0xA4, 0x01, 0x0E, 0xD0, 0xE0, 0x16, 0xF9, 0x70, 0x3B,
  0x03, 0x60, 0x30, 0xDB, 0x0D, 0x03, 0x7F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7,
  0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F,
  0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97,
  0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x1B,
  0x72, 0xB7, 0x2F, 0x97, 0x1B, 0x72, 0xB7, 0x2F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4C, 0x0D,
  0x80, 0xC2, 0xF0, 0xD0, 0xA8, 0x0C, 0x2F, 0x81, 0xA1, 0xE8, 0x0C, 0x0F, 0x84, 0xE1, 0x01, 0xAD,
  0xFF, 0xFF, 0xC8, 0x1D, 0xA1, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_dining() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_dining_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_door_back 48x48, 4-bit Alpha,  RLE, 128 bytes.
static const uint8_t ic_outlined_48_search_door_back_data[] PROGMEM = {
  0x58, 0x11, 0xAD, 0xFF, 0xE8, 0x1D, 0xA1, 0x72, 0x01, 0x0E, 0xFF, 0xFB, 0x0E, 0x01, 0x71, 0x0A,
  0xFF, 0xFD, 0x0A, 0x71, 0x0D, 0xFF, 0xFD, 0x0D, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71,
  0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76,
  0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C,
  0x77, 0x6C, 0x71, 0xC4, 0xC7, 0x5C, 0x71, 0xC4, 0xC7, 0x5C, 0x71, 0xC4, 0xC7, 0x5C, 0x71, 0xC4,
  0xC7, 0x5C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C,
  0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7,
  0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x48, 0x0A, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_door_back() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_door_back_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_doorbell 48x48, 4-bit Alpha,  RLE, 188 bytes.
static const uint8_t ic_outlined_48_search_doorbell_data[] PROGMEM = {
  0x77, 0x10, 0x09, 0x77, 0x77, 0x02, 0x0C, 0xA0, 0xC0, 0x27, 0x77, 0x40, 0x50, 0xEC, 0x0E, 0x05,
  0x77, 0x72, 0x09, 0xF9, 0x09, 0x77, 0x60, 0x20, 0xCF, 0xB0, 0xC0, 0x27, 0x73, 0x05, 0x0E, 0xC8,
  0x2E, 0x55, 0xEC, 0x0E, 0x05, 0x77, 0x10, 0x9D, 0x0C, 0x02, 0x20, 0x20, 0xCD, 0x09, 0x75, 0x02,
  0x0C, 0xD0, 0x96, 0x09, 0xD0, 0xC0, 0x27, 0x20, 0x50, 0xEC, 0x0E, 0x05, 0x71, 0x05, 0x0E, 0xC0,
  0xE0, 0x57, 0x09, 0xD0, 0xC0, 0x27, 0x30, 0x20, 0xCD, 0x09, 0x40, 0x20, 0xCD, 0x09, 0x77, 0x09,
  0xD8, 0x3C, 0x20, 0x5E, 0xC0, 0xE0, 0x56, 0x82, 0x2D, 0xD2, 0x60, 0x50, 0xEC, 0x0E, 0x05, 0xD0,
  0xC0, 0x27, 0x07, 0xA0, 0x77, 0x02, 0x0C, 0xFA, 0x09, 0x78, 0x11, 0x9E, 0xA8, 0x1E, 0x92, 0x70,
  0x9F, 0x97, 0x03, 0x0E, 0xE0, 0xE0, 0x37, 0xF9, 0x70, 0xDF, 0x90, 0xD7, 0xF9, 0x60, 0x7F, 0xB0,
  0x66, 0xF9, 0x60, 0xCF, 0xB0, 0xB6, 0xF9, 0x60, 0xEF, 0xB0, 0xD6, 0xF9, 0x6F, 0xD6, 0xF9, 0x6F,
  0xD6, 0xF9, 0x6F, 0xD6, 0xF9, 0x6F, 0xD6, 0xF9, 0x6F, 0xD6, 0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFF,
  0xA4, 0xF9, 0x77, 0x73, 0xF9, 0x73, 0x0D, 0xA0, 0xD7, 0x3F, 0x97, 0x38, 0x24, 0xDD, 0x47, 0x3F,
  0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x38, 0x0A, 0x80, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_doorbell() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_doorbell_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_door_front 48x48, 4-bit Alpha,  RLE, 128 bytes.
static const uint8_t ic_outlined_48_search_door_front_data[] PROGMEM = {
  0x58, 0x11, 0xAD, 0xFF, 0xE8, 0x1D, 0xA1, 0x72, 0x01, 0x0E, 0xFF, 0xFB, 0x0E, 0x01, 0x71, 0x0A,
  0xFF, 0xFD, 0x0A, 0x71, 0x0D, 0xFF, 0xFD, 0x0D, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71,
  0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76,
  0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C,
  0x77, 0x6C, 0x71, 0xC7, 0x5C, 0x4C, 0x71, 0xC7, 0x5C, 0x4C, 0x71, 0xC7, 0x5C, 0x4C, 0x71, 0xC7,
  0x5C, 0x4C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C,
  0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7,
  0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x71, 0xC7, 0x76, 0xC7, 0x1C, 0x77, 0x6C, 0x48, 0x0A, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_door_front() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_door_front_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_door_sliding 48x48, 4-bit Alpha,  RLE, 144 bytes.
static const uint8_t ic_outlined_48_search_door_sliding_data[] PROGMEM = {
  0x38, 0x11, 0xAD, 0xFF, 0xFB, 0x81, 0xDA, 0x15, 0x01, 0x0E, 0xFF, 0xFF, 0x0E, 0x01, 0x40, 0xAF,
  0xFF, 0xFA, 0x0A, 0x40, 0xDF, 0xFF, 0xFA, 0x0D, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x4C, 0x2C, 0x2C, 0x4C, 0x4C, 0x4C, 0x2C,
  0x2C, 0x4C, 0x4C, 0x4C, 0x2C, 0x2C, 0x4C, 0x4C, 0x4C, 0x2C, 0x2C, 0x4C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C,
  0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x4C, 0x73, 0xC7, 0x3C, 0x28, 0x0A, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_door_sliding() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_door_sliding_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_feed 48x48, 4-bit Alpha,  RLE, 142 bytes.
static const uint8_t ic_outlined_48_search_feed_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xF9, 0x07, 0x72, 0x01, 0x0E, 0xFF, 0xFC, 0x07, 0x71, 0x0A, 0xFF, 0xFE,
  0x07, 0x70, 0xDF, 0xFF, 0xF0, 0x76, 0xC7, 0x76, 0xE0, 0x75, 0xC7, 0x76, 0xF0, 0x74, 0xC7, 0x76,
  0xF9, 0x07, 0x3C, 0x77, 0x6F, 0xA0, 0x72, 0xC4, 0xFB, 0x6F, 0xB0, 0x71, 0xC4, 0xFB, 0x6F, 0xC0,
  0x7C, 0x4F, 0xB6, 0xFF, 0xA4, 0xFB, 0x6F, 0xFA, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77,
  0xF9, 0x77, 0x77, 0xF9, 0x4F, 0xFE, 0x4F, 0x94, 0xFF, 0xE4, 0xF9, 0x4F, 0xFE, 0x4F, 0x94, 0xFF,
  0xE4, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0xFE,
  0x4F, 0x94, 0xFF, 0xE4, 0xF9, 0x4F, 0xFE, 0x4F, 0x94, 0xFF, 0xE4, 0xF9, 0x77, 0x77, 0xF9, 0x77,
  0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xC0, 0xDF, 0xFF, 0xFE, 0x0D, 0x0A, 0xFF, 0xFF, 0xE8,
  0x1A, 0x1E, 0xFF, 0xFF, 0xC8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xF8, 0x1D, 0xA1, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_feed() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_feed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_flatware 48x48, 4-bit Alpha,  RLE, 241 bytes.
static const uint8_t ic_outlined_48_search_flatware_data[] PROGMEM = {
  0x89, 0x28, 0xE6, 0x01, 0xDD, 0x10, 0x6E, 0x85, 0x84, 0x3A, 0xEE, 0xB3, 0x58, 0x2E, 0xD9, 0x34,
  0xA8, 0x1D, 0x06, 0xA8, 0x16, 0x0D, 0xA4, 0x06, 0xE0, 0x64, 0xC0, 0xA0, 0x12, 0xA8, 0x1D, 0x06,
  0xA8, 0x16, 0x0D, 0xA3, 0x04, 0xF9, 0x04, 0x3D, 0x0C, 0x2A, 0x81, 0xD0, 0x6A, 0x81, 0x60, 0xDA,
  0x30, 0xDF, 0x90, 0xD3, 0xE0, 0x91, 0xA8, 0x1D, 0x06, 0xA8, 0x16, 0x0D, 0xA2, 0x05, 0xFB, 0x05,
  0x2F, 0x02, 0xA8, 0x1D, 0x06, 0xA8, 0x16, 0x0D, 0xA2, 0x09, 0xFB, 0x0A, 0x2F, 0x09, 0xA8, 0x1D,
  0x06, 0xA8, 0x16, 0x0D, 0xA2, 0x0D, 0xFB, 0x0D, 0x2F, 0x0C, 0xA8, 0x1D, 0x06, 0xA8, 0x16, 0x0D,
  0xA2, 0x0E, 0xFB, 0x0E, 0x2F, 0x0E, 0xFD, 0x20, 0xEF, 0xB0, 0xE2, 0xFF, 0xE2, 0x0D, 0xFB, 0x0D,
  0x2F, 0xFE, 0x20, 0xBF, 0xB0, 0xB2, 0xFF, 0xE2, 0x06, 0xFB, 0x06, 0x2F, 0x90, 0xDF, 0xB0, 0xD3,
  0x0E, 0xF9, 0x0E, 0x3F, 0x90, 0xAF, 0xB0, 0xA3, 0x06, 0xF9, 0x06, 0x3F, 0x90, 0x10, 0xEF, 0x90,
  0xE0, 0x14, 0x0A, 0xE0, 0xA4, 0xF9, 0x18, 0x11, 0xAD, 0xC8, 0x1D, 0xA1, 0x60, 0x6C, 0x06, 0x5F,
  0x94, 0xC7, 0x3C, 0x6F, 0x94, 0xC7, 0x3C, 0x6F, 0x94, 0xC7, 0x3C, 0x6F, 0x94, 0xC7, 0x3C, 0x6F,
  0x94, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C,
  0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C,
  0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C,
  0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C, 0x71, 0xC7, 0x3C, 0x6C,
  0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_flatware() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_flatware_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_garage 48x48, 4-bit Alpha,  RLE, 238 bytes.
static const uint8_t ic_outlined_48_search_garage_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x96, 0x0A, 0xFF, 0xC0, 0xA6, 0xF9, 0x50, 0x9F, 0xFE, 0x09, 0x5F, 0x94, 0x01, 0xFF, 0xF9,
  0x01, 0x4F, 0x94, 0x05, 0xFF, 0xF9, 0x05, 0x4F, 0x94, 0x0B, 0xB0, 0x77, 0x70, 0x7B, 0x0B, 0x4F,
  0x93, 0x01, 0xC0, 0x27, 0x70, 0x2C, 0x01, 0x3F, 0x93, 0x05, 0xB0, 0xC7, 0x72, 0x0C, 0xB0, 0x53,
  0xF9, 0x30, 0xBB, 0x07, 0x77, 0x20, 0x7B, 0x0A, 0x3F, 0x92, 0x01, 0xFF, 0xFD, 0x01, 0x2F, 0x92,
  0x05, 0xFF, 0xFD, 0x05, 0x2F, 0x92, 0x0A, 0xFF, 0xFD, 0x0A, 0x2F, 0x92, 0xFF, 0xFF, 0x2F, 0x92,
  0xC7, 0x76, 0xC2, 0xF9, 0x2C, 0x28, 0x24, 0xDD, 0x47, 0x18, 0x24, 0xDD, 0x42, 0xC2, 0xF9, 0x2C,
  0x20, 0xDA, 0x0D, 0x71, 0x0D, 0xA0, 0xD2, 0xC2, 0xF9, 0x2C, 0x20, 0xDA, 0x0D, 0x71, 0x0D, 0xA0,
  0xD2, 0xC2, 0xF9, 0x2C, 0x28, 0x24, 0xDD, 0x47, 0x18, 0x24, 0xDD, 0x42, 0xC2, 0xF9, 0x2C, 0x77,
  0x6C, 0x2F, 0x92, 0xFF, 0xFF, 0x2F, 0x92, 0xFF, 0xFF, 0x2F, 0x92, 0xFF, 0xFF, 0x2F, 0x92, 0xFF,
  0xFF, 0x2F, 0x92, 0xC7, 0x76, 0xC2, 0xF9, 0x2C, 0x77, 0x6C, 0x2F, 0x92, 0x0E, 0xA0, 0xE7, 0x76,
  0x0E, 0xA0, 0xE2, 0xF9, 0x28, 0x27, 0xEE, 0x77, 0x76, 0x82, 0x7F, 0xE7, 0x2F, 0x97, 0x77, 0x74,
  0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xC0, 0xD8, 0x0C, 0x2F, 0x0D, 0x0A, 0x80, 0xC2, 0xF8,
  0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xFC, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_garage() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_garage_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_light 48x48, 4-bit Alpha,  RLE, 231 bytes.
static const uint8_t ic_outlined_48_search_light_data[] PROGMEM = {
  0x77, 0x2C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x82, 0x15, 0x8C, 0xC8, 0x2C, 0x85, 0x17, 0x77, 0x10, 0x40, 0xAF, 0xD0, 0xA0,
  0x47, 0x74, 0x03, 0x0C, 0xFF, 0xA0, 0xC0, 0x37, 0x71, 0x08, 0xFF, 0xE0, 0x87, 0x60, 0xBE, 0x82,
  0xC7, 0x42, 0x28, 0x22, 0x47, 0xCE, 0x0B, 0x73, 0x01, 0x0C, 0xD0, 0xA0, 0x27, 0x30, 0x20, 0xAD,
  0x0C, 0x01, 0x71, 0x0B, 0xC0, 0xD0, 0x37, 0x70, 0x30, 0xDC, 0x0B, 0x70, 0x8C, 0x0B, 0x01, 0x77,
  0x20, 0x10, 0xBC, 0x08, 0x50, 0x4C, 0x0B, 0x77, 0x60, 0xBC, 0x04, 0x40, 0xCB, 0x0D, 0x01, 0x77,
  0x60, 0x10, 0xDB, 0x0C, 0x30, 0x4C, 0x03, 0x77, 0x71, 0x03, 0xC0, 0x42, 0x0B, 0xB0, 0xA7, 0x77,
  0x30, 0xAB, 0x81, 0xB0, 0x1C, 0x02, 0x77, 0x73, 0x02, 0xC0, 0x10, 0x5B, 0x0C, 0x77, 0x75, 0x0C,
  0xB0, 0x50, 0x9B, 0x07, 0x77, 0x75, 0x07, 0xB0, 0x90, 0xBB, 0x03, 0x77, 0x75, 0x03, 0xB0, 0xB0,
  0xDB, 0x02, 0x77, 0x75, 0x02, 0xB0, 0xD0, 0xEB, 0x77, 0x77, 0xB0, 0xE0, 0xDF, 0xFF, 0xFE, 0x0D,
  0x09, 0xFF, 0xFF, 0xE8, 0x19, 0x1E, 0xFF, 0xFF, 0xC8, 0x4E, 0x10, 0x19, 0xDF, 0xFF, 0xF8, 0x1D,
  0x91, 0x74, 0x0E, 0xB0, 0x16, 0x01, 0xB0, 0xE7, 0x76, 0x0C, 0xB0, 0x56, 0x05, 0xB0, 0xC7, 0x76,
  0x08, 0xB0, 0xD0, 0x14, 0x01, 0x0D, 0xB0, 0x87, 0x76, 0x02, 0xC8, 0x4D, 0x51, 0x15, 0xDC, 0x02,
  0x77, 0x70, 0x9F, 0xD0, 0x97, 0x77, 0x20, 0xBF, 0xB0, 0xB7, 0x77, 0x40, 0x9F, 0x90, 0x97, 0x77,
  0x68, 0x62, 0x8C, 0xEE, 0xC8, 0x27, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_light() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_light_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_living 48x48, 4-bit Alpha,  RLE, 262 bytes.
static const uint8_t ic_outlined_48_search_living_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77,
  0x4F, 0x97, 0x77, 0x74, 0xF9, 0x78, 0x12, 0x9D, 0xFD, 0x81, 0xD9, 0x27, 0xF9, 0x60, 0x6F, 0xFC,
  0x06, 0x6F, 0x95, 0x05, 0xFF, 0xE0, 0x55, 0xF9, 0x50, 0xDA, 0x0C, 0x03, 0x75, 0x03, 0x0C, 0xA0,
  0xD5, 0xF9, 0x40, 0x4A, 0x0D, 0x01, 0x77, 0x01, 0x0D, 0xA0, 0x44, 0xF9, 0x40, 0x6A, 0x09, 0x77,
  0x20, 0x9A, 0x06, 0x4F, 0x94, 0x07, 0xA0, 0x77, 0x72, 0x07, 0xA0, 0x74, 0xF9, 0x40, 0x7A, 0x07,
  0x77, 0x20, 0x7A, 0x07, 0x4F, 0x94, 0x08, 0xA8, 0x1E, 0xA3, 0x75, 0x81, 0x3A, 0xEA, 0x08, 0x4F,
  0x93, 0x07, 0xE0, 0x77, 0x30, 0x7E, 0x07, 0x3F, 0x92, 0x04, 0xF9, 0x03, 0x71, 0x03, 0xF9, 0x04,
  0x2F, 0x92, 0x0B, 0xA8, 0x2B, 0x11, 0xBA, 0x0B, 0x71, 0x0B, 0xA8, 0x2B, 0x11, 0xBA, 0x0B, 0x2F,
  0x92, 0x0E, 0xA0, 0x12, 0x01, 0xA0, 0xE7, 0x10, 0xEA, 0x01, 0x20, 0x1A, 0x0E, 0x2F, 0x92, 0xB4,
  0xB7, 0x1B, 0x4B, 0x2F, 0x92, 0xB4, 0xFF, 0x4B, 0x2F, 0x92, 0xB4, 0xFF, 0x4B, 0x2F, 0x92, 0xB4,
  0xFF, 0x4B, 0x2F, 0x92, 0xB7, 0x77, 0x1B, 0x2F, 0x92, 0xB7, 0x77, 0x1B, 0x2F, 0x92, 0xB7, 0x77,
  0x1B, 0x2F, 0x92, 0x0D, 0xA0, 0x37, 0x76, 0x03, 0xA0, 0xD2, 0xF9, 0x20, 0xAF, 0xFF, 0xD0, 0xA2,
  0xF9, 0x20, 0x10, 0xEF, 0xFF, 0xB0, 0xE0, 0x12, 0xF9, 0x38, 0x11, 0xAD, 0xFF, 0xE8, 0x1D, 0xA1,
  0x3F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4C, 0x0D,
  0x80, 0xC2, 0xF0, 0xD0, 0xA8, 0x0C, 0x2F, 0x81, 0xA1, 0xE8, 0x0C, 0x0F, 0x84, 0xE1, 0x01, 0xAD,
  0xFF, 0xFF, 0xC8, 0x1D, 0xA1, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_living() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_living_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_manage_search 48x48, 4-bit Alpha,  RLE, 182 bytes.
static const uint8_t ic_outlined_48_search_manage_search_data[] PROGMEM = {
  0x77, 0x68, 0x65, 0x9D, 0xEE, 0xD9, 0x57, 0x77, 0x72, 0x04, 0x0D, 0xF9, 0x0D, 0x04, 0x73, 0xFB,
  0x70, 0x8F, 0xD0, 0x87, 0x2F, 0xB6, 0x08, 0xFF, 0x08, 0x71, 0xFB, 0x50, 0x4D, 0x08, 0x03, 0x20,
  0x30, 0x8D, 0x04, 0x7F, 0xB5, 0x0D, 0xB0, 0xD0, 0x36, 0x03, 0x0D, 0xB0, 0xD7, 0x77, 0x05, 0xC0,
  0x37, 0x10, 0x3C, 0x05, 0x77, 0x60, 0x9B, 0x08, 0x73, 0x08, 0xB0, 0x97, 0x76, 0x0D, 0xB0, 0x37,
  0x30, 0x3B, 0x0D, 0x77, 0x60, 0xEB, 0x75, 0xB0, 0xE7, 0x76, 0x0E, 0xB7, 0x5B, 0x0E, 0x77, 0x60,
  0xDB, 0x03, 0x73, 0x03, 0xB0, 0xD6, 0xFB, 0x40, 0x9B, 0x08, 0x73, 0x08, 0xB0, 0xA6, 0xFB, 0x40,
  0x5C, 0x03, 0x71, 0x03, 0xC0, 0x56, 0xFB, 0x50, 0xDB, 0x0D, 0x03, 0x60, 0x30, 0xDB, 0x0D, 0x7F,
  0xB5, 0x04, 0xD0, 0x80, 0x32, 0x03, 0x08, 0xD0, 0x87, 0x77, 0x20, 0x8F, 0xFA, 0x05, 0x77, 0x72,
  0x08, 0xFF, 0xA0, 0x57, 0x77, 0x20, 0x40, 0xDF, 0x90, 0xD0, 0x8D, 0x05, 0x77, 0x73, 0x86, 0x59,
  0xDE, 0xFD, 0xA5, 0x20, 0x5D, 0x05, 0x77, 0x77, 0x60, 0x5D, 0x05, 0x77, 0x77, 0x60, 0x5D, 0x05,
  0x1F, 0xFE, 0x76, 0x05, 0xD0, 0x5F, 0xFE, 0x77, 0x05, 0xC0, 0xAF, 0xFE, 0x77, 0x10, 0x5A, 0x0A,
  0x1F, 0xFE, 0x77, 0x20, 0x50, 0xA2,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_manage_search() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 12, 43, 37), Box(0, 0, 47, 47),
      ic_outlined_48_search_manage_search_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_podcasts 48x48, 4-bit Alpha,  RLE, 417 bytes.
static const uint8_t ic_outlined_48_search_podcasts_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x73, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x71,
  0x09, 0xF8, 0x2B, 0x63, 0x22, 0x82, 0x23, 0x6B, 0xF0, 0x97, 0x60, 0xAD, 0x0E, 0x06, 0x75, 0x06,
  0x0E, 0xD0, 0xA7, 0x40, 0xAD, 0x07, 0x77, 0x20, 0x7D, 0x0A, 0x72, 0x09, 0xC0, 0xE0, 0x37, 0x74,
  0x03, 0x0E, 0xC0, 0x97, 0x05, 0xC0, 0xC0, 0x15, 0x89, 0x01, 0x6A, 0xDE, 0xED, 0xA6, 0x15, 0x01,
  0x0C, 0xC0, 0x55, 0x01, 0x0E, 0xB0, 0xE0, 0x14, 0x01, 0x09, 0xFB, 0x09, 0x01, 0x40, 0x10, 0xEB,
  0x0E, 0x01, 0x40, 0x9C, 0x03, 0x40, 0x40, 0xEF, 0xD0, 0xE0, 0x44, 0x03, 0xC0, 0x93, 0x01, 0xC0,
  0x74, 0x06, 0xFF, 0xA0, 0x64, 0x07, 0xC0, 0x12, 0x08, 0xB0, 0xE4, 0x04, 0xD8, 0x1C, 0x62, 0x28,
  0x12, 0x6C, 0xD0, 0x44, 0x0E, 0xB0, 0x82, 0x0D, 0xB0, 0x63, 0x01, 0x0E, 0xC0, 0x67, 0x10, 0x6C,
  0x0E, 0x01, 0x30, 0x6B, 0x81, 0xD0, 0x3C, 0x40, 0x9C, 0x04, 0x73, 0x04, 0xC0, 0x94, 0xC0, 0x30,
  0x7B, 0x0B, 0x30, 0x1C, 0x06, 0x75, 0x06, 0xC0, 0x13, 0x0B, 0xB0, 0x70, 0xAB, 0x06, 0x30, 0x6B,
  0x0C, 0x48, 0x41, 0xAD, 0xDA, 0x14, 0x0C, 0xB0, 0x63, 0x06, 0xB0, 0xA0, 0xCB, 0x03, 0x30, 0xBB,
  0x06, 0x30, 0x10, 0xEC, 0x0E, 0x01, 0x30, 0x6B, 0x0B, 0x30, 0x3B, 0x0C, 0x0E, 0xB0, 0x23, 0x0D,
  0xB0, 0x23, 0x0A, 0xE0, 0xA3, 0x02, 0xB0, 0xD3, 0x02, 0xB0, 0xEC, 0x40, 0xEB, 0x40, 0xDE, 0x0D,
  0x4B, 0x0E, 0x4F, 0x94, 0x0E, 0xB4, 0x0E, 0xE0, 0xE4, 0xB0, 0xE4, 0xC0, 0xEB, 0x02, 0x30, 0xDB,
  0x02, 0x30, 0xAE, 0x0A, 0x30, 0x2B, 0x0D, 0x30, 0x2B, 0x0E, 0x0C, 0xB0, 0x43, 0x0A, 0xB0, 0x73,
  0x02, 0x0E, 0xC0, 0xE0, 0x23, 0x07, 0xB0, 0xA3, 0x04, 0xB0, 0xC0, 0xAB, 0x06, 0x30, 0x6B, 0x0D,
  0x40, 0x1C, 0x01, 0x40, 0xDB, 0x06, 0x30, 0x6B, 0x0A, 0x07, 0xB0, 0xB3, 0x01, 0xC0, 0x74, 0xC4,
  0x07, 0xC0, 0x13, 0x0B, 0xB0, 0x70, 0x3C, 0x01, 0x30, 0x9C, 0x04, 0x3C, 0x30, 0x4C, 0x09, 0x30,
  0x1C, 0x81, 0x30, 0xDB, 0x06, 0x30, 0x10, 0xEA, 0x0E, 0x03, 0x3C, 0x30, 0x30, 0xEA, 0x0E, 0x01,
  0x30, 0x6B, 0x0D, 0x20, 0x7B, 0x0E, 0x48, 0x24, 0xFE, 0x34, 0xC4, 0x82, 0x3E, 0xF4, 0x40, 0xEB,
  0x07, 0x20, 0x1C, 0x08, 0x40, 0x50, 0x35, 0xC5, 0x03, 0x05, 0x40, 0x8C, 0x01, 0x30, 0x8C, 0x03,
  0x73, 0xC7, 0x30, 0x3C, 0x08, 0x40, 0x10, 0xEB, 0x0E, 0x02, 0x72, 0xC7, 0x20, 0x20, 0xEB, 0x0E,
  0x01, 0x50, 0x5C, 0x0C, 0x72, 0xC7, 0x20, 0xCC, 0x05, 0x70, 0x8A, 0x0E, 0x03, 0x72, 0xC7, 0x20,
  0x30, 0xEA, 0x08, 0x72, 0x81, 0xAE, 0x37, 0x3C, 0x73, 0x81, 0x3E, 0xA7, 0x40, 0x37, 0x4C, 0x74,
  0x03, 0x77, 0x73, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC7,
  0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_podcasts() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_podcasts_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_shower 48x48, 4-bit Alpha,  RLE, 197 bytes.
static const uint8_t ic_outlined_48_search_shower_data[] PROGMEM = {
  0x75, 0xC7, 0x77, 0x3C, 0x77, 0x73, 0xC7, 0x77, 0x3C, 0x77, 0x78, 0x13, 0x7B, 0xC8, 0x1B, 0x73,
  0x77, 0x20, 0x50, 0xCF, 0xB0, 0xC0, 0x57, 0x50, 0x10, 0xBF, 0xF0, 0xB0, 0x17, 0x20, 0x30, 0xEF,
  0xFA, 0x0E, 0x03, 0x70, 0x40, 0xED, 0x81, 0xA5, 0x22, 0x81, 0x25, 0xAD, 0x0E, 0x04, 0x50, 0x10,
  0xEC, 0x0A, 0x02, 0x71, 0x02, 0x0A, 0xC0, 0xE0, 0x14, 0x0B, 0xC0, 0x77, 0x50, 0x7C, 0x0B, 0x30,
  0x5C, 0x07, 0x77, 0x07, 0xC0, 0x52, 0x0C, 0xB0, 0xA7, 0x72, 0x0A, 0xB8, 0x1C, 0x03, 0xC0, 0x27,
  0x72, 0x02, 0xC0, 0x30, 0x7B, 0x0A, 0x77, 0x40, 0xAB, 0x07, 0x0B, 0xB0, 0x57, 0x74, 0x05, 0xB0,
  0xB0, 0xDB, 0x02, 0x77, 0x40, 0x2B, 0x0D, 0x0E, 0xB7, 0x76, 0xB0, 0xE8, 0x09, 0xD4, 0xF8, 0x09,
  0xE0, 0x08, 0x24, 0xDD, 0x44, 0x82, 0x4D, 0xD4, 0x48, 0x24, 0xDD, 0x47, 0x10, 0xDA, 0x0D, 0x40,
  0xDA, 0x0D, 0x40, 0xDA, 0x0D, 0x71, 0x0D, 0xA0, 0xD4, 0x0D, 0xA0, 0xD4, 0x0D, 0xA0, 0xD7, 0x18,
  0x24, 0xDD, 0x44, 0x82, 0x4D, 0xD4, 0x48, 0x24, 0xDD, 0x48, 0x0F, 0x40, 0x82, 0x4D, 0xD4, 0x48,
  0x24, 0xDD, 0x44, 0x82, 0x4D, 0xD4, 0x71, 0x0D, 0xA0, 0xD4, 0x0D, 0xA0, 0xD4, 0x0D, 0xA0, 0xD7,
  0x10, 0xDA, 0x0D, 0x40, 0xDA, 0x0D, 0x40, 0xDA, 0x0D, 0x71, 0x82, 0x4D, 0xD4, 0x48, 0x24, 0xDD,
  0x44, 0x82, 0x4D, 0xD4, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_shower() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 6, 37, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_shower_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_table_bar 48x48, 4-bit Alpha,  RLE, 232 bytes.
static const uint8_t ic_outlined_48_search_table_bar_data[] PROGMEM = {
  0x73, 0x86, 0x14, 0x79, 0xAC, 0xDD, 0xC8, 0x6D, 0xDC, 0xA9, 0x74, 0x17, 0x72, 0x82, 0x26, 0xBE,
  0xFF, 0xE8, 0x2E, 0xB6, 0x27, 0x30, 0x50, 0xCF, 0xFF, 0xF0, 0xC0, 0x56, 0x04, 0x0D, 0xFF, 0xFF,
  0xC0, 0xD0, 0x43, 0x09, 0xF9, 0x86, 0xEB, 0x86, 0x43, 0x11, 0x48, 0x61, 0x13, 0x46, 0x8B, 0xEF,
  0x98, 0x19, 0x07, 0xE8, 0x1B, 0x62, 0x77, 0x68, 0x12, 0x6B, 0xE0, 0x70, 0xDB, 0x81, 0xE7, 0x17,
  0x77, 0x58, 0x11, 0x7E, 0xB0, 0x0D, 0xB8, 0x1E, 0x71, 0x77, 0x75, 0x81, 0x17, 0xEB, 0x0D, 0x07,
  0xE8, 0x1B, 0x62, 0x77, 0x68, 0x12, 0x6B, 0xE8, 0x17, 0x09, 0xF9, 0x86, 0xEB, 0x86, 0x43, 0x11,
  0x48, 0x61, 0x13, 0x46, 0x8B, 0xEF, 0x90, 0x93, 0x05, 0x0D, 0xFF, 0xFF, 0xC0, 0xD0, 0x56, 0x05,
  0x0C, 0xFF, 0xFF, 0x0C, 0x05, 0x73, 0x82, 0x16, 0xAE, 0xFF, 0xE8, 0x2E, 0xA6, 0x17, 0x72, 0x86,
  0x24, 0x79, 0xBB, 0xDE, 0xC8, 0x6E, 0xDB, 0xB9, 0x74, 0x27, 0x77, 0x7C, 0x80, 0xC0, 0x0C, 0x80,
  0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0,
  0x0C, 0x77, 0x77, 0x28, 0x14, 0xCE, 0xFB, 0x81, 0xEC, 0x47, 0x77, 0x20, 0x5F, 0xFA, 0x05, 0x77,
  0x71, 0x0E, 0xFF, 0xA0, 0xE7, 0x77, 0x06, 0xFF, 0xC0, 0x67, 0x76, 0x0C, 0xB0, 0x37, 0x30, 0x3B,
  0x0C, 0x77, 0x50, 0x3B, 0x0C, 0x75, 0x0C, 0xB0, 0x37, 0x74, 0x09, 0xB0, 0x67, 0x50, 0x6B, 0x09,
  0x77, 0x40, 0xEA, 0x0E, 0x77, 0x0E, 0xA0, 0xE7, 0x73, 0x06, 0xB0, 0x97, 0x70, 0x9B, 0x06, 0x77,
  0x20, 0xCB, 0x03, 0x77, 0x03, 0xB0, 0xC7, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_table_bar() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 39), Box(0, 0, 47, 47),
      ic_outlined_48_search_table_bar_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_table_restaurant 48x48, 4-bit Alpha,  RLE, 211 bytes.
static const uint8_t ic_outlined_48_search_table_restaurant_data[] PROGMEM = {
  0x30, 0x60, 0xEF, 0xFF, 0xFA, 0x0E, 0x06, 0x50, 0x1F, 0xFF, 0xFE, 0x01, 0x40, 0x5F, 0xFF, 0xFE,
  0x05, 0x40, 0x9F, 0xFF, 0xFE, 0x09, 0x40, 0xEB, 0x03, 0x77, 0x75, 0x03, 0xB0, 0xE3, 0x03, 0xB0,
  0xE7, 0x77, 0x70, 0xEB, 0x03, 0x20, 0x7B, 0x0A, 0x77, 0x77, 0x09, 0xB0, 0x72, 0x0C, 0xB0, 0x57,
  0x77, 0x70, 0x5B, 0x81, 0xC0, 0x1C, 0x01, 0x77, 0x77, 0x01, 0xC0, 0x10, 0x5B, 0x0C, 0x77, 0x77,
  0x20, 0xCB, 0x05, 0x09, 0x80, 0xC2, 0xF0, 0x90, 0xD8, 0x0C, 0x2F, 0x00, 0xD8, 0x0C, 0x2F, 0x81,
  0xD4, 0xD8, 0x0C, 0x0F, 0x0D, 0x04, 0x60, 0xAB, 0x05, 0x77, 0x40, 0x5B, 0x0A, 0x75, 0x0C, 0xB0,
  0x37, 0x74, 0x03, 0xB0, 0xC7, 0x50, 0xEB, 0x01, 0x77, 0x40, 0x1B, 0x0E, 0x74, 0x01, 0xB0, 0xE7,
  0x76, 0x0E, 0xB0, 0x17, 0x30, 0x3F, 0xFF, 0xF0, 0x37, 0x30, 0x5F, 0xFF, 0xF0, 0x57, 0x30, 0x7F,
  0xFF, 0xF0, 0x77, 0x30, 0x9F, 0xFF, 0xF0, 0x97, 0x30, 0xBB, 0x04, 0x77, 0x60, 0x3B, 0x0B, 0x73,
  0x0D, 0xB0, 0x27, 0x76, 0x01, 0xB0, 0xD7, 0x3C, 0x77, 0x71, 0xC7, 0x20, 0x2B, 0x0D, 0x77, 0x71,
  0x0D, 0xB0, 0x27, 0x10, 0x4B, 0x0B, 0x77, 0x71, 0x0B, 0xB0, 0x47, 0x10, 0x6B, 0x09, 0x77, 0x71,
  0x09, 0xB0, 0x67, 0x10, 0x8B, 0x07, 0x77, 0x71, 0x07, 0xB0, 0x87, 0x10, 0xAB, 0x05, 0x77, 0x71,
  0x05, 0xB0, 0xA7, 0x10, 0xCB, 0x03, 0x77, 0x71, 0x03, 0xB0, 0xC7, 0x10, 0xEB, 0x01, 0x77, 0x71,
  0x01, 0xB0, 0xE4,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_table_restaurant() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 39), Box(0, 0, 47, 47),
      ic_outlined_48_search_table_restaurant_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_window 48x48, 4-bit Alpha,  RLE, 130 bytes.
static const uint8_t ic_outlined_48_search_window_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0x84, 0xDA, 0x10, 0x1E, 0xFF, 0xFF, 0xC8, 0x1E, 0x1A, 0xFF, 0xFF,
  0xE0, 0xA0, 0xDF, 0xFF, 0xFE, 0x0D, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75,
  0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x58,
  0x0A, 0xA4, 0xF7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F,
  0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C,
  0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x0D, 0xFF, 0xFF, 0xE0,
  0xD0, 0xAF, 0xFF, 0xFE, 0x81, 0xA1, 0xEF, 0xFF, 0xFC, 0x84, 0xE1, 0x01, 0xAD, 0xFF, 0xFF, 0x81,
  0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_window() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_outlined_48_search_window_data, Alpha4(color::Black));
  return value;
}

// Image file ic_outlined_48_search_yard 48x48, 4-bit Alpha,  RLE, 296 bytes.
static const uint8_t ic_outlined_48_search_yard_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xDC, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x82,
  0x15, 0x51, 0x77, 0xF9, 0x76, 0x03, 0x0E, 0xA0, 0xE0, 0x37, 0x6F, 0x97, 0x60, 0xDC, 0x0D, 0x76,
  0xF9, 0x72, 0x82, 0x28, 0x95, 0xE8, 0x25, 0x98, 0x27, 0x2F, 0x97, 0x10, 0x4F, 0xF0, 0x47, 0x1F,
  0x97, 0x10, 0xCF, 0xF0, 0xC7, 0x1F, 0x97, 0x10, 0xED, 0x82, 0x83, 0x38, 0xD0, 0xE7, 0x1F, 0x97,
  0x10, 0xBC, 0x07, 0x40, 0x7C, 0x0B, 0x71, 0xF9, 0x71, 0x03, 0x0E, 0xB6, 0xB0, 0xE0, 0x37, 0x1F,
  0x97, 0x20, 0xAA, 0x0E, 0x60, 0xEA, 0x0A, 0x72, 0xF9, 0x71, 0x08, 0xC0, 0x34, 0x03, 0xC0, 0x87,
  0x1F, 0x97, 0x10, 0xEC, 0x0C, 0x01, 0x20, 0x10, 0xCC, 0x0E, 0x71, 0xF9, 0x71, 0x0E, 0xD8, 0x2E,
  0xBB, 0xED, 0x0E, 0x71, 0xF9, 0x71, 0x09, 0xFF, 0x09, 0x71, 0xF9, 0x72, 0x0A, 0xA0, 0xDE, 0x0D,
  0xA0, 0xA7, 0x2F, 0x97, 0x40, 0x11, 0xE1, 0x01, 0x74, 0xF9, 0x48, 0x3D, 0xDA, 0x61, 0x40, 0x9C,
  0x09, 0x48, 0x31, 0x6A, 0xDD, 0x4F, 0x94, 0x0D, 0xC0, 0x90, 0x13, 0x82, 0x8D, 0xD8, 0x30, 0x10,
  0x9C, 0x0D, 0x4F, 0x94, 0x0B, 0xD0, 0xE0, 0x47, 0x10, 0x40, 0xED, 0x0B, 0x4F, 0x94, 0x06, 0xF0,
  0x66, 0x06, 0xF0, 0x64, 0xF9, 0x40, 0x1F, 0x90, 0x44, 0x04, 0xF9, 0x01, 0x4F, 0x95, 0x09, 0xF0,
  0xE0, 0x12, 0x01, 0x0E, 0xF0, 0x95, 0xF9, 0x50, 0x10, 0xEF, 0x09, 0x20, 0x9F, 0x0E, 0x01, 0x5F,
  0x96, 0x04, 0xF9, 0x00, 0x1F, 0x90, 0x46, 0xF9, 0x70, 0x6F, 0x00, 0x6F, 0x06, 0x7F, 0x97, 0x10,
  0x40, 0xED, 0x00, 0xBD, 0x0E, 0x04, 0x71, 0xF9, 0x72, 0x01, 0x09, 0xC0, 0x0D, 0xC0, 0x90, 0x17,
  0x2F, 0x97, 0x48, 0x90, 0x16, 0xAD, 0xDD, 0xDA, 0x61, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77,
  0x74, 0xC0, 0xD8, 0x0C, 0x2F, 0x0D, 0x0A, 0x80, 0xC2, 0xF8, 0x1A, 0x1E, 0x80, 0xC0, 0xF8, 0x4E,
  0x10, 0x1A, 0xDF, 0xFF, 0xFC, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_outlined_48_search_yard() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_outlined_48_search_yard_data, Alpha4(color::Black));
  return value;
}
